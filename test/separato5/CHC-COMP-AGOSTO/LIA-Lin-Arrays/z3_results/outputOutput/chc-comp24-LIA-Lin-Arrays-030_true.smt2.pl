% Automatically generated by smt2map




:- pred 'main@_bb'(int,int,int,array(int),int,array(int)).
:- mode 'main@_bb'(in,in,in,in,in,in).
:- pred 'main@verifier.error.split'.
:- pred 'main@_bb12'(int,array(int),int,array(int),int,int,int,int).
:- mode 'main@_bb12'(in,in,in,in,in,in,in,in).
:- pred 'main@_bb4'(int,int,array(int),int,int,array(int)).
:- mode 'main@_bb4'(in,in,in,in,in,in).
:- pred 'main@_bb9'(int,array(int),int,array(int),int,int).
:- mode 'main@_bb9'(in,in,in,in,in,in).
:- pred 'main@_bb7'(int,array(int),int,array(int),int).
:- mode 'main@_bb7'(in,in,in,in,in).
:- pred 'main@entry'(int).
:- mode 'main@entry'(in).
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

'main@entry'(A) :- constr((true)).
'main@_bb'(A,B,C,D,E,F) :- 'main@entry'(A), 
          constr((~ (B=<0)&(G=true&(and(H,G)&(not(G)&(D=I&(not(G)&(not(H)&(I=J&(not(G)&(not(H)&(C=K&(not(G)&(not(H)&(K=0&(not(G)&(not(H)& ~ (E=<0)))))))))))))))))).
'main@_bb'(A,B,C,D,E,F) :- 'main@_bb'(A,B,G,H,E,F), 
          constr((~ ((5=<G)=I)&(J=true&(and(K,L)&(not(K)&(not(B=<0)&(not(K)&(M=store(H,N,O)&(not(K)&(P=1+G&(not(K)&(N=B+G&(not(K)&(Q=A&(not(K)&(and(K,J)&(not(J)&(D=R&(not(J)&(not(K)&(R=M&(not(J)&(not(K)&(C=S&(not(J)&(not(K)&(S=P&(not(J)&(not(K)&(I&(not(K)&(not(L)&(B=<0&(not(K)&not(N=<0))))))))))))))))))))))))))))))))))).
'main@_bb4'(A,B,C,D,E,F) :- 'main@_bb'(A,B,G,C,D,H), 
          constr((~ ((5=<G)=I)&(J=true&(K&(not(L)&(and(L,M)&(not(L)&(not(B=<0)&(not(L)&(N=select(C,O)&(not(L)&(O=4+B&(not(L)&(K=(N=0)&(not(L)&(and(L,J)&(not(J)&(F=P&(not(J)&(not(L)&(P=H&(not(J)&(not(L)&(E=Q&(not(J)&(not(L)&(Q=0&(not(J)&(not(L)&(not(M)&(not(I)&(not(L)&(B=<0&(not(L)&not(O=<0))))))))))))))))))))))))))))))))))).
'main@_bb4'(A,B,C,D,E,F) :- 'main@_bb4'(A,B,C,D,G,H), 
          constr((~ ((5=<G)=I)&(J=true&(and(K,L)&(not(K)&(not(D=<0)&(not(K)&(M=store(H,N,O)&(not(K)&(P=1+G&(not(K)&(N=D+G&(not(K)&(Q=A&(not(K)&(and(K,J)&(not(J)&(F=R&(not(J)&(not(K)&(R=M&(not(J)&(not(K)&(E=S&(not(J)&(not(K)&(S=P&(not(J)&(not(K)&(I&(not(K)&(not(L)&(D=<0&(not(N=<0)&not(K))))))))))))))))))))))))))))))))))).
'main@_bb7'(A,B,C,D,E) :- 'main@_bb4'(F,A,B,C,G,D), 
          constr((~ ((5=<G)=H)&(I=true&(and(I,J)&(not(I)&(K&(not(J)&(and(J,L)&(not(J)&(not(C=<0)&(not(J)&(M=4+C&(not(J)&(N=select(D,M)&(not(J)&(K=(N=0)&(not(J)&(E=O&(not(I)&(not(J)&(O=0&(not(I)&(not(J)&(not(L)&(not(H)&(not(J)&(C=<0&(not(M=<0)&not(J))))))))))))))))))))))))))))).
'main@_bb7'(A,B,C,D,E) :- 'main@_bb7'(A,B,C,D,F), 
          constr((G=(H=0)&(I=true&(and(I,J)&(not(I)&(and(J,K)&(not(J)&(L=1+F&(not(J)&(A=<0&(not(M=<0)&(E=N&(not(I)&(not(J)&(N=L&(not(I)&(not(J)&(not(G)&(not(K)&(not(J)&(~ (A=<0)&(H=select(B,M)&M=A+F)))))))))))))))))))))).
'main@_bb9'(A,B,C,D,E,F) :- 'main@_bb7'(A,B,C,D,F), 
          constr((G=(H=0)&(I=true&(and(J,I)&(not(I)&(not(K=<0)&(A=<0&(G&(not(I)&(not(J)&(E=L&(not(I)&(not(J)&(L=0&(not(I)&(not(J)&(~ (A=<0)&(H=select(B,K)&K=A+F)))))))))))))))))).
'main@_bb9'(A,B,C,D,E,F) :- 'main@_bb9'(A,B,C,D,G,F), 
          constr((H=(I=0)&(J=true&(and(K,L)&(not(K)&(M=1+G&(not(K)&(and(K,J)&(not(J)&(C=<0&(not(N=<0)&(E=O&(not(J)&(not(K)&(O=M&(not(J)&(not(K)&(not(L)&(not(H)&(not(K)&(~ (C=<0)&(I=select(D,N)&N=C+G)))))))))))))))))))))).
'main@_bb12'(A,B,C,D,E,F,G,H) :- 'main@_bb9'(A,B,C,D,G,H), 
          constr((I=or(not(J),not((H=<G)=K))&(L=(M=0)&(N=true&(or(not(J),not(K))&(or(not(J),and(J,O))&(I&(or(not(N),and(J,N))&(or(C=<0,not(P=<0))&(or(not(J),not(O),L)&(or(not(J),not(N),E=Q)&(or(not(J),not(N),Q=0)&(or(not(J),not(N),F=R)&(or(not(J),not(N),R=0)&(not(C=<0)&(P=C+G&M=select(D,P))))))))))))))))).
'main@_bb12'(A,B,C,D,E,F,G,H) :- 'main@_bb12'(A,B,C,D,I,J,G,H), 
          constr((K=or(not(L),M=I+ - 1*N)&(not((G=<J)=O)&(P=true&(or(not(L),and(L,Q))&(or(not(L),not(C=<0))&(or(not(L),not(A=<0))&(or(not(L),R=1+M)&(or(not(L),S=ite(T,U,0))&(K&(or(not(L),N=ite(T,0,J))&(or(not(L),U=1+J)&(or(not(L),V=select(D,W))&(or(not(L),X=select(B,Y))&(or(not(L),W=C+J)&(or(not(L),Y=A+I)&(or(not(L),T=(X=V))&(or(not(P),and(L,P))&(or(not(L),not(P),E=Z)&(or(not(L),not(P),Z=R)&(or(not(L),not(P),F=A1)&(or(not(L),not(P),A1=S)&(or(B1,not(L),not(Q))&(or(C=<0,not(L),not(W=<0))&(or(A=<0,not(L),not(Y=<0))&(B1=and(O,C1)&not((H=<I)=C1))))))))))))))))))))))))))).
'main@verifier.error.split' :- 'main@_bb12'(A,B,C,D,E,F,G,H), 
          constr((I=or(not(J),not((F=<K)=L))&(not((H=<E)=M)&(N=true&(or(not(J),not(O))&(or(not(J),and(J,P))&(or(not(J),Q=ite(R,1,0))&(or(not(J),K= - 1+G)&(or(not(J),R=or(S,L))&(or(not(J),not(L=S))&(I&(or(not(T),and(J,T))&(or(not(N),and(N,U))&(or(not(U),and(U,V))&(or(not(V),and(V,W))&(or(not(W),X)&(or(not(W),and(T,W))&(or(not(W),X=(Q=0))&(or(not(J),not(Y),not(P))&(Y=and(Z,M)&not((G=<F)=Z))))))))))))))))))))).
ff :- 'main@verifier.error.split', constr((true)).

