; Automatically generated by map2smt

(set-logic HORN)

(declare-fun incorrect ( ) Bool)
(declare-fun new1 ( Int (Array Int Int) (Array Int Int) Int Int Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and (= I 0) (= J (+ 1 H)) (= K 1) (>= (- A H) 1) (>= (- L M) 1) (= (select B H) L) (= (select C H) M) (new1 A B C I E F G J))
      (new1 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and (= I 0) (= J (+ 1 H)) (= K 1) (<= (- L M) (- 1)) (>= (- A H) 1) (= (select B H) L) (= (select C H) M) (new1 A B C I E F G J))
      (new1 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= I (+ 1 H)) (= J 1) (>= (- A H) 1) (= (select B H) K) (= (select C H) K) (new1 A B C D E F G I))
      (new1 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= D 1) (= I 1) (= J 1) (= K 0) (<= (- F E) (- 1)) (>= G 0) (>= (- H A) 0) (>= (- A G) 1) (= (select B G) F) (= (select C G) E))
      (new1 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= D 1) (= I 1) (= J 1) (= K 0) (>= G 0) (>= (- H A) 0) (>= (- A G) 1) (>= (- F E) 1) (= (select B G) F) (= (select C G) E))
      (new1 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E (Array Int Int)) (F (Array Int Int)) (G Int) (H Int) (I Int) )
    (=>
      (and (= A 1) (= B 1) (= C 0) (>= D 1) (new1 D E F A G H I C))
      incorrect
    )
  )
)

(assert (not incorrect))
(check-sat)
