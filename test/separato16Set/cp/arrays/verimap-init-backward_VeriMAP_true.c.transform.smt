; Automatically generated by map2smt

(set-logic HORN)

(declare-fun incorrect ( ) Bool)
(declare-fun new1 ( Int Int (Array Int Int) Int Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B Int) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N (Array Int Int)) )
    (=>
      (and (= A (+ 1 H)) (= I (+ 1 H)) (= J 0) (= K (+ 1 H)) (= L 1) (= M 0) (>= H 0) (= (store C H M ) N) (new1 H B N D E F G))
      (new1 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= H 0) (= I 0) (= J 0) (<= A 0) (<= F (- 1)) (>= G 0) (>= (- B G) 1) (= (select C G) F))
      (new1 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= H 0) (= I 0) (= J 0) (<= A 0) (>= G 0) (>= F 1) (>= (- B G) 1) (= (select C G) F))
      (new1 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= A 1) (>= B 1) (new1 B B C D E F G))
      incorrect
    )
  )
)

(assert (not incorrect))
(check-sat)
