; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new4 ( Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= A 0) (= E 0) (= F 0))
      (new4 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D 1) (= E 0) (>= A 1) (new4 D A B C))
      (new3 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D 0) (= E 0) (<= A 0) (new4 D A B C))
      (new3 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= D 0) (= E 4) (= F 1) (>= C 1) (new3 E F C))
      (new2 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= D 0) (= E 100) (= F 2) (<= C 0) (new3 E F C))
      (new2 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (= A 1) (= B 4) (new2 B C A))
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
