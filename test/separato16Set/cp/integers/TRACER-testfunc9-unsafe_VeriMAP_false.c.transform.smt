; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new8 ( Int Int ) Bool)
(declare-fun new7 ( Int Int Int ) Bool)
(declare-fun new5 ( Int ) Bool)
(declare-fun new6 ( Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int ) Bool)
(declare-fun new2 ( Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= A 0) (= C 0) (= D 0))
      (new8 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= B 15) (= D 15) (= E 15) (= F 15) (= G 15) (new5 G))
      (new7 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= D 15) (= E 20) (= F 20) (>= B 16) (new5 F))
      (new7 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= D 15) (= E 20) (= F 20) (<= B 14) (new5 F))
      (new7 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= B 5) (= D 5) (= E 5) (= F 5) (= G 5) (new5 G))
      (new6 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 5) (>= B 6) (new7 A B C))
      (new6 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 5) (<= B 4) (new7 A B C))
      (new6 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (= B 1) (= C 15) (>= A 16) (new8 B A))
      (new5 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (= B 1) (= C 15) (<= A 14) (new8 B A))
      (new5 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= A 15) (= B 0) (= C 15) (= D 15) (new8 B A))
      (new5 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= B 0) (= D 0) (= E 0) (= F 0) (= G 0) (new5 G))
      (new4 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 0) (>= B 1) (new6 A B C))
      (new4 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 0) (<= B (- 1)) (new6 A B C))
      (new4 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (new4 A D C)
      (new3 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (new3 B C A)
      (new2 A)
    )
  )
)
(assert
  (forall ( (A Int) )
    (=>
      (new2 A)
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
