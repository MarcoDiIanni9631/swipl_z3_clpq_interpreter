; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new15 ( Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new10 ( Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new14 ( Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new13 ( Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new12 ( Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new11 ( Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new9 ( Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new8 ( Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new7 ( Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int ) Bool)
(declare-fun new4 ( Int Int ) Bool)
(declare-fun new3 ( Int Int ) Bool)
(declare-fun new2 ( Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and (= K (+ (- 1) E)) (= L 1) (new10 A B M D K F G M I J))
      (new15 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= K 0) (= L (- B A)) (>= F 1) (new15 A L C D E F G H I J))
      (new14 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= K 0) (= L (- B A)) (<= F (- 1)) (new15 A L C D E F G H I J))
      (new14 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and (= F 0) (= K 0) (= L 0) (= M (- C A)) (new10 A B M D E F G H I J))
      (new14 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (new14 A B C D E K K H I J)
      (new13 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= K 0) (>= C 1) (new13 A B C D E F G H I J))
      (new12 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= K 0) (>= B 1) (new12 A B C D E F G H I J))
      (new11 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (new11 A B C D E F G H I J)
      (new10 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and (= A 0) (= L 0) (= M 0))
      (new9 A B C D E F G H I J K)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= L 0) (>= A 1) (new10 B C D E F G H I J K))
      (new9 A B C D E F G H I J K)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= L 0) (<= A (- 1)) (new10 B C D E F G H I J K))
      (new9 A B C D E F G H I J K)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= K 1) (= L 2) (>= E 2) (new9 K A B C D E F G H I J))
      (new8 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= K 0) (= L 2) (<= E 1) (new9 K A B C D E F G H I J))
      (new8 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= K (* 2 E)) (= L 2) (>= (- D E) 1) (new6 A B C D K F G H I J))
      (new7 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (>= (- E D) 0) (new8 A B C D E F G H I J))
      (new7 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (new7 A B C D E F G H I J)
      (new6 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= C 2) (= D 1) (new6 C E F G D H I J A B))
      (new5 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= C 1) (= D 1) (new6 C E F G D H I J A B))
      (new4 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (= C 0) (>= A 1) (new4 A B))
      (new3 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (= C 0) (<= A (- 1)) (new4 A B))
      (new3 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= A 0) (= C 0) (= D 0) (new5 A B))
      (new3 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (new3 C C)
      (new2 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (new2 A B)
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
