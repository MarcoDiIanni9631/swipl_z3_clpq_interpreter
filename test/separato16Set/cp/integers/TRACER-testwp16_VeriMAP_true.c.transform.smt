; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new5 ( Int Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= A 0) (= F 0) (= G 0))
      (new5 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= E 1) (= F 1000) (<= A 1000) (new5 E A B C D))
      (new4 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= E 0) (= F 1000) (>= A 1001) (new5 E A B C D))
      (new4 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= A (+ (- 1) E)) (= C 3) (= F 3) (= G 3) (= H (+ (- 1) E)) (= I 1) (= J (+ 1 E)) (= K 1) (new4 J B C D))
      (new3 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= E 3) (= F (+ 1 A)) (= G 1) (>= C 4) (new4 F B C D))
      (new3 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= E 3) (= F (+ 1 A)) (= G 1) (<= C 2) (new4 F B C D))
      (new3 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= B 0) (= E 0) (= F 0) (new3 A B C D))
      (new2 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= E 0) (= F (+ 1 A)) (= G 1) (>= B 1) (new4 F B C D))
      (new2 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= E 0) (= F (+ 1 A)) (= G 1) (<= B (- 1)) (new4 F B C D))
      (new2 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and (= A 1) (new2 A B B B))
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
