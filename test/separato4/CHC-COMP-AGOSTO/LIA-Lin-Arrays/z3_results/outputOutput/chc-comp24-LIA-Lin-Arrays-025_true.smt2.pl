% Automatically generated by smt2map




:- pred 'main@entry'(int,array(int),int).
:- mode 'main@entry'(in,in,in).
:- pred 'main@orig.main.exit.split'.
:- pred 'main@.lr.ph'(int,array(int),int).
:- mode 'main@.lr.ph'(in,in,in).
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

'main@entry'(A,B,C) :- constr((true)).
'main@.lr.ph'(A,B,C) :- 'main@entry'(A,D,E), 
          constr((~ ((F=<0)=G)&(H=true&(and(I,J)&(not(I)&(and(I,H)&(not(H)&(B=K&(not(H)&(not(I)&(K=L&(not(H)&(not(I)&(G&(not(I)&(not(J)&(L=store(M,C,F)&(M=store(D,C,0)&N=E)))))))))))))))))).
'main@.lr.ph'(A,B,C) :- 'main@.lr.ph'(A,D,C), 
          constr((~ ((E=<1)=F)&(G=true&(and(H,G)&(not(G)&(F&(not(G)&(not(H)&(B=I&(not(G)&(not(H)&(I=J&(not(G)&(not(H)&(J=store(D,C,K)&(K= - 1+E&(L=A&E=select(D,C)))))))))))))))))).
'main@orig.main.exit.split' :- 'main@entry'(A,B,C), 
          constr((~ ((D=<0)=E)&(F=true&(~G&(and(F,G)&(not(F)&(not(H)&(not(G)&(and(I,G)&(not(G)&(not(E)&(not(G)&(not(I)&(J=K&(not(G)&(not(I)&(L=J&(not(G)&(not(I)&(K=store(M,N,D)&(M=store(B,N,0)&O=C))))))))))))))))))))).
'main@orig.main.exit.split' :- 'main@.lr.ph'(A,B,C), 
          constr((~ ((D=<1)=E)&(F=true&(~G&(and(H,I)&(not(H)&(and(F,G)&(not(F)&(not(J)&(not(G)&(and(H,G)&(not(G)&(not(I)&(not(E)&(not(H)&(K=L&(not(G)&(not(H)&(M=K&(not(G)&(not(H)&(L=store(B,C,N)&(D=select(B,C)&(O=A&N= - 1+D)))))))))))))))))))))))).
ff :- 'main@orig.main.exit.split', constr((true)).

