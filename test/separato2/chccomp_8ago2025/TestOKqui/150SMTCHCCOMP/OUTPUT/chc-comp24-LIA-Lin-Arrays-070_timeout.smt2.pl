% Automatically generated by smt2map




:- pred 'main@entry'.
:- pred 'main@verifier.error.split'.
:- pred 'main@bb28.i'(int,int,array(int),int,int,array(int)).
:- mode 'main@bb28.i'(in,in,in,in,in,in).
:- pred 'main@bb11.i'(int,int,array(int),int,array(int),int).
:- mode 'main@bb11.i'(in,in,in,in,in,in).
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

'main@entry' :- constr((true)).
'main@bb11.i'(A,B,C,D,E,F) :- 'main@entry', 
          constr((~ ((F=<0)=G)&(H=true&(G=true&(and(I,H)&(not(H)&(E=J&(not(H)&(not(I)&(C=K&(not(H)&(not(I)&(J=L&(not(H)&(not(I)&(K=M&(not(H)&(not(I)&(B=N&(not(H)&(not(I)&(N=0&(not(H)&(not(I)&(~ (D=<0)& ~ (A=<0)))))))))))))))))))))))))).
'main@bb11.i'(A,B,C,D,E,F) :- 'main@bb11.i'(A,G,H,D,I,F), 
          constr((~ ((F=<G)=J)&(K=true&(and(L,M)&(not(L)&(not(D=<0)&(not(L)&(not(A=<0)&(not(L)&(N=store(I,O,P)&(not(L)&(Q=store(H,R,P)&(not(L)&(S=1+G&(not(L)&(O=D+G&(not(L)&(R=A+G&(not(L)&(and(L,K)&(not(K)&(E=T&(not(K)&(not(L)&(C=U&(not(K)&(not(L)&(T=N&(not(K)&(not(L)&(U=Q&(not(K)&(not(L)&(B=V&(not(K)&(not(L)&(V=S&(not(K)&(not(L)&(not(M)&(J&(not(L)&(D=<0&(not(L)&(not(O=<0)&(A=<0&(not(L)&not(R=<0)))))))))))))))))))))))))))))))))))))))))))))))).
'main@bb28.i'(A,B,C,D,E,F) :- 'main@bb11.i'(A,G,H,B,C,D), 
          constr((~ ((D=<G)=I)&(J=true&(and(K,J)&(not(J)&(not(I)&(not(J)&(not(K)&(L=H&(not(J)&(not(K)&(F=L&(not(J)&(not(K)&(E=M&(not(J)&(not(K)&(M=0&(not(J)&not(K)))))))))))))))))))).
'main@bb28.i'(A,B,C,D,E,F) :- 'main@bb28.i'(A,B,C,D,G,H), 
          constr((I=or(not(J),K=L+ - 1*G)&(not((D=<G)=M)&(N=true&(or(not(J),and(J,O))&(or(not(J),not(B=<0))&(or(not(J),not(A=<0))&(or(not(J),P=store(H,Q,R))&(or(not(J),Q=A+G)&(or(not(J),S=B+K)&(or(not(J),L= - 1+D)&(or(not(J),T=1+G)&(or(not(J),R=select(C,S))&(I&(or(not(N),and(J,N))&(or(not(J),not(N),U=P)&(or(not(J),not(N),F=U)&(or(not(J),not(N),E=V)&(or(not(J),not(N),V=T)&(or(not(J),not(O),M)&(or(not(S=<0),not(J),B=<0)&or(not(J),not(Q=<0),A=<0)))))))))))))))))))))).
'main@verifier.error.split' :- 'main@bb28.i'(A,B,C,D,E,F), 
          constr((G=or(not(H),I=J+ - 1*K)&(L=or(not(M),not((K=< - 1)=N))&(O=or(not(M),not((D=<K)=P))&(not((D=<E)=Q)&(R=true&(or(not(R),and(R,S))&(or(not(S),and(S,T))&(or(not(T),and(T,H))&(or(not(H),not(U))&(or(not(H),and(H,M))&(or(not(H),not(A=<0))&(or(not(H),not(B=<0))&(or(not(H),U=(V=W))&(or(not(H),W=select(C,X))&(or(not(H),V=select(F,Y))&(or(not(H),J= - 1+D)&(or(not(H),Y=A+K)&(G&(or(not(H),X=B+I)&(or(not(M),Z)&(or(not(M),and(M,A1))&(or(not(M),Z=and(N,P))&(L&(O&(or(not(Q),not(M),not(A1))&(or(not(H),not(Y=<0),A=<0)&or(not(H),not(X=<0),B=<0)))))))))))))))))))))))))))).
ff :- 'main@verifier.error.split', constr((true)).

