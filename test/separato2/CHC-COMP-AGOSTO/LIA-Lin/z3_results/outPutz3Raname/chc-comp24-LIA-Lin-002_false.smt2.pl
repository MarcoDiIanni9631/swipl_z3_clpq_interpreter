% Automatically generated by smt2map




:- pred 'main@precall5.split'.
:- pred 'main@.lr.ph'(int,int).
:- mode 'main@.lr.ph'(in,in).
:- pred 'main@entry'(int,int).
:- mode 'main@entry'(in,in).
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

'main@entry'(A,B) :- constr((true)).
'main@.lr.ph'(A,B) :- 'main@entry'(C,D), 
          constr((~ ((B=<1)=E)&(F=true&(~G&(and(H,I)&(not(H)&(and(H,F)&(not(F)&(A=J&(not(F)&(not(H)&(J=1&(not(F)&(not(H)&(E&(not(H)&(not(I)&(K=D&(L=D&(M=D&N=C)))))))))))))))))))).
'main@.lr.ph'(A,B) :- 'main@.lr.ph'(C,B), 
          constr((~ ((B=<D)=E)&(F=true&(and(G,F)&(not(F)&(E&(not(F)&(not(G)&(A=H&(not(F)&(not(G)&(H=D&(not(F)&(not(G)&D=2*C)))))))))))))).
'main@precall5.split' :- 'main@entry'(A,B), 
          constr((~ ((C=<1)=D)&(E=true&(~F&(not(G)&(not(H)&(and(E,G)&(not(E)&(I&(not(G)&(and(J,G)&(not(G)&(not(K=I)&(not(G)&(not(L)&(not(G)&(not(J)&(not(G)&(not(D)&(not(J)&(not(G)&(K=L&(not(J)&(M=B&(N=B&(O=B&P=A)))))))))))))))))))))))))).
'main@precall5.split' :- 'main@.lr.ph'(A,B), 
          constr((C=or(not(D),not((E=<1)=F))&(not((B=<G)=H)&(I=true&(or(not(J),not(K))&(or(not(D),and(D,L))&(C&(or(not(I),and(I,K))&(or(not(K),M)&(or(not(K),and(D,K))&(or(not(K),not(N=M))&(or(not(D),N=O,not(K))&(or(not(D),not(K),O=F)&(or(not(D),not(L),not(H))&(or(not(D),not(L),E=P)&(or(not(D),not(L),P=G)&G=2*A)))))))))))))))).
ff :- 'main@precall5.split', constr((true)).

