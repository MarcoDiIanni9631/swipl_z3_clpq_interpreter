% Automatically generated by smt2map




:- pred 'main@entry'(int,array(int),int).
:- mode 'main@entry'(in,in,in).
:- pred 'main@orig.main.exit.split'.
:- pred 'main@.lr.ph'(int,array(int),int).
:- mode 'main@.lr.ph'(in,in,in).
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

'main@entry'(A,B,C) :- constr((true)).
'main@.lr.ph'(A,B,C) :- 'main@entry'(A,D,E), 
          constr((and(F=E,and(G=store(D,C,0),and(H=store(G,C,I),and(or(not(J),not(K),L),and(or(not(K),not(M),N=H),and(or(not(K),not(M),B=N),and(or(not(M),and(K,M)),and(or(not(K),and(K,J)),and(M=true,not((I=<0)=L)))))))))))).
'main@.lr.ph'(A,B,C) :- 'main@.lr.ph'(A,D,C), 
          constr((and(E=select(D,C),and(F=A,and(G= - 1+E,and(H=store(D,C,G),and(or(not(I),not(J),K=H),and(or(not(I),not(J),B=K),and(or(not(I),not(J),L),and(or(not(J),and(I,J)),and(J=true,not((E=<1)=L)))))))))))).
'main@orig.main.exit.split' :- 'main@entry'(A,B,C), 
          constr((and(D=C,and(E=store(B,F,0),and(G=store(E,F,H),and(or(not(I),not(J),K=L),and(or(not(I),not(J),L=G),and(or(not(I),not(J),not(M)),and(or(not(J),and(I,J)),and(or(not(J),not(N)),and(or(not(O),and(O,J)),and(not(J),and(O=true,not((H=<0)=M)))))))))))))).
'main@orig.main.exit.split' :- 'main@.lr.ph'(A,B,C), 
          constr((and(D= - 1+E,and(F=A,and(E=select(B,C),and(G=store(B,C,D),and(or(not(H),not(I),J=K),and(or(not(H),not(I),K=G),and(or(not(H),not(L),not(M)),and(or(not(I),and(H,I)),and(or(not(I),not(N)),and(or(not(O),and(O,I)),and(or(not(H),and(H,M)),and(not(I),and(O=true,not((E=<1)=L)))))))))))))))).
ff :- 'main@orig.main.exit.split', constr((true)).

