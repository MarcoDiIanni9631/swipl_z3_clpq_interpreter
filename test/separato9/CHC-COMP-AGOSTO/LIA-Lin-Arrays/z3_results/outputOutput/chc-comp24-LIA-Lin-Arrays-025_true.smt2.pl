% Automatically generated by smt2map




:- pred 'main@entry'(int,array(int),int).
:- mode 'main@entry'(in,in,in).
:- pred 'main@orig.main.exit.split'.
:- pred 'main@.lr.ph'(int,array(int),int).
:- mode 'main@.lr.ph'(in,in,in).
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

'main@entry'(A,B,C) :- constr((true)).
'main@.lr.ph'(A,B,C) :- 'main@entry'(A,D,E), 
          constr((~ ((F=<0)=G)&(H=true&(or(not(I),and(I,J))&(or(not(H),and(I,H))&(or(not(I),or(not(H),B=K))&(or(not(I),or(not(H),K=L))&(or(not(J),or(not(I),G))&(L=store(M,C,F)&(M=store(D,C,0)&N=E)))))))))).
'main@.lr.ph'(A,B,C) :- 'main@.lr.ph'(A,D,C), 
          constr((~ ((E=<1)=F)&(G=true&(or(not(G),and(H,G))&(or(not(H),or(not(G),F))&(or(not(H),or(not(G),B=I))&(or(not(H),or(not(G),I=J))&(J=store(D,C,K)&(K= - 1+E&(L=A&E=select(D,C))))))))))).
'main@orig.main.exit.split' :- 'main@entry'(A,B,C), 
          constr((~ ((D=<0)=E)&(F=true&(~G&(or(not(F),and(F,G))&(or(not(G),not(H))&(or(not(G),and(I,G))&(or(not(I),or(not(G),not(E)))&(or(not(I),or(not(G),J=K))&(or(not(I),or(not(G),L=J))&(K=store(M,N,D)&(M=store(B,N,0)&O=C)))))))))))).
'main@orig.main.exit.split' :- 'main@.lr.ph'(A,B,C), 
          constr((~ ((D=<1)=E)&(F=true&(~G&(or(not(H),and(H,I))&(or(not(F),and(F,G))&(or(not(G),not(J))&(or(not(G),and(H,G))&(or(not(H),or(not(E),not(I)))&(or(not(H),or(not(G),K=L))&(or(not(H),or(not(G),M=K))&(L=store(B,C,N)&(D=select(B,C)&(O=A&N= - 1+D)))))))))))))).
ff :- 'main@orig.main.exit.split', constr((true)).

