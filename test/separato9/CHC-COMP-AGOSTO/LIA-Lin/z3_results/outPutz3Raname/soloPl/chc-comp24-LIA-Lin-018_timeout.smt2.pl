% Automatically generated by smt2map




:- pred 'main@entry'(int).
:- mode 'main@entry'(in).
:- pred 'main@verifier.error.split'.
:- pred 'main@_bb'(int,int,int).
:- mode 'main@_bb'(in,in,in).
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

'main@entry'(A) :- constr((true)).
'main@_bb'(A,B,C) :- 'main@entry'(D), 
          constr((E=D&(F=true&(and(G,F)&(not(F)&(C=H&(not(F)&(not(G)&(A=I&(not(F)&(not(G)&(I=0&(not(F)&(not(G)&(H=B&(not(F)&not(G))))))))))))))))).
'main@_bb'(A,B,C) :- 'main@_bb'(D,B,E), 
          constr((F=(E=0)&(G=true&(and(H,I)&(not(H)&(J=1+D&(not(H)&(K= - 1+E&(not(H)&(and(H,G)&(not(G)&(C=L&(not(G)&(not(H)&(A=M&(not(G)&(not(H)&(M=J&(not(G)&(not(H)&(L=K&(not(G)&(not(H)&(not(I)&(not(F)&not(H)))))))))))))))))))))))))).
'main@verifier.error.split' :- 'main@_bb'(A,B,C), 
          constr((D=(C=0)&(E=true&(not(F)&(G&(and(E,H)&(not(E)&(and(H,I)&(not(H)&(and(I,F)&(not(I)&(and(F,J)&(not(F)&(G=(K=0)&(not(F)&(and(J,L)&(not(J)&(not(M)&(not(L)&(and(L,N)&(not(L)&(K=ite(O,1,0)&(not(L)&(O=(A=B)&(not(L)&(not(N)&(not(L)&D))))))))))))))))))))))))))).
ff :- 'main@verifier.error.split', constr((true)).

