; Automatically generated by map2smt

(set-logic HORN)

(declare-fun incorrect ( ) Bool)
(declare-fun new1 ( Int (Array Int Int) Int Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B (Array Int Int)) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= G (+ 1 D)) (= H 1) (<= (- C I) (- 1)) (>= (- A D) 1) (= (select B D) I) (new1 A B C G E F))
      (new1 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= G (+ 1 D)) (= H 1) (>= (- A D) 1) (>= (- C I) 1) (= (select B D) I) (new1 A B C G E F))
      (new1 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= F 0) (>= E 0) (>= (- A D) 1) (>= (- D E) 1) (= (select B D) C) (= (select B E) C))
      (new1 A B C D C E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= F 0) (<= (- A D) 0) (>= E 0) (>= (- D E) 1) (= (select B E) C))
      (new1 A B C D C E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E Int) (F Int) (G Int) )
    (=>
      (and (= A 0) (= B 1) (>= C 1) (new1 C D E A F G))
      incorrect
    )
  )
)

(assert (not incorrect))
(check-sat)
