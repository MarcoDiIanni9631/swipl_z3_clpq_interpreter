; Automatically generated by map2smt

(set-logic HORN)

(declare-fun incorrect ( ) Bool)
(declare-fun new1 ( Int Int (Array Int Int) (Array Int Int) Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B Int) (C (Array Int Int)) (D (Array Int Int)) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K (Array Int Int)) )
    (=>
      (and (= H (+ 1 A)) (= I 1) (>= (- B A) 1) (= (select D A) J) (= (store C A J ) K) (new1 H B K D E F G))
      (new1 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C (Array Int Int)) (D (Array Int Int)) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (<= (- F E) (- 1)) (>= G 0) (>= (- A B) 0) (>= (- B G) 1) (= (select C G) F) (= (select D G) E))
      (new1 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C (Array Int Int)) (D (Array Int Int)) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (>= G 0) (>= (- A B) 0) (>= (- B G) 1) (>= (- F E) 1) (= (select C G) F) (= (select D G) E))
      (new1 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E (Array Int Int)) (F Int) (G Int) (H Int) )
    (=>
      (and (= A 1) (= B 0) (>= C 1) (new1 B C D E F G H))
      incorrect
    )
  )
)

(assert (not incorrect))
(check-sat)
