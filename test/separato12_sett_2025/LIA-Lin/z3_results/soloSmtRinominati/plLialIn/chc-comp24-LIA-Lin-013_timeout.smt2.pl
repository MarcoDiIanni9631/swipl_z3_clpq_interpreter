% Automatically generated by smt2map




:- pred 'main@mult.exit6.split'.
:- pred 'main@entry'.
:- pred 'main@tailrecurse.i'(int,int,int,int).
:- mode 'main@tailrecurse.i'(in,in,in,in).
:- pred 'main@tailrecurse.outer.i3'(int,int,int,int,int).
:- mode 'main@tailrecurse.outer.i3'(in,in,in,in,in).
:- pred 'main@tailrecurse.outer.i'(int,int,int,int).
:- mode 'main@tailrecurse.outer.i'(in,in,in,in).
:- pred 'main@tailrecurse.i5'(int,int,int,int,int).
:- mode 'main@tailrecurse.i5'(in,in,in,in,in).
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

'main@entry' :- constr((true)).
'main@tailrecurse.outer.i'(A,B,C,D) :- 'main@entry', 
          constr((and(and(E,or(not(F),not(G),H=0),or(not(F),not(G),I=B),or(not(F),not(G),C=H),or(not(F),not(G),D=I),or(not(G),and(F,G)),not(J),not(K),G=true,L),and(E=(K=or(not(B=<46340),not(B>=0))),L=(J=or(not(A=<46340),not(A>=0))))))).
'main@tailrecurse.outer.i'(A,B,C,D) :- 'main@tailrecurse.i'(A,B,E,F), 
          constr((and(not((0=<F)=G),and(or(not(H),not(I),J=F),and(or(not(H),not(I),K=J),and(or(not(H),not(I),not(G)),and(or(not(L),not(M),not(H)),and(or(not(L),not(N),O=P),and(or(not(L),not(N),Q=R),and(or(not(L),not(N),C=O),and(or(not(L),not(N),D=Q),and(or(not(H),M=(K=0)),and(or(not(H),and(H,I)),and(or(not(N),and(L,N)),and(or(not(L),P=E+A),and(or(not(L),R= - 1+K),and(or(not(L),and(L,H)),and(N=true,S= - 1*F)))))))))))))))))).
'main@tailrecurse.i'(A,B,C,D) :- 'main@tailrecurse.outer.i'(A,B,C,E), 
          constr((and(or(not(F),not(G),D=H),and(or(not(G),and(F,G)),and(G=true,or(not(F),not(G),H=E)))))).
'main@tailrecurse.i'(A,B,C,D) :- 'main@tailrecurse.i'(A,B,C,E), 
          constr((and(not((0=<E)=F),and(or(not(G),not(H),I=J),and(or(not(G),not(H),D=I),and(or(not(G),not(H),F),and(or(not(H),and(G,H)),and(H=true,J= - 1*E)))))))).
'main@tailrecurse.outer.i3'(A,B,C,D,E) :- 'main@tailrecurse.i'(B,C,F,G), 
          constr((and(not((0=<G)=H),and(or(not(I),J=K,not(L)),and(or(K=G,not(I),not(L)),and(or(not(H),not(I),not(L)),and(or(not(M),not(L),N=F),and(or(not(M),not(L),A=N),and(or(not(M),not(O),P=B),and(or(not(M),not(O),Q=0),and(or(not(M),not(O),D=Q),and(or(not(M),not(O),E=P),and(or(not(M),R,not(L)),and(or(not(L),R=(J=0)),and(or(not(L),and(I,L)),and(or(not(O),and(M,O)),and(or(not(M),and(M,L)),and(O=true,S= - 1*G)))))))))))))))))).
'main@tailrecurse.outer.i3'(A,B,C,D,E) :- 'main@tailrecurse.i5'(A,B,C,F,G), 
          constr((and(not((0=<G)=H),and(or(not(I),not(J),K=G),and(or(not(I),not(J),L=K),and(or(not(I),not(J),not(H)),and(or(not(M),not(N),O=P),and(or(not(M),not(N),Q=R),and(or(not(M),not(N),D=Q),and(or(not(M),not(N),E=O),and(or(not(M),not(S),not(I)),and(or(not(I),S=(L=0)),and(or(not(I),and(I,J)),and(or(not(N),and(M,N)),and(or(not(M),R=F+C),and(or(not(M),P= - 1+L),and(or(not(M),and(M,I)),and(N=true,T= - 1*G)))))))))))))))))).
'main@tailrecurse.i5'(A,B,C,D,E) :- 'main@tailrecurse.outer.i3'(A,B,C,D,F), 
          constr((and(or(not(G),not(H),E=I),and(or(not(H),and(G,H)),and(H=true,or(not(G),not(H),I=F)))))).
'main@tailrecurse.i5'(A,B,C,D,E) :- 'main@tailrecurse.i5'(A,B,C,D,F), 
          constr((and(not((0=<F)=G),and(or(not(H),not(I),J=K),and(or(not(H),not(I),E=J),and(or(not(H),G,not(I)),and(or(not(I),and(H,I)),and(I=true,K= - 1*F)))))))).
'main@mult.exit6.split' :- 'main@tailrecurse.i5'(A,B,C,D,E), 
          constr((and(and(not((0=<E)=F),or(not(G),H=D,not(I)),or(not(G),J=H,not(I)),or(not(G),K,not(I)),or(not(G),not(L),M=N),or(not(G),not(L),N=E),or(not(G),not(L),not(F)),O,P,Q,or(not(I),R=and(S,T)),or(not(I),U=and(R,V)),or(not(I),and(G,I)),or(not(I),U),or(not(W),and(W,I)),or(not(G),K=(M=0)),or(not(G),and(G,L)),W=true,X= - 1*E),and(O=or(not(I),not((A=J)=S)),and(P=or(not(I),not((C=<0)=V)),Q=or(not(I),not((B=<0)=T))))))).
ff :- 'main@mult.exit6.split', constr((true)).

