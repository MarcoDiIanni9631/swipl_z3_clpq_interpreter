; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new5 ( Int Int ) Bool)
(declare-fun new2 ( Int Int ) Bool)
(declare-fun new4 ( Int Int ) Bool)
(declare-fun new3 ( Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) )
    (=>
      (>= (- A B) 1)
      (new5 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (<= (- A B) (- 1))
      (new5 A B)
    )
  )
)
(assert
  (forall ( (A Int) )
    (=>
      (new2 A A)
      (new5 A A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (= C 20) (>= B 21))
      (new4 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (= C 20) (<= B 19))
      (new4 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= A 20) (= C 20) (= D 20) (new4 A B))
      (new3 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= C 20) (= D (+ 1 A)) (= E 1) (= F (+ 1 B)) (= G 1) (>= A 21) (new5 D F))
      (new3 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= C 20) (= D (+ 1 A)) (= E 1) (= F (+ 1 B)) (= G 1) (<= A 19) (new5 D F))
      (new3 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (new3 A B)
      (new2 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and (= A 0) (= B 0) (new2 A B))
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
