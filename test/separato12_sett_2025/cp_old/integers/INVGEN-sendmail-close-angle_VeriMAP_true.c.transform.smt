; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new23 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int Int Int ) Bool)
(declare-fun new22 ( Int Int Int Int Int Int ) Bool)
(declare-fun new21 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new20 ( Int Int Int Int Int Int ) Bool)
(declare-fun new19 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new18 ( Int Int Int Int Int Int ) Bool)
(declare-fun new17 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new16 ( Int Int Int Int Int Int ) Bool)
(declare-fun new15 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new14 ( Int Int Int Int Int Int ) Bool)
(declare-fun new13 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new12 ( Int Int Int Int Int Int ) Bool)
(declare-fun new11 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new10 ( Int Int Int Int Int Int ) Bool)
(declare-fun new9 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new8 ( Int Int Int Int Int Int ) Bool)
(declare-fun new7 ( Int Int Int Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= A 0) (= H 0) (= I 0))
      (new23 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (>= A 1) (new5 B C D E F G))
      (new23 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (<= A (- 1)) (new5 B C D E F G))
      (new23 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= G 1) (<= (- B C) (- 1)) (new23 G A B C D E F))
      (new22 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= G 0) (>= (- B C) 0) (new23 G A B C D E F))
      (new22 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= A 0) (= H 0) (= I 0))
      (new21 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (>= A 1) (new22 B C D E F G))
      (new21 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (<= A (- 1)) (new22 B C D E F G))
      (new21 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 1) (= H 0) (>= B 0) (new21 G A B C D E F))
      (new20 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 0) (= H 0) (<= B (- 1)) (new21 G A B C D E F))
      (new20 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= A 0) (= H 0) (= I 0))
      (new19 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= H 0) (= I (+ 1 F)) (= J 1) (= K (+ 1 C)) (= L 1) (>= A 1) (new20 B K D E I G))
      (new19 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= H 0) (= I (+ 1 F)) (= J 1) (= K (+ 1 C)) (= L 1) (<= A (- 1)) (new20 B K D E I G))
      (new19 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= G 1) (<= (- E D) (- 1)) (new19 G A B C D E F))
      (new18 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= G 0) (>= (- E D) 0) (new19 G A B C D E F))
      (new18 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= A 0) (= H 0) (= I 0))
      (new17 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (>= A 1) (new18 B C D E F G))
      (new17 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (<= A (- 1)) (new18 B C D E F G))
      (new17 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 1) (= H 0) (>= E 0) (new17 G A B C D E F))
      (new16 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 0) (= H 0) (<= E (- 1)) (new17 G A B C D E F))
      (new16 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= A 0) (= H 0) (= I 0))
      (new15 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= G 1) (<= (- E D) (- 1)) (new15 G A B C D E F))
      (new14 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= G 0) (>= (- E D) 0) (new15 G A B C D E F))
      (new14 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= A 0) (= H 0) (= I 0))
      (new13 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (>= A 1) (new14 B C D E F G))
      (new13 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (<= A (- 1)) (new14 B C D E F G))
      (new13 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 1) (= H 0) (>= E 0) (new13 G A B C D E F))
      (new12 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 0) (= H 0) (<= E (- 1)) (new13 G A B C D E F))
      (new12 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= A 0) (= H 0) (= I 0))
      (new11 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= H 0) (= I (+ 1 F)) (= J 1) (>= A 1) (new12 B C D E I G))
      (new11 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= H 0) (= I (+ 1 F)) (= J 1) (<= A (- 1)) (new12 B C D E I G))
      (new11 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= G 1) (<= (- E D) (- 1)) (new11 G A B C D E F))
      (new10 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= G 0) (>= (- E D) 0) (new11 G A B C D E F))
      (new10 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= A 0) (= H 0) (= I 0))
      (new9 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (>= A 1) (new10 B C D E F G))
      (new9 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (<= A (- 1)) (new10 B C D E F G))
      (new9 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 1) (= H 0) (>= E 0) (new9 G A B C D E F))
      (new8 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 0) (= H 0) (<= E (- 1)) (new9 G A B C D E F))
      (new8 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (new8 A B C D E E)
      (new7 A B C D E E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (>= (- E F) 1) (new16 A B C D E F))
      (new7 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (<= (- E F) (- 1)) (new16 A B C D E F))
      (new7 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= G 0) (>= A 1) (new7 A B C D E F))
      (new6 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= G 0) (<= A (- 1)) (new7 A B C D E F))
      (new6 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= A 0) (= G 0) (= H 0) (new8 A B C D E F))
      (new6 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (new6 A B C D E F)
      (new5 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= G 0) (= H 0) (= I (+ (- 2) D)) (= J 2) (>= (- C D) 1) (new5 A H C D G I))
      (new4 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= G 0) (>= C 1) (new4 A B C D E F))
      (new3 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= G 1) (>= D 2) (new3 A B C D E F))
      (new2 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (new2 A B C D E F)
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
