% Automatically generated by smt2map




:- pred new13(int,int,int,int,int,int,int).
:- mode new13(in,in,in,in,in,in,in).
:- pred new12(int,int,int,int,int,int).
:- mode new12(in,in,in,in,in,in).
:- pred new11(int,int,int,int,int,int).
:- mode new11(in,in,in,in,in,in).
:- pred new10(int,int,int,int,int,int).
:- mode new10(in,in,in,in,in,in).
:- pred new9(int,int,int,int,int,int).
:- mode new9(in,in,in,in,in,in).
:- pred new8(int,int,int,int,int,int).
:- mode new8(in,in,in,in,in,in).
:- pred new7(int,int,int,int,int,int,int).
:- mode new7(in,in,in,in,in,in,in).
:- pred new6(int,int,int,int,int,int,int).
:- mode new6(in,in,in,in,in,in,in).
:- pred new5(int,int,int,int,int,int).
:- mode new5(in,in,in,in,in,in).
:- pred new4(int,int,int,int,int,int,int).
:- mode new4(in,in,in,in,in,in,in).
:- pred new3(int,int,int,int,int,int,int).
:- mode new3(in,in,in,in,in,in,in).
:- pred new2(int,int,int,int,int,int).
:- mode new2(in,in,in,in,in,in).
:- pred new1.
:- pred incorrect.
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

new13(A,B,C,D,E,F,G) :- constr((and(H=0,and(I=0,A=0)))).
new12(A,B,C,D,E,F) :- new13(G,A,B,C,D,E,F), constr((and(C>=0,and(H=0,G=1)))).
new12(A,B,C,D,E,F) :- new13(G,A,B,C,D,E,F), constr((and(C=< - 1,and(H=0,G=0)))).
new11(A,B,C,D,E,F) :- new10(A,G,C,H,E,I), 
          constr((and(H>=0,and(G=H+I,and(J=1,and(K= - 1+I,and(L=1,and(M=1+H,and(N=0,and(O=1+H,and(F= - 1+I,D=1+H))))))))))).
new11(A,B,C,D,E,F) :- new12(A,B,C,D,E,F), constr((and(D=<0,G=0))).
new10(A,B,C,D,E,F) :- new11(A,B,C,D,E,F), constr((true)).
new9(A,B,C,D,E,F) :- new8(A,G,H,D,I,F), 
          constr((and(H>=0,and(G=H+I,and(J=1,and(K= - 1+I,and(L=1,and(M=1+H,and(N=0,and(O=1+H,and(E= - 1+I,C=1+H))))))))))).
new9(A,B,C,D,E,F) :- new10(A,E,C,E,E,G), 
          constr((and(C=<0,and(H=0,and(G=0,I=0))))).
new8(A,B,C,D,E,F) :- new9(A,B,C,D,E,F), constr((true)).
new7(A,B,C,D,E,F,G) :- new7(A,B,C,D,E,F,G), constr((true)).
new6(A,B,C,D,E,F,G) :- new7(A,B,C,D,E,F,G), constr((and(H=0,and(I=0,A=0)))).
new6(A,B,C,D,E,F,G) :- new8(B,B,B,E,H,G), 
          constr((and(A>=1,and(I=0,and(H=0,J=0))))).
new6(A,B,C,D,E,F,G) :- new8(B,B,B,E,H,G), 
          constr((and(A=< - 1,and(I=0,and(H=0,J=0))))).
new5(A,B,C,D,E,F) :- new6(G,A,B,C,D,E,F), constr((and(A=<200,and(H=200,G=1)))).
new5(A,B,C,D,E,F) :- new6(G,A,B,C,D,E,F), constr((and(A>=201,and(H=200,G=0)))).
new4(A,B,C,D,E,F,G) :- new4(A,B,C,D,E,F,G), constr((true)).
new3(A,B,C,D,E,F,G) :- new4(A,B,C,D,E,F,G), constr((and(H=0,and(I=0,A=0)))).
new3(A,B,C,D,E,F,G) :- new5(B,C,D,E,F,G), constr((and(A>=1,H=0))).
new3(A,B,C,D,E,F,G) :- new5(B,C,D,E,F,G), constr((and(A=< - 1,H=0))).
new2(A,B,C,D,E,F) :- new3(G,A,B,C,D,E,F), constr((and(A>=0,and(H=0,G=1)))).
new2(A,B,C,D,E,F) :- new3(G,A,B,C,D,E,F), constr((and(A=< - 1,and(H=0,G=0)))).
new1 :- new2(A,B,C,D,E,F), constr((true)).
incorrect :- new1, constr((true)).

