% Automatically generated by smt2map




:- pred new21(int,int,int,int,int,int,int).
:- mode new21(in,in,in,in,in,in,in).
:- pred new20(int,int,int,int,int,int,int).
:- mode new20(in,in,in,in,in,in,in).
:- pred new5(int,int,int,int,int,int,int).
:- mode new5(in,in,in,in,in,in,in).
:- pred new19(int,int,int,int,int,int,int).
:- mode new19(in,in,in,in,in,in,in).
:- pred new18(int,int,int,int,int,int,int).
:- mode new18(in,in,in,in,in,in,in).
:- pred new16(int,int,int,int,int,int,int).
:- mode new16(in,in,in,in,in,in,in).
:- pred new17(int,int,int,int,int,int,int).
:- mode new17(in,in,in,in,in,in,in).
:- pred new3(int,int,int,int,int,int,int).
:- mode new3(in,in,in,in,in,in,in).
:- pred new15(int,int,int,int,int,int,int).
:- mode new15(in,in,in,in,in,in,in).
:- pred new11(int,int,int,int,int,int,int).
:- mode new11(in,in,in,in,in,in,in).
:- pred new14(int,int,int,int,int,int,int).
:- mode new14(in,in,in,in,in,in,in).
:- pred new13(int,int,int,int,int,int,int).
:- mode new13(in,in,in,in,in,in,in).
:- pred new12(int,int,int,int,int,int,int).
:- mode new12(in,in,in,in,in,in,in).
:- pred new10(int,int,int,int,int,int,int).
:- mode new10(in,in,in,in,in,in,in).
:- pred new9(int,int,int,int,int,int,int).
:- mode new9(in,in,in,in,in,in,in).
:- pred new8(int,int,int,int,int,int,int).
:- mode new8(in,in,in,in,in,in,in).
:- pred new7(int,int,int,int,int,int,int,int).
:- mode new7(in,in,in,in,in,in,in,in).
:- pred new6(int,int,int,int,int,int,int).
:- mode new6(in,in,in,in,in,in,in).
:- pred new4(int,int,int,int,int,int,int).
:- mode new4(in,in,in,in,in,in,in).
:- pred new2(int,int,int,int,int,int,int).
:- mode new2(in,in,in,in,in,in,in).
:- pred new1(int).
:- mode new1(in).
:- pred incorrect.
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

new21(A,B,C,D,E,F,G) :- new20(A,B,H,D,I,F,G), 
          constr((and(F-E>=1,and(J=1,and(I=1+E,and(K=1,H=1+C)))))).
new21(A,B,C,D,E,F,G) :- new5(A,H,C,D,E,F,G), 
          constr((and(E-F>=0,and(I=1,H=1+B)))).
new20(A,B,C,D,E,F,G) :- new21(A,B,C,D,E,F,G), constr((true)).
new19(A,B,C,D,E,F,G) :- new18(A,B,H,D,E,F,G), 
          constr((and(F+D-C>=1,and(I=1,and(H=1+C,J=F+D))))).
new19(A,B,C,D,E,F,G) :- new16(A,B,C,D,H,F,G), 
          constr((and(C-F-D>=0,and(I=1,and(H=1+E,J=F+D))))).
new18(A,B,C,D,E,F,G) :- new19(A,B,C,D,E,F,G), constr((true)).
new17(A,B,C,D,E,F,G) :- new18(A,B,H,D,E,F,G), constr((and(E-G=< - 1,H=0))).
new17(A,B,C,D,E,F,G) :- new3(A,H,C,D,E,F,G), 
          constr((and(E-G>=0,and(I=1,H=1+B)))).
new16(A,B,C,D,E,F,G) :- new17(A,B,C,D,E,F,G), constr((true)).
new15(A,B,C,D,E,F,G) :- new11(A,B,C,D,H,F,G), 
          constr((and(G-E>=1,and(I=1,H=1+E)))).
new15(A,B,C,D,E,F,G) :- new16(A,B,C,D,H,F,G), constr((and(E-G>=0,H=0))).
new14(A,B,C,D,E,F,G) :- new13(A,B,H,D,I,F,G), 
          constr((and(F-E>=1,and(J=1,and(I=1+E,and(K=1,H= - 1+C)))))).
new14(A,B,C,D,E,F,G) :- new3(A,H,C,D,E,F,G), 
          constr((and(E-F>=0,and(I=1,H=1+B)))).
new13(A,B,C,D,E,F,G) :- new14(A,B,C,D,E,F,G), constr((true)).
new12(A,B,C,D,E,F,G) :- new13(A,B,C,D,H,F,G), constr((and(D-F>=1,H=0))).
new12(A,B,C,D,E,F,G) :- new3(A,H,C,D,E,F,G), 
          constr((and(D-F=<0,and(I=1,H=1+B)))).
new11(A,B,C,D,E,F,G) :- new15(A,B,C,D,E,F,G), constr((true)).
new10(A,B,C,D,E,F,G) :- new11(A,B,C,D,H,F,G), constr((and(D>=6,and(H=0,I=5)))).
new10(A,B,C,D,E,F,G) :- new12(A,B,C,D,E,F,G), constr((and(D=<5,H=5))).
new9(A,B,C,D,E,F,G) :- new20(A,B,C,D,H,F,G), constr((and(A>=1,and(H=0,I=0)))).
new9(A,B,C,D,E,F,G) :- new20(A,B,C,D,H,F,G), 
          constr((and(A=< - 1,and(H=0,I=0)))).
new9(A,B,C,D,E,F,G) :- new5(A,H,C,D,E,F,G), 
          constr((and(I=1,and(H=1+B,and(J=0,and(K=0,A=0)))))).
new8(A,B,C,D,E,F,G) :- new9(A,B,D,D,E,F,G), constr((B-G=< - 1)).
new8(A,B,C,D,E,F,G) :- new10(A,B,C,D,E,F,G), constr((B-G>=0)).
new7(A,B,C,D,E,F,G,H) :- constr((and(I=0,and(J=0,B=0)))).
new6(A,B,C,D,E,F,G) :- new7(A,H,B,C,D,E,F,G), 
          constr((and(C-F-D=<0,and(I=F+D,H=1)))).
new6(A,B,C,D,E,F,G) :- new7(A,H,B,C,D,E,F,G), 
          constr((and(C-F-D>=1,and(I=F+D,H=0)))).
new5(A,B,C,D,E,F,G) :- new8(A,B,C,D,E,F,G), constr((true)).
new4(A,B,C,D,E,F,G) :- new5(A,H,C,D,E,F,G), constr((and(B-F=< - 1,H=0))).
new4(A,B,C,D,E,F,G) :- new6(A,B,C,D,E,F,G), constr((B-F>=0)).
new3(A,B,C,D,E,F,G) :- new4(A,B,C,D,E,F,G), constr((true)).
new2(A,B,C,D,E,F,G) :- new3(A,H,C,D,E,F,G), 
          constr((and(C-F-D=<0,and(H=0,I=F+D)))).
new1(A) :- new2(A,B,C,D,E,F,G), constr((true)).
incorrect :- new1(A), constr((A=0)).

