; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new11 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new9 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new10 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new8 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new7 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (<= D 0))
      (new11 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= H 0) (= I (+ 1 G)) (= J 1) (= K (+ (- 1) D)) (= L 1) (>= D 1) (new9 A B C K E F I))
      (new11 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (<= (- G A) (- 1)) (new11 A B C D E F G))
      (new10 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (new10 A B C D E F G)
      (new9 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (<= D 0))
      (new8 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= H 0) (= I (+ 1 F)) (= J 1) (= K (+ (- 1) D)) (= L 1) (>= D 1) (new6 A B C K E I G))
      (new8 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (<= (- F B) (- 1)) (new8 A B C D E F G))
      (new7 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (>= (- F B) 0) (new9 A B C D E F H))
      (new7 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (new7 A B C D E F G)
      (new6 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= H (+ 1 E)) (= I 1) (= J (+ 1 D)) (= K 1) (>= (- B E) 1) (new4 A B C J H F G))
      (new5 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (>= (- E B) 0) (new6 A B C D E H G))
      (new5 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (new5 A B C D E F G)
      (new4 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= H (+ 1 C)) (= I 1) (= J (+ 1 D)) (= K 1) (>= (- A C) 1) (new2 A B H J E F G))
      (new3 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (>= (- C A) 0) (new4 A B C D H F G))
      (new3 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (new3 A B C D E F G)
      (new2 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= A 0) (= B 0) (new2 C D A B E F G))
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
