; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new9 ( Int Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int Int Int ) Bool)
(declare-fun new8 ( Int Int Int Int Int Int ) Bool)
(declare-fun new7 ( Int Int Int Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and (= G 0) (= H (+ 1 D)) (= I 1) (= J (+ 2 E)) (= K 2) (= L (+ 1 B)) (= M 1) (>= F 1) (new5 A L C H J F))
      (new9 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and (= G 0) (= H (+ 1 D)) (= I 1) (= J (+ 2 E)) (= K 2) (= L (+ 1 B)) (= M 1) (<= F (- 1)) (new5 A L C H J F))
      (new9 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) )
    (=>
      (and (= F 0) (= G 0) (= H 0) (= I (+ 2 D)) (= J 2) (= K (+ 1 E)) (= L 1) (= M (+ 1 B)) (= N 1) (new5 A M C I K F))
      (new9 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= G (+ D E)) (= H (* 3 C)) (= I 3) (>= (- (+ D E) (* 3 C)) 1))
      (new8 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= G (+ D E)) (= H (* 3 C)) (= I 3) (<= (- (+ D E) (* 3 C)) (- 1)))
      (new8 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (new9 A B C D E G)
      (new7 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (<= (- B C) (- 1)) (new7 A B C D E F))
      (new6 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (>= (- B C) 0) (new8 A B C D E F))
      (new6 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (new6 A B C D E F)
      (new5 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (new4 A B C D E F G)
      (new4 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= A 0) (= H 0) (= I 0) (new4 A B C D E F G))
      (new3 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= H 0) (= I 0) (= J 0) (= K 0) (>= A 1) (new5 B I D J K G))
      (new3 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= H 0) (= I 0) (= J 0) (= K 0) (<= A (- 1)) (new5 B I D J K G))
      (new3 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 1) (= H 0) (>= C 0) (new3 G A B C D E F))
      (new2 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 0) (= H 0) (<= C (- 1)) (new3 G A B C D E F))
      (new2 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (new2 A B C D E F)
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
