; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new8 ( Int Int Int ) Bool)
(declare-fun new7 ( Int Int ) Bool)
(declare-fun new6 ( Int Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int ) Bool)
(declare-fun new2 ( Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= A 0) (= D 0) (= E 0))
      (new8 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= C 1) (= D 2) (>= B 3) (new8 C A B))
      (new7 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= C 1) (= D 2) (<= B 1) (new8 C A B))
      (new7 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= B 2) (= C 0) (= D 2) (= E 2) (new8 C A B))
      (new7 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= G 0) (= H (+ 1 A)) (= I 1) (>= B 1) (new5 H B C D E F))
      (new6 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= G 0) (= H (+ 1 A)) (= I 1) (<= B (- 1)) (new5 H B C D E F))
      (new6 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= B 0) (= G 0) (= H 0) (new7 E F))
      (new6 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (new6 A B C D E F)
      (new5 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 0) (= H 4) (>= C 1) (new5 A B C H E F))
      (new4 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 0) (= H 5) (<= C 0) (new5 A B C H E F))
      (new4 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= C 0) (new4 C D E F A B))
      (new3 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= C 0) (= D 1) (>= A 1) (new3 A D))
      (new2 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= C 0) (= D 3) (<= A 0) (new3 A D))
      (new2 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (new2 A B)
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
