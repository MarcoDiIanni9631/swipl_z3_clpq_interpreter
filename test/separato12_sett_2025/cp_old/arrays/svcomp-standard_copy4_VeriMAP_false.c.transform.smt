; Automatically generated by map2smt

(set-logic HORN)

(declare-fun incorrect ( ) Bool)
(declare-fun new1 ( Int (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int ) Bool)
(declare-fun new2 ( Int (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int ) Bool)
(declare-fun new3 ( Int (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int ) Bool)
(declare-fun new4 ( Int (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D (Array Int Int)) (E (Array Int Int)) (F (Array Int Int)) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N (Array Int Int)) )
    (=>
      (and (= K (+ 1 J)) (= L 1) (>= (- A J) 1) (= (select E J) M) (= (store F J M ) N) (new4 A B C D E N G H I K))
      (new4 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D (Array Int Int)) (E (Array Int Int)) (F (Array Int Int)) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= K 0) (<= (- H G) (- 1)) (>= I 0) (>= (- J A) 0) (>= (- A I) 1) (= (select B I) H) (= (select F I) G))
      (new4 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D (Array Int Int)) (E (Array Int Int)) (F (Array Int Int)) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= K 0) (>= I 0) (>= (- J A) 0) (>= (- A I) 1) (>= (- H G) 1) (= (select B I) H) (= (select F I) G))
      (new4 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D (Array Int Int)) (E (Array Int Int)) (F (Array Int Int)) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N (Array Int Int)) )
    (=>
      (and (= K (+ 1 J)) (= L 1) (>= (- A J) 1) (= (select D J) M) (= (store F J M ) N) (new3 A B C D E N G H I K))
      (new3 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D (Array Int Int)) (E (Array Int Int)) (F (Array Int Int)) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= K 0) (>= (- J A) 0) (new4 A B C D E F G H I K))
      (new3 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D (Array Int Int)) (E (Array Int Int)) (F (Array Int Int)) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N (Array Int Int)) )
    (=>
      (and (= K (+ 1 J)) (= L 1) (>= (- A J) 1) (= (select C J) M) (= (store D J M ) N) (new2 A B C N E F G H I K))
      (new2 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D (Array Int Int)) (E (Array Int Int)) (F (Array Int Int)) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= K 0) (>= (- J A) 0) (new3 A B C D E F G H I K))
      (new2 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D (Array Int Int)) (E (Array Int Int)) (F (Array Int Int)) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N (Array Int Int)) )
    (=>
      (and (= K (+ 1 J)) (= L 1) (>= (- A J) 1) (= (select B J) M) (= (store C J M ) N) (new1 A B N D E F G H I K))
      (new1 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D (Array Int Int)) (E (Array Int Int)) (F (Array Int Int)) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= K 0) (>= (- J A) 0) (new2 A B C D E F G H I K))
      (new1 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E (Array Int Int)) (F (Array Int Int)) (G (Array Int Int)) (H (Array Int Int)) (I Int) (J Int) (K Int) )
    (=>
      (and (= A 1) (= B 0) (>= C 1) (new1 C D E F G H I J K B))
      incorrect
    )
  )
)

(assert (not incorrect))
(check-sat)
