; Automatically generated by map2smt

(set-logic HORN)

(declare-fun incorrect ( ) Bool)
(declare-fun new1 ( Int (Array Int Int) (Array Int Int) Int Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M (Array Int Int)) )
    (=>
      (and (= H (+ 1 I)) (= J 1) (= K (+ 1 G)) (= L 1) (>= (- A G) 1) (= (select B G) I) (= (store C G H ) M) (new1 A B M D E F K))
      (new1 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= H 0) (= I (+ (- 1) D)) (= J 1) (<= (- E D) (- 2)) (>= F 0) (>= (- G A) 0) (>= (- A F) 1) (= (select B F) E) (= (select C F) D))
      (new1 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= H 0) (= I (+ (- 1) D)) (= J 1) (>= F 0) (>= (- G A) 0) (>= (- A F) 1) (>= (- E D) 0) (= (select B F) E) (= (select C F) D))
      (new1 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E (Array Int Int)) (F Int) (G Int) (H Int) )
    (=>
      (and (= A 1) (= B 0) (>= C 1) (new1 C D E F G H B))
      incorrect
    )
  )
)

(assert (not incorrect))
(check-sat)
