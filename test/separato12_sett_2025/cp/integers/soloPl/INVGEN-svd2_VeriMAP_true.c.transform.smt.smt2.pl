% Automatically generated by smt2map




:- pred new22(int,int,int,int,int,int,int).
:- mode new22(in,in,in,in,in,in,in).
:- pred new17(int,int,int,int,int,int).
:- mode new17(in,in,in,in,in,in).
:- pred new21(int,int,int,int,int,int).
:- mode new21(in,in,in,in,in,in).
:- pred new20(int,int,int,int,int,int,int).
:- mode new20(in,in,in,in,in,in,in).
:- pred new19(int,int,int,int,int,int).
:- mode new19(in,in,in,in,in,in).
:- pred new18(int,int,int,int,int,int).
:- mode new18(in,in,in,in,in,in).
:- pred new13(int,int,int,int,int,int).
:- mode new13(in,in,in,in,in,in).
:- pred new16(int,int,int,int,int,int).
:- mode new16(in,in,in,in,in,in).
:- pred new15(int,int,int,int,int,int).
:- mode new15(in,in,in,in,in,in).
:- pred new14(int,int,int,int,int,int).
:- mode new14(in,in,in,in,in,in).
:- pred new10(int,int,int,int,int,int).
:- mode new10(in,in,in,in,in,in).
:- pred new12(int,int,int,int,int,int).
:- mode new12(in,in,in,in,in,in).
:- pred new9(int,int,int,int,int,int).
:- mode new9(in,in,in,in,in,in).
:- pred new11(int,int,int,int,int,int).
:- mode new11(in,in,in,in,in,in).
:- pred new5(int,int,int,int,int,int).
:- mode new5(in,in,in,in,in,in).
:- pred new8(int,int,int,int,int,int).
:- mode new8(in,in,in,in,in,in).
:- pred new7(int,int,int,int,int,int).
:- mode new7(in,in,in,in,in,in).
:- pred new6(int,int,int,int,int,int).
:- mode new6(in,in,in,in,in,in).
:- pred new4(int,int,int,int,int,int,int).
:- mode new4(in,in,in,in,in,in,in).
:- pred new3(int,int,int,int,int,int,int).
:- mode new3(in,in,in,in,in,in,in).
:- pred new2(int,int,int,int,int,int).
:- mode new2(in,in,in,in,in,in).
:- pred new1(int).
:- mode new1(in).
:- pred incorrect.
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

new22(A,B,C,D,E,F,G) :- constr((and(H=0,and(I=0,B=0)))).
new22(A,B,C,D,E,F,G) :- new17(A,C,D,E,H,G), 
          constr((and(B>=1,and(I=1,and(H=1+F,J=0))))).
new22(A,B,C,D,E,F,G) :- new17(A,C,D,E,H,G), 
          constr((and(B=< - 1,and(I=1,and(H=1+F,J=0))))).
new21(A,B,C,D,E,F) :- new22(A,G,B,C,D,E,F), constr((and(C-B=<0,G=1))).
new21(A,B,C,D,E,F) :- new22(A,G,B,C,D,E,F), constr((and(C-B>=1,G=0))).
new20(A,B,C,D,E,F,G) :- constr((and(H=0,and(I=0,B=0)))).
new20(A,B,C,D,E,F,G) :- new21(A,C,D,E,F,G), constr((and(B>=1,H=0))).
new20(A,B,C,D,E,F,G) :- new21(A,C,D,E,F,G), constr((and(B=< - 1,H=0))).
new19(A,B,C,D,E,F) :- new20(A,G,B,C,D,E,F), constr((and(C>=1,and(H=1,G=1)))).
new19(A,B,C,D,E,F) :- new20(A,G,B,C,D,E,F), constr((and(C=<0,and(H=1,G=0)))).
new18(A,B,C,D,E,F) :- new19(A,B,C,D,E,F), constr((E-B=<0)).
new18(A,B,C,D,E,F) :- new13(A,B,C,G,E,F), constr((and(E-B>=1,and(H=1,G=1+D)))).
new17(A,B,C,D,E,F) :- new18(A,B,C,D,E,F), constr((true)).
new16(A,B,C,D,E,F) :- new15(A,B,C,D,G,F), constr((and(B-E>=0,and(H=1,G=1+E)))).
new16(A,B,C,D,E,F) :- new17(A,B,C,D,F,F), constr((E-B>=1)).
new15(A,B,C,D,E,F) :- new16(A,B,C,D,E,F), constr((true)).
new14(A,B,C,D,E,F) :- new15(A,B,C,D,F,F), constr((D-B=<0)).
new14(A,B,C,D,E,F) :- new10(A,B,C,F,E,F), constr((D-B>=1)).
new13(A,B,C,D,E,F) :- new14(A,B,C,D,E,F), constr((true)).
new12(A,B,C,D,E,F) :- new9(A,B,C,G,E,F), constr((and(B-D>=0,and(H=1,G=1+D)))).
new12(A,B,C,D,E,F) :- new13(A,B,C,F,E,F), constr((D-B>=1)).
new11(A,B,C,D,E,F) :- new10(A,B,C,G,E,F), constr((and(B-D>=0,and(H=1,G=1+D)))).
new11(A,B,C,D,E,F) :- new5(A,B,G,D,E,C), 
          constr((and(D-B>=1,and(H=1,G= - 1+C)))).
new10(A,B,C,D,E,F) :- new11(A,B,C,D,E,F), constr((true)).
new9(A,B,C,D,E,F) :- new12(A,B,C,D,E,F), constr((true)).
new8(A,B,C,D,E,F) :- new9(A,B,C,F,E,F), constr((and(A>=1,G=0))).
new8(A,B,C,D,E,F) :- new9(A,B,C,F,E,F), constr((and(A=< - 1,G=0))).
new8(A,B,C,D,E,F) :- new10(A,B,C,F,E,F), constr((and(G=0,and(H=0,A=0)))).
new7(A,B,C,D,E,F) :- new8(A,B,C,D,E,F), constr((C-B=< - 1)).
new7(A,B,C,D,E,F) :- new5(A,B,G,D,E,C), constr((and(B-C=<0,and(H=1,G= - 1+C)))).
new6(A,B,C,D,E,F) :- new7(A,B,C,D,E,F), constr((and(C>=1,G=1))).
new5(A,B,C,D,E,F) :- new6(A,B,C,D,E,F), constr((true)).
new4(A,B,C,D,E,F,G) :- new4(A,B,C,D,E,F,G), constr((true)).
new3(A,B,C,D,E,F,G) :- new4(A,B,C,D,E,F,G), constr((and(H=0,and(I=0,B=0)))).
new3(A,B,C,D,E,F,G) :- new5(A,C,C,E,F,G), constr((and(B>=1,H=0))).
new3(A,B,C,D,E,F,G) :- new5(A,C,C,E,F,G), constr((and(B=< - 1,H=0))).
new2(A,B,C,D,E,F) :- new3(A,G,B,C,D,E,F), constr((and(F>=1,and(H=0,G=1)))).
new2(A,B,C,D,E,F) :- new3(A,G,B,C,D,E,F), constr((and(F=<0,and(H=0,G=0)))).
new1(A) :- new2(A,B,C,D,E,F), constr((true)).
incorrect :- new1(A), constr((A=0)).

