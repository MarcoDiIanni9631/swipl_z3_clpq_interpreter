% Automatically generated by smt2map




:- pred new15(int,int,int,int,int,int).
:- mode new15(in,in,in,in,in,in).
:- pred new12(int,int,int,int,int).
:- mode new12(in,in,in,in,in).
:- pred new14(int,int,int,int,int).
:- mode new14(in,in,in,in,in).
:- pred new13(int,int,int,int,int).
:- mode new13(in,in,in,in,in).
:- pred new11(int,int,int,int,int).
:- mode new11(in,in,in,in,in).
:- pred new10(int,int,int,int,int).
:- mode new10(in,in,in,in,in).
:- pred new9(int,int,int,int,int).
:- mode new9(in,in,in,in,in).
:- pred new8(int,int,int,int,int).
:- mode new8(in,in,in,in,in).
:- pred new7(int,int,int,int,int).
:- mode new7(in,in,in,in,in).
:- pred new6(int,int,int,int,int).
:- mode new6(in,in,in,in,in).
:- pred new5(int,int,int,int,int).
:- mode new5(in,in,in,in,in).
:- pred new4(int,int,int,int,int).
:- mode new4(in,in,in,in,in).
:- pred new3(int,int,int,int,int).
:- mode new3(in,in,in,in,in).
:- pred new2(int,int,int,int,int).
:- mode new2(in,in,in,in,in).
:- pred new1.
:- pred incorrect.
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

new15(A,B,C,D,E,F) :- constr((and(G=0,and(H=0,A=0)))).
new15(A,B,C,D,E,F) :- new12(B,C,D,G,H), 
          constr((and(A>=1,and(I=1,and(H= - 1+F,and(J=1,and(G=1+E,K=0))))))).
new15(A,B,C,D,E,F) :- new12(B,C,D,G,H), 
          constr((and(A=< - 1,and(I=1,and(H= - 1+F,and(J=1,and(G=1+E,K=0))))))).
new14(A,B,C,D,E) :- new15(F,A,B,C,D,E), constr((and(E>=1,and(G=0,F=1)))).
new14(A,B,C,D,E) :- new15(F,A,B,C,D,E), constr((and(E=<0,and(G=0,F=0)))).
new13(A,B,C,D,E) :- new14(A,B,C,D,E), constr((D-A=< - 1)).
new12(A,B,C,D,E) :- new13(A,B,C,D,E), constr((true)).
new11(A,B,C,D,E) :- new10(A,B,C,F,G), 
          constr((and(B-D>=1,and(H=1,and(G= - 1+E,and(I=1,F=1+D)))))).
new11(A,B,C,D,E) :- new12(A,B,C,F,E), constr((and(D-B>=0,F=0))).
new10(A,B,C,D,E) :- new11(A,B,C,D,E), constr((true)).
new9(A,B,C,D,E) :- new8(A,B,C,F,G), 
          constr((and(C-D>=1,and(H=1,and(G= - 1+E,and(I=1,F=1+D)))))).
new9(A,B,C,D,E) :- new10(A,B,C,F,E), constr((and(D-C>=0,F=0))).
new8(A,B,C,D,E) :- new9(A,B,C,D,E), constr((true)).
new7(A,B,C,D,E) :- new6(A,B,C,F,G), 
          constr((and(C-D>=1,and(H=1,and(G=1+E,and(I=1,F=1+D)))))).
new7(A,B,C,D,E) :- new8(A,B,C,F,E), constr((and(D-C>=0,F=0))).
new6(A,B,C,D,E) :- new7(A,B,C,D,E), constr((true)).
new5(A,B,C,D,E) :- new4(A,B,C,F,G), 
          constr((and(B-D>=1,and(H=1,and(G=1+E,and(I=1,F=1+D)))))).
new5(A,B,C,D,E) :- new6(A,B,C,F,E), constr((and(D-B>=0,F=0))).
new4(A,B,C,D,E) :- new5(A,B,C,D,E), constr((true)).
new3(A,B,C,D,E) :- new2(A,B,C,F,G), 
          constr((and(A-D>=1,and(H=1,and(G=1+E,and(I=1,F=1+D)))))).
new3(A,B,C,D,E) :- new4(A,B,C,F,E), constr((and(D-A>=0,F=0))).
new2(A,B,C,D,E) :- new3(A,B,C,D,E), constr((true)).
new1 :- new2(A,B,C,D,E), constr((and(E=0,D=0))).
incorrect :- new1, constr((true)).

