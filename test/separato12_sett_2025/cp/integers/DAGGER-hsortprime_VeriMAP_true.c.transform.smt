; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new24 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new8 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new23 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new22 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new21 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new20 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new19 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new18 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new17 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new16 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new15 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new14 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new13 ( Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new12 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new11 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new10 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new9 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new7 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) )
    (=>
      (and (= J 2) (= K (+ (- 1) B)) (= L 1) (= M (+ (- 2) (* 2 B))) (= N (* 2 B)) (= O 2) (= P 2) (= Q (+ (- 1) B)) (= R 1) (>= C 2) (new8 A Q C K M F G H I))
      (new24 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= J 3) (= K (* 2 B)) (= L 2) (>= C 3) (new8 A B C B K F G H I))
      (new23 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= J 1) (= K (+ (- 1) C)) (= L 1) (<= B 1) (new23 A B K D E F G H I))
      (new22 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= J 2) (>= B 2) (new24 A B C D E F G H I))
      (new21 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= J 0) (>= F 1) (new21 A B C D E F G H I))
      (new20 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= J 0) (<= F (- 1)) (new21 A B C D E F G H I))
      (new20 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= F 0) (= J 0) (= K 0) (new22 A B C D E F G H I))
      (new20 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (new20 A B C D E J G H I)
      (new19 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and (= J (+ (- C) E)) (= K 0) (= L (* 2 E)) (= M 2) (>= (- C E) 0) (new8 A B C E L F G H I))
      (new18 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= J 0) (>= G 1) (new18 A B C D E F G H I))
      (new17 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= J 0) (<= G (- 1)) (new18 A B C D E F G H I))
      (new17 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= G 0) (= J 0) (= K 0) (new19 A B C D E F G H I))
      (new17 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (new17 A B C D E F J H I)
      (new16 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) )
    (=>
      (and (= J (- (+ (- 1) C) E)) (= K 0) (= L (- C E)) (= M 1) (= N (+ 1 E)) (= O 1) (= P (+ 2 (* 2 E))) (= Q (* 2 E)) (= R 2) (= S 2) (>= (- C E) 1) (new8 A B C N P F G H I))
      (new15 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= J 0) (>= H 1) (new15 A B C D E F G H I))
      (new14 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= J 0) (<= H (- 1)) (new15 A B C D E F G H I))
      (new14 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= H 0) (= J 0) (= K 0) (new16 A B C D E F G H I))
      (new14 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= A 0) (= K 0) (= L 0))
      (new13 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) )
    (=>
      (and (= J 1) (= K (- (+ 1 C) (* 2 B))) (= L 0) (= M (- C (* 2 B))) (= N 1) (= O (* (- 2) B)) (= P (- 2)) (>= (- C (* 2 B)) (- 1)) (new13 J A B C D E F G H I))
      (new12 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) )
    (=>
      (and (= J 0) (= K (- (+ 1 C) (* 2 B))) (= L 0) (= M (- C (* 2 B))) (= N 1) (= O (* (- 2) B)) (= P (- 2)) (<= (- C (* 2 B)) (- 2)) (new13 J A B C D E F G H I))
      (new12 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (new14 A B C D E F G J I)
      (new11 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= J 0) (>= I 1) (new11 A B C D E F G H I))
      (new10 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= J 0) (<= I (- 1)) (new11 A B C D E F G H I))
      (new10 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= I 0) (= J 0) (= K 0) (new12 A B C D E F G H I))
      (new10 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (new10 A B C D E F G H J)
      (new9 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (new9 A B C D E F G H I)
      (new8 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) )
    (=>
      (and (= J (+ (- (- 1) A) (* 2 B))) (= K 0) (= L (+ (- A) (* 2 B))) (= M 1) (= N (* 2 B)) (= O 2) (>= (- A (* 2 B)) (- 1)) (new8 A B C D E F G H I))
      (new7 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and (= J (+ (- A) (* 2 B))) (= K 0) (= L (* 2 B)) (= M 2) (<= (- A (* 2 B)) 0) (new7 A B C D E F G H I))
      (new6 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) )
    (=>
      (and (= E (* 2 B)) (= J 0) (= K 0) (= L (* 2 B)) (= M (* 2 B)) (= N 2) (new6 A B C D E F G H I))
      (new5 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= I 0) (= J 0) (new5 A B C B D E F G H))
      (new4 A B C B D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= I 0) (= J 0) (new4 A B A C D E F G H))
      (new3 A B A C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= J 2) (>= A 2) (new3 A B C D E F G H I))
      (new2 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (new2 A B C D E F G H I)
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
