; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new7 ( Int Int Int Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= A 0) (= G 0) (= H 0))
      (new7 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= C (+ (- D) (* 3 A))) (= F 1) (= G (* 3 A)) (= H (* 3 A)) (= I (+ (- D) (* 3 A))) (= J 3) (new7 F A B C D E))
      (new6 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= F 0) (= G (+ C D)) (= H (* 3 A)) (= I 3) (>= (- (+ C D) (* 3 A)) 1) (new7 F A B C D E))
      (new6 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= F 0) (= G (+ C D)) (= H (* 3 A)) (= I 3) (<= (- (+ C D) (* 3 A)) (- 1)) (new7 F A B C D E))
      (new6 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= F 0) (= G (+ 1 C)) (= H 1) (= I (+ 2 D)) (= J 2) (= K (+ 1 B)) (= L 1) (>= E 1) (new3 A K G I E))
      (new5 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= F 0) (= G (+ 1 C)) (= H 1) (= I (+ 2 D)) (= J 2) (= K (+ 1 B)) (= L 1) (<= E (- 1)) (new3 A K G I E))
      (new5 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and (= E 0) (= F 0) (= G 0) (= H (+ 2 C)) (= I 2) (= J (+ 1 D)) (= K 1) (= L (+ 1 B)) (= M 1) (new3 A L H J E))
      (new5 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (<= (- B A) (- 1)) (new5 A B C D E))
      (new4 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (>= (- B A) 0) (new6 A B C D E))
      (new4 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (new4 A B C D E)
      (new3 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= F 0) (= G 0) (= H 0) (= I 0) (>= A 0) (new3 A G H I E))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (new2 A B C D E)
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
