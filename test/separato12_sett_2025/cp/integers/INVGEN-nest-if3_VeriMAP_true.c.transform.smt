; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new11 ( Int Int Int Int Int Int ) Bool)
(declare-fun new7 ( Int Int Int Int Int ) Bool)
(declare-fun new10 ( Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int Int ) Bool)
(declare-fun new9 ( Int Int Int Int Int ) Bool)
(declare-fun new8 ( Int Int Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int Int ) Bool)
(declare-fun new1 ( Int ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= B 0) (= G 0) (= H 0))
      (new11 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= G 0) (= H (+ 1 C)) (= I 1) (>= B 1) (new7 A H D E F))
      (new11 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= G 0) (= H (+ 1 C)) (= I 1) (<= B (- 1)) (new7 A H D E F))
      (new11 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= F 0) (= G (+ 1 E)) (= H 1) (= I (+ 1 C)) (= J 1) (>= A 1) (new5 A B I D G))
      (new10 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= F 0) (= G (+ 1 E)) (= H 1) (= I (+ 1 C)) (= J 1) (<= A (- 1)) (new5 A B I D G))
      (new10 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= A 0) (= F 0) (= G 0) (= H (+ 1 C)) (= I 1) (new5 A B H D E))
      (new10 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= F 1) (= G 1) (>= B 1) (new11 A F B C D E))
      (new9 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= F 0) (= G 1) (<= B 0) (new11 A F B C D E))
      (new9 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (<= (- B D) (- 1)) (new9 A B C D E))
      (new8 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (>= (- B D) 0) (new10 A B C D E))
      (new8 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (new8 A B C D E)
      (new7 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (<= (- C D) (- 1)) (new7 A E C D E))
      (new6 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (new6 A B C D E)
      (new5 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (new4 A B C D E F)
      (new4 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= B 0) (= G 0) (= H 0) (new4 A B C D E F))
      (new3 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 0) (= H 1) (>= B 1) (new5 A C H E F))
      (new3 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 0) (= H 1) (<= B (- 1)) (new5 A C H E F))
      (new3 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= F 1) (= G 0) (>= E 1) (new3 A F B C D E))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= F 0) (= G 0) (<= E 0) (new3 A F B C D E))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (new2 A B C D E)
      (new1 A)
    )
  )
)
(assert
  (forall ( (A Int) )
    (=>
      (and (= A 0) (new1 A))
      incorrect
    )
  )
)

(assert (not incorrect))
(check-sat)
