; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new9 ( Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int ) Bool)
(declare-fun new8 ( Int Int Int ) Bool)
(declare-fun new7 ( Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= B 4) (= D 4) (= E 4) (= F 1) (= G 6) (= H (+ 1 A)) (= I 1) (new2 H F G))
      (new9 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= D 4) (= E 2) (= F (+ 1 A)) (= G 1) (>= B 5) (new2 F E C))
      (new9 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= D 4) (= E 2) (= F (+ 1 A)) (= G 1) (<= B 3) (new2 F E C))
      (new9 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= B 3) (= D 3) (= E 3) (= F 1) (= G 5) (= H (+ 1 A)) (= I 1) (new2 H F G))
      (new8 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 3) (>= B 4) (new9 A B C))
      (new8 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 3) (<= B 2) (new9 A B C))
      (new8 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= B 2) (= D 2) (= E 2) (= F 3) (= G 4) (= H (+ 1 A)) (= I 1) (new2 H F G))
      (new7 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 2) (>= B 3) (new8 A B C))
      (new7 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 2) (<= B 1) (new8 A B C))
      (new7 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= A 0) (= E 0) (= F 0))
      (new6 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D 1) (= E 6) (>= C 7) (new6 D A B C))
      (new5 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D 1) (= E 6) (<= C 5) (new6 D A B C))
      (new5 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= C 6) (= D 0) (= E 6) (= F 6) (new6 D A B C))
      (new5 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= B 1) (= D 1) (= E 1) (= F 2) (= G 3) (= H (+ 1 A)) (= I 1) (new2 H F G))
      (new4 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 1) (>= B 2) (new7 A B C))
      (new4 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 1) (<= B 0) (new7 A B C))
      (new4 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 10) (<= A 9) (new4 A B C))
      (new3 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 10) (>= A 10) (new5 A B C))
      (new3 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (new3 A B C)
      (new2 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (= A 0) (= B 1) (new2 A B C))
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
