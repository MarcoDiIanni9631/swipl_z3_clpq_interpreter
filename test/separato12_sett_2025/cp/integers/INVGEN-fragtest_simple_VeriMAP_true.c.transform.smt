; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new12 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new9 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new11 ( Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new10 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new8 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new7 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new1 ( Int ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (<= (- G F) (- 1)) (new9 A B C D E F G))
      (new12 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= B 0) (= I 0) (= J 0))
      (new11 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) )
    (=>
      (and (= I 0) (= J (+ (- 1) F)) (= K 1) (= L (+ (- 1) C)) (= M 1) (= N (+ 1 H)) (= O 1) (>= B 1) (new12 A L D E J G N))
      (new11 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) )
    (=>
      (and (= I 0) (= J (+ (- 1) F)) (= K 1) (= L (+ (- 1) C)) (= M 1) (= N (+ 1 H)) (= O 1) (<= B (- 1)) (new12 A L D E J G N))
      (new11 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= H 1) (= I 0) (>= E 0) (new11 A H B C D E F G))
      (new10 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= H 0) (= I 0) (<= E (- 1)) (new11 A H B C D E F G))
      (new10 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (new10 A B C D E F G)
      (new9 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (>= A 1) (new7 A B C D E F G))
      (new8 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (<= A (- 1)) (new7 A B C D E F G))
      (new8 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= A 0) (= H 0) (= I 0) (= J 0) (new9 A B C D E B J))
      (new8 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (new8 A B C D E F G)
      (new7 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= H 0) (= I (+ 1 B)) (= J 1) (= K (+ 1 E)) (= L 1) (>= A 1) (new5 A I C B K F G))
      (new6 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= H 0) (= I (+ 1 B)) (= J 1) (= K (+ 1 E)) (= L 1) (<= A (- 1)) (new5 A I C B K F G))
      (new6 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= A 0) (= H 0) (= I 0) (new7 A B C D E F G))
      (new6 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (new6 A B C D E F G)
      (new5 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (<= (- C B) (- 1)) (new5 A H B D E F G))
      (new4 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (<= (- B C) 0) (new5 A H C D E F G))
      (new4 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= H 0) (= I (+ 1 B)) (= J 1) (>= A 1) (new2 A I C D E F G))
      (new3 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= H 0) (= I (+ 1 B)) (= J 1) (<= A (- 1)) (new2 A I C D E F G))
      (new3 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= A 0) (= H 0) (= I 0) (new4 A B C D E F G))
      (new3 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (new3 A B C D E F G)
      (new2 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= B 0) (= C 0) (new2 A C D E B F G))
      (new1 A)
    )
  )
)
(assert
  (forall ( (A Int) )
    (=>
      (and (= A 0) (new1 A))
      incorrect
    )
  )
)

(assert (not incorrect))
(check-sat)
