; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new19 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new11 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new18 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new17 ( Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new16 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new15 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new14 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new13 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new12 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new10 ( Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new9 ( Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new8 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new7 ( Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= J 0) (= K (+ 1 A)) (= L 1) (>= G 1) (new11 K B C D E F G H I))
      (new19 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= J 0) (= K (+ 1 A)) (= L 1) (<= G (- 1)) (new11 K B C D E F G H I))
      (new19 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) )
    (=>
      (and (= G 0) (= J 0) (= K 0) (= L (+ (- 1) A)) (= M 1) (= N (+ (- 1) E)) (= O 1) (new11 L B C D N F G H I))
      (new19 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (new19 A B C D E F J J I)
      (new18 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= A 0) (= K 0) (= L 0))
      (new17 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= J 100) (= K 1) (<= E 100) (new15 A B C D E F G H K))
      (new16 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= J 100) (= K 0) (>= E 101) (new15 A B C D E F G H K))
      (new16 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (new17 I A B C D E F G H I)
      (new15 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= J 100) (= K 1) (>= A 100) (new15 A B C D E F G H K))
      (new14 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= J 100) (<= A 99) (new16 A B C D E F G H I))
      (new14 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= J 100) (>= E 101) (new18 A B C D E F G H I))
      (new13 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= J 100) (<= E 100) (new14 A B C D E F G H I))
      (new13 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= J 100) (<= A 99) (new13 A B C D E F G H I))
      (new12 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= J 100) (>= A 100) (new14 A B C D E F G H I))
      (new12 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (new12 A B C D E F G H I)
      (new11 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (new10 A B C D E F G H I J)
      (new10 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= A 0) (= K 0) (= L 0) (new10 A B C D E F G H I J))
      (new9 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= K 0) (>= A 1) (new11 B C D E F G H I J))
      (new9 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= K 0) (<= A (- 1)) (new11 B C D E F G H I J))
      (new9 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= J 1) (= K 100) (<= E 99) (new9 J A B C D E F G H I))
      (new8 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= J 0) (= K 100) (>= E 100) (new9 J A B C D E F G H I))
      (new8 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (new7 A B C D E F G H I J)
      (new7 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= A 0) (= K 0) (= L 0) (new7 A B C D E F G H I J))
      (new6 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= K 0) (>= A 1) (new8 B C D E F G H I J))
      (new6 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= K 0) (<= A (- 1)) (new8 B C D E F G H I J))
      (new6 A B C D E F G H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= J 1) (= K 100) (<= A 99) (new6 J A B C D E F G H I))
      (new5 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= J 0) (= K 100) (>= A 100) (new6 J A B C D E F G H I))
      (new5 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (new5 A B C D J J G H I)
      (new4 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (new4 A B J J E F G H I)
      (new3 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (new3 J J C D E F G H I)
      (new2 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (new2 A B C D E F G H I)
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
