[mdiianni@compute-clai LIA-Lin_smt]$ cat O3_sum01_bug02_sum01_bug02_base.case_false-unreach-call_true-termination_000_false.smt2.pl 
% Automatically generated by smt2map

%O3_sum01_bug02_sum01_bug02_base.case_false-unreach-call_true-termination_000_false.false_MaxDepth50_MaxDepthReached_Z3PushOK_totalExplored.zmiout

:- pred 'main@entry'(int).
:- mode 'main@entry'(in).
:- pred 'main@orig.main.exit.split'.
:- pred 'main@.lr.ph'(int,int,int).
:- mode 'main@.lr.ph'(in,in,in).
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

'main@entry'(A) :- constr((true)).
'main@.lr.ph'(A,B,C) :- 
          constr((and(D=E,and(or(not(F),not(G),not(H)),and(or(not(F),not(I),J=0),and(or(not(F),not(I),K=1),and(or(not(F),not(I),B=J),and(or(not(F),not(I),C=K),and(or(not(I),and(F,I)),and(or(not(F),and(F,H)),and(I=true,not((1=<A)=G)))))))))))), 
          'main@entry'(E).
'main@.lr.ph'(A,B,C) :- 
          constr((and(D=(E=4),and(F=2+G,and(H=ite(D,- 10,F),and(I=1+E,and(or(not(J),not(K),L=H),and(or(not(J),not(K),M=I),and(or(not(J),not(K),B=L),and(or(not(J),not(K),C=M),and(or(not(J),not(K),N),and(or(not(K),and(J,K)),and(K=true,not((A=<E)=N)))))))))))))), 
          'main@.lr.ph'(A,G,E).
'main@orig.main.exit.split' :- 
          constr((and(A=B,and(or(not(C),not(D),E=F),and(or(not(C),not(D),F=0),and(or(not(C),not(D),G),and(or(not(C),H=(E=I)),and(or(not(C),J=or(K,H)),and(or(not(C),not(J=L)),and(or(not(C),K=(E=0)),and(or(not(C),I=2*M),and(or(not(C),and(C,D)),and(or(not(C),L),and(or(not(N),and(N,C)),and(or(not(O),not(C)),and(N=true,not((1=<M)=G))))))))))))))))), 
          'main@entry'(B).
'main@orig.main.exit.split' :- 
          constr((and(A=(B=4),and(C=2+D,and(E=1+B,and(F=ite(A,- 10,C),and(or(not(G),not(H),I=J),and(or(not(G),not(H),J=F),and(or(not(G),not(H),not(K)),and(or(not(L),not(G),M=N),and(or(not(L),not(G),N=I),and(or(not(G),and(G,H)),and(or(not(L),O=(M=P)),and(or(not(L),Q=or(R,O)),and(or(not(L),not(Q=S)),and(or(not(L),R=(M=0)),and(or(not(L),P=2*T),and(or(not(L),and(L,G)),and(or(not(L),S),and(or(not(U),and(U,L)),and(or(not(V),not(L)),and(U=true,not((T=<B)=K))))))))))))))))))))))), 
          'main@.lr.ph'(T,D,B).
ff :- constr((true)), 'main@orig.main.exit.split'.

