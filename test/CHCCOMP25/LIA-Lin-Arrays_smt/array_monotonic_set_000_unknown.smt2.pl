% Automatically generated by smt2map




:- pred 'main@bb32.i'(array(int),array(int),int,int,int,int).
:- mode 'main@bb32.i'(in,in,in,in,in,in).
:- pred 'main@verifier.error.split'.
:- pred 'main@bb11.i'(int,array(int),array(int),int,int,int,int).
:- mode 'main@bb11.i'(in,in,in,in,in,in,in).
:- pred 'main@entry'(int,int).
:- mode 'main@entry'(in,in).
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

'main@entry'(A,B) :- constr((true)).
'main@bb11.i'(A,B,C,D,E,F,G) :- 'main@entry'(E,H), 
          constr((and(I=H,and(not(D=<0),and(not(F=<0),and(or(not(J),not(K),L=M),and(or(not(J),not(K),N=O),and(or(not(J),not(K),B=L),and(or(not(J),not(K),C=N),and(or(not(J),not(K),P=0),and(or(not(J),not(K),A=P),and(or(not(K),and(J,K)),and(Q=true,and(K=true,not((G=<0)=Q))))))))))))))).
'main@bb11.i'(A,B,C,D,E,F,G) :- 'main@bb11.i'(H,I,J,D,E,F,G), 
          constr((and(or(not(K),not(L=<0),D=<0),and(or(not(M),not(N=<0),F=<0),and(or(not(M),not(O),P),and(or(not(M),not(K),Q),and(or(not(R),not(M),S=J),and(or(not(R),not(M),T=S),and(or(not(R),not(M),not(Q)),and(or(not(U),and(U,K),and(R,M)),and(or(not(U),not(K),V=W),and(or(not(U),not(K),T=V),and(or(not(U),not(X),Y=Z),and(or(not(U),not(X),A1=T),and(or(not(U),not(X),B=Y),and(or(not(U),not(X),C=A1),and(or(not(U),not(X),B1=C1),and(or(not(U),not(X),A=B1),and(or(not(K),W=store(J,L,20)),and(or(not(K),L=D+H),and(or(not(K),not(D=<0)),and(or(not(K),and(M,K)),and(or(not(M),Z=store(I,N,D1)),and(or(not(M),Q=(D1=10)),and(or(not(M),E1=E),and(or(not(M),N=F+H),and(or(not(M),not(F=<0)),and(or(not(M),and(M,O)),and(or(not(R),M),and(or(not(X),and(U,X)),and(or(not(U),C1=1+H),and(X=true,not((G=<H)=P))))))))))))))))))))))))))))))))).
'main@bb32.i'(A,B,C,D,E,F) :- 'main@bb11.i'(G,A,B,C,H,D,F), 
          constr((and(or(not(I),not(J),K=0),and(or(not(I),not(J),E=K),and(or(not(I),not(J),not(L)),and(or(not(J),and(I,J)),and(J=true,not((F=<G)=L)))))))).
'main@bb32.i'(A,B,C,D,E,F) :- 'main@bb32.i'(A,B,C,D,G,F), 
          constr((and(or(C=<0,not(H),not(I=<0)),and(or(D=<0,not(J),not(K=<0)),and(or(L,not(H),not(J)),and(or(not(L),not(M),not(J)),and(or(N,not(O),not(H)),and(or(not(P),and(M,J),and(O,H)),and(or(not(P),not(Q),R=S),and(or(not(P),not(Q),E=R),and(or(not(H),N=(T=20)),and(or(not(H),I=C+G),and(or(not(H),T=select(B,I)),and(or(not(H),not(C=<0)),and(or(not(H),and(J,H)),and(or(not(O),H),and(or(not(J),L=(U=10)),and(or(not(J),K=D+G),and(or(not(J),U=select(A,K)),and(or(not(J),not(D=<0)),and(or(not(J),and(J,V)),and(or(not(M),J),and(or(not(Q),and(P,Q)),and(or(not(P),S=1+G),and(W=true,and(Q=true,not((F=<G)=W))))))))))))))))))))))))))).
'main@verifier.error.split' :- 'main@bb32.i'(A,B,C,D,E,F), 
          constr((and(or(not(G),D=<0,not(H=<0)),and(or(not(I),not(J=<0),C=<0),and(or(not(I),not(G),K),and(or(not(L),not(M),not(I)),and(or(not(G),K=(N=10)),and(or(not(G),H=D+E),and(or(not(G),N=select(A,H)),and(or(not(G),not(D=<0)),and(or(not(G),and(G,O)),and(or(not(I),M=(P=20)),and(or(not(I),P=select(B,J)),and(or(not(I),J=C+E),and(or(not(I),not(C=<0)),and(or(not(I),and(I,G)),and(or(not(L),and(L,I)),and(or(not(Q),and(Q,L)),and(or(not(R),and(R,Q)),and(S=true,and(R=true,not((F=<E)=S)))))))))))))))))))))).
ff :- 'main@verifier.error.split', constr((true)).

