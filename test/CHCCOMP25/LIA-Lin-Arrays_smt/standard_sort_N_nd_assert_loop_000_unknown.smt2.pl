% Automatically generated by smt2map




:- pred 'main@entry'.
:- pred 'main@bb9.i'(int,int,array(int),int).
:- mode 'main@bb9.i'(in,in,in,in).
:- pred 'main@verifier.error.split'.
:- pred 'main@bb22.i'(int,array(int),int,int).
:- mode 'main@bb22.i'(in,in,in,in).
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

'main@entry' :- constr((true)).
'main@bb9.i'(A,B,C,D) :- 'main@entry', 
          constr((and(not(B=<0),and(or(not(E),not(F),G=0),and(or(not(E),not(F),A=G),and(or(not(E),not(F),H=I),and(or(not(E),not(F),C=H),and(or(not(F),and(E,F)),and(J=true,and(F=true,not((D=<0)=J))))))))))).
'main@bb9.i'(A,B,C,D) :- 'main@bb9.i'(E,B,F,D), 
          constr((and(or(not(G),not(H=<0),B=<0),and(or(not(G),I,not(J)),and(or(not(G),not(K),L=M),and(or(not(G),not(K),A=L),and(or(not(G),not(K),N=O),and(or(not(G),not(K),C=N),and(or(not(K),and(G,K)),and(or(not(G),H=B+E),and(or(not(G),P=E),and(or(not(G),M=1+E),and(or(not(G),O=store(F,H,P)),and(or(not(G),not(B=<0)),and(or(not(G),and(G,J)),and(K=true,not((D=<E)=I))))))))))))))))).
'main@bb22.i'(A,B,C,D) :- 'main@bb9.i'(E,A,B,D), 
          constr((and(or(not(F),not(G),H=0),and(or(not(F),not(G),C=H),and(or(not(F),not(G),not(I)),and(or(not(G),and(F,G)),and(G=true,not((D=<E)=I)))))))).
'main@bb22.i'(A,B,C,D) :- 'main@bb22.i'(A,B,E,D), 
          constr((and(and(or(not(F),A=<0,not(G=<0)),or(not(F),not(H=<0),A=<0),or(not(I),J,not(F)),or(not(I),not(K),L=M),or(not(I),not(K),C=L),or(not(F),G=A+E),or(not(F),H=A+N),or(not(F),O=select(B,G)),or(not(F),P=select(B,H)),Q,R,S,or(not(F),T=and(U,V)),or(not(F),not(A=<0)),or(not(F),and(F,W)),or(not(F),T),or(not(K),and(I,K)),or(not(I),M=1+E),or(not(I),and(I,F)),X=true,K=true,not((D=<E)=X)),and(Q=or(not(F),not((N=<E)=V)),and(R=or(not(F),not((P=<O)=J)),S=or(not(F),not((D=<N)=U))))))).
'main@verifier.error.split' :- 'main@bb22.i'(A,B,C,D), 
          constr((and(and(or(not(E),not(F=<0),A=<0),or(not(E),not(G=<0),A=<0),or(not(H),not(I),not(E)),or(not(E),J=select(B,G)),or(not(E),K=select(B,F)),or(not(E),F=A+L),or(not(E),G=A+C),M,N,O,or(not(E),P=and(Q,R)),or(not(E),not(A=<0)),or(not(E),and(S,E)),or(not(E),P),or(not(H),and(H,E)),or(not(T),and(T,H)),or(not(U),and(U,T)),V=true,U=true,not((D=<C)=V)),and(M=or(not(E),not((D=<L)=Q)),and(N=or(not(E),not((K=<J)=I)),O=or(not(E),not((L=<C)=R))))))).
ff :- 'main@verifier.error.split', constr((true)).

