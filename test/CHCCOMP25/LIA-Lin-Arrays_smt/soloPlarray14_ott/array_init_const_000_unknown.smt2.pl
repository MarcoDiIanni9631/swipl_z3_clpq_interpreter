% Automatically generated by smt2map




:- pred 'main@entry'.
:- pred 'main@verifier.error.split'.
:- pred 'main@bb22.i'(int,array(int),int,int,int).
:- mode 'main@bb22.i'(in,in,in,in,in).
:- pred 'main@bb10.i'(int,int,array(int),int,int).
:- mode 'main@bb10.i'(in,in,in,in,in).
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

'main@entry' :- constr((true)).
'main@bb10.i'(A,B,C,D,E) :- 'main@entry', 
          constr((and(not(A=<0),and(or(not(F),not(G),H=0),and(or(not(F),not(G),B=H),and(or(not(F),not(G),I=J),and(or(not(F),not(G),C=I),and(or(not(G),and(F,G)),and(K=true,and(G=true,not((E=<0)=K))))))))))).
'main@bb10.i'(A,B,C,D,E) :- 'main@bb10.i'(A,F,G,D,E), 
          constr((and(or(not(H),not(I=<0),A=<0),and(or(not(H),J,not(K)),and(or(not(H),not(L),M=N),and(or(not(H),not(L),B=M),and(or(not(H),not(L),O=P),and(or(not(H),not(L),C=O),and(or(not(L),and(H,L)),and(or(not(H),I=A+F),and(or(not(H),N=1+F),and(or(not(H),P=store(G,I,D)),and(or(not(H),not(A=<0)),and(or(not(H),and(H,K)),and(L=true,not((E=<F)=J)))))))))))))))).
'main@bb22.i'(A,B,C,D,E) :- 'main@bb10.i'(A,F,B,C,E), 
          constr((and(or(not(G),not(H),I=0),and(or(not(G),not(H),D=I),and(or(not(G),not(H),not(J)),and(or(not(H),and(G,H)),and(H=true,not((E=<F)=J)))))))).
'main@bb22.i'(A,B,C,D,E) :- 'main@bb22.i'(A,B,C,F,E), 
          constr((and(G=or(not(H),not((C=<I)=J)),and(or(A=<0,not(H),not(K=<0)),and(or(not(L),not(J),not(H)),and(or(not(L),not(M),N=O),and(or(not(L),not(M),D=N),and(or(not(H),K=A+F),and(or(not(H),I=select(B,K)),and(G,and(or(not(H),not(A=<0)),and(or(not(H),and(P,H)),and(or(not(M),and(L,M)),and(or(not(L),O=1+F),and(or(not(L),and(L,H)),and(Q=true,and(M=true,not((E=<F)=Q)))))))))))))))))).
'main@verifier.error.split' :- 'main@bb22.i'(A,B,C,D,E), 
          constr((and(F=or(not(G),not((C=<H)=I)),and(or(A=<0,not(G),not(J=<0)),and(or(I,not(K),not(G)),and(or(not(G),J=A+D),and(or(not(G),H=select(B,J)),and(F,and(or(not(G),not(A=<0)),and(or(not(G),and(L,G)),and(or(not(K),and(K,G)),and(or(not(M),and(M,K)),and(or(not(N),and(N,M)),and(O=true,and(N=true,not((E=<D)=O)))))))))))))))).
ff :- 'main@verifier.error.split', constr((true)).

