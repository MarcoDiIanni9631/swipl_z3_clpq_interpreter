% Automatically generated by smt2map




:- pred new13(int,int,int,int,int,int,int).
:- mode new13(in,in,in,in,in,in,in).
:- pred new2(int,int,int,int,int,int,int).
:- mode new2(in,in,in,in,in,in,in).
:- pred new12(int,int,int,int,int,int,int).
:- mode new12(in,in,in,in,in,in,in).
:- pred new11(int,int,int,int,int,int,int).
:- mode new11(in,in,in,in,in,in,in).
:- pred new10(int,int,int,int,int,int,int).
:- mode new10(in,in,in,in,in,in,in).
:- pred new9(int,int,int,int,int,int,int).
:- mode new9(in,in,in,in,in,in,in).
:- pred new8(int,int,int,int,int,int,int).
:- mode new8(in,in,in,in,in,in,in).
:- pred new7(int,int,int,int,int,int,int,int).
:- mode new7(in,in,in,in,in,in,in,in).
:- pred new6(int,int,int,int,int,int,int).
:- mode new6(in,in,in,in,in,in,in).
:- pred new5(int,int,int,int,int,int,int).
:- mode new5(in,in,in,in,in,in,in).
:- pred new4(int,int,int,int,int,int,int).
:- mode new4(in,in,in,in,in,in,in).
:- pred new3(int,int,int,int,int,int,int).
:- mode new3(in,in,in,in,in,in,in).
:- pred new1.
:- pred incorrect.
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

new13(A,B,C,D,E,F,G) :- new2(H,I,C,D,E,F,G), 
          constr((D-B>=1&(J= - 1&(I= -B&(K= - 1&H= -A))))).
new13(A,B,C,D,E,F,G) :- new2(A,B,C,D,E,F,G), constr((D-B=<0)).
new12(A,B,C,D,E,F,G) :- new13(A,B,C,D,E,F,G), constr((A-C>=0)).
new12(A,B,C,D,E,F,G) :- new2(A,B,C,D,E,F,G), constr((A-C=< - 1)).
new11(A,B,C,D,E,F,G) :- new2(H,I,J,K,E,F,G), 
          constr((A>=4&(L=10&(K=10+D&(M=10&(J=10+C&(N=3&(I=3+B&(O=1&(H=1+A&P=4)))))))))).
new11(A,B,C,D,E,F,G) :- new2(A,B,C,D,E,F,G), constr((A=<3&H=4)).
new10(A,B,C,D,E,F,G) :- new11(A,B,C,D,E,F,G), constr((E>=1&H=0)).
new10(A,B,C,D,E,F,G) :- new11(A,B,C,D,E,F,G), constr((E=< - 1&H=0)).
new10(A,B,C,D,E,F,G) :- new12(A,B,C,D,E,F,G), constr((H=0&(I=0&E=0))).
new9(A,B,C,D,E,F,G) :- new10(A,B,C,D,H,F,G), constr((true)).
new8(A,B,C,D,E,F,G) :- new2(H,I,C,D,E,F,G), 
          constr((F>=1&(J=2&(I=2+B&(K=1&(H=1+A&L=0)))))).
new8(A,B,C,D,E,F,G) :- new2(H,I,C,D,E,F,G), 
          constr((F=< - 1&(J=2&(I=2+B&(K=1&(H=1+A&L=0)))))).
new8(A,B,C,D,E,F,G) :- new9(A,B,C,D,E,F,G), constr((H=0&(I=0&F=0))).
new7(A,B,C,D,E,F,G,H) :- constr((I=0&(J=0&A=0))).
new6(A,B,C,D,E,F,G) :- new7(H,A,B,C,D,E,F,G), 
          constr((B-3*A=<0&(I=3&(J=3*A&H=1)))).
new6(A,B,C,D,E,F,G) :- new7(H,A,B,C,D,E,F,G), 
          constr((B-3*A>=1&(I=3&(J=3*A&H=0)))).
new5(A,B,C,D,E,F,G) :- new8(A,B,C,D,E,H,G), constr((true)).
new4(A,B,C,D,E,F,G) :- new5(A,B,C,D,E,F,G), constr((G>=1&H=0)).
new4(A,B,C,D,E,F,G) :- new5(A,B,C,D,E,F,G), constr((G=< - 1&H=0)).
new4(A,B,C,D,E,F,G) :- new6(A,B,C,D,E,F,G), constr((H=0&(I=0&G=0))).
new3(A,B,C,D,E,F,G) :- new4(A,B,C,D,E,F,H), constr((true)).
new2(A,B,C,D,E,F,G) :- new3(A,B,C,D,E,F,G), constr((true)).
new1 :- new2(A,B,C,D,E,F,G), constr((A=0&(B=0&(C=0&D=0)))).
incorrect :- new1, constr((true)).

