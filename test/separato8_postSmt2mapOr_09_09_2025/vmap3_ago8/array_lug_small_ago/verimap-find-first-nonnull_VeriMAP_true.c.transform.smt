; Automatically generated by map2smt

(set-logic HORN)

(declare-fun incorrect ( ) Bool)
(declare-fun new1 ( Int Int Int (Array Int Int) Int ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= E 0) (= F 0) (= G 0) (= H 0) (= I 0) (= J 0) (>= K 1) (>= A 0) (>= (- C A) 1) (= (select D A) K) (= (select D A) J))
      (new1 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= E 0) (= F 0) (= G 0) (= H 0) (= I 0) (= J 0) (<= K (- 1)) (>= A 0) (>= (- C A) 1) (= (select D A) K) (= (select D A) J))
      (new1 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= F 0) (= G 0) (= H 0) (= I (+ 1 A)) (= J 1) (>= (- C A) 1) (= (select D A) H) (new1 I B C D E))
      (new1 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= E 0) (= F 0) (= G 0) (= H 0) (= I 0) (>= B 0) (>= (- A C) 0) (>= (- C B) 1) (= (select D B) I))
      (new1 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E (Array Int Int)) (F Int) )
    (=>
      (and (= A 1) (= B (- 1)) (= C 0) (>= D 1) (new1 C B D E F))
      incorrect
    )
  )
)

(assert (not incorrect))
(check-sat)
