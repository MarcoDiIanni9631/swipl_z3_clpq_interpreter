; Automatically generated by map2smt

(set-logic HORN)

(declare-fun incorrect ( ) Bool)
(declare-fun new1 ( Int Int Int (Array Int Int) (Array Int Int) Int Int Int Int Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E (Array Int Int)) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P (Array Int Int)) )
    (=>
      (and (= M (+ 1 A)) (= N 1) (>= (- B A) 1) (= (select E A) O) (= (store D A O ) P) (new1 M B C P E F G H I J K L))
      (new1 A B C D E F G H I J K L)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E (Array Int Int)) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and (= M 0) (<= (- B C) 0) (<= (- K J) (- 1)) (>= L 0) (>= (- A B) 0) (>= (- B L) 1) (= (select D L) K) (= (select E L) J))
      (new1 A B C D E F G H I J K L)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E (Array Int Int)) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and (= M 0) (<= (- B C) 0) (>= L 0) (>= (- A B) 0) (>= (- B L) 1) (>= (- K J) 1) (= (select D L) K) (= (select E L) J))
      (new1 A B C D E F G H I J K L)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E (Array Int Int)) (F (Array Int Int)) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and (= A 1) (= B 0) (>= C 1) (new1 B D C E F G H I J K L M))
      incorrect
    )
  )
)

(assert (not incorrect))
(check-sat)
