% Automatically generated by smt2map




:- pred 'main@entry'(int).
:- mode 'main@entry'(in).
:- pred 'main@verifier.error.split'.
:- pred 'main@_bb'(int,int,int).
:- mode 'main@_bb'(in,in,in).
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

'main@entry'(A) :- constr((true)).
'main@_bb'(A,B,C) :- 'main@entry'(D), 
          constr((E=D&(F=true&(or(not(F),and(G,F))&(or(not(G),or(not(F),C=H))&(or(not(G),or(not(F),A=I))&(or(not(G),or(not(F),I=0))&or(not(G),or(not(F),H=B))))))))).
'main@_bb'(A,B,C) :- 'main@_bb'(D,B,E), 
          constr((F=(E=0)&(G=true&(or(not(H),and(H,I))&(or(not(H),J=1+D)&(or(not(H),K= - 1+E)&(or(not(G),and(H,G))&(or(not(H),or(not(G),C=L))&(or(not(H),or(not(G),A=M))&(or(not(H),or(not(G),M=J))&(or(not(H),or(not(G),L=K))&or(not(H),or(not(F),not(I)))))))))))))).
'main@verifier.error.split' :- 'main@_bb'(A,B,C), 
          constr((D=(C=0)&(E=true&(or(F,not(G))&(or(not(E),and(E,H))&(or(not(H),and(H,I))&(or(not(I),and(I,G))&(or(not(G),and(G,J))&(or(not(G),F=(K=0))&(or(not(J),and(J,L))&(or(not(L),not(M))&(or(not(L),and(L,N))&(or(not(L),K=ite(O,1,0))&(or(not(L),O=(A=B))&or(D,or(not(L),not(N))))))))))))))))).
ff :- 'main@verifier.error.split', constr((true)).

