% Automatically generated by smt2map




:- pred end_query.
:- pred inv_main_0(int,array(int),int,array(int)).
:- mode inv_main_0(in,in,in,in).
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

end_query :- 
          constr((A=B&(or(not(A=B),and(C=D,E=F))&(~ (0=<C)&(0=<D&(G=H&(~ (H=0)&(select(A,- 9)=0&select(B,- 9)=0)))))))).
end_query :- 
          constr((A=B&(~ (0=<C)&(D=E&(~ (E=0)&(select(A,- 9)=0& ~ (select(B,- 9)=0))))))).
end_query :- 
          constr((A=B&(or(and(C=D,E=F),not(A=B))&(0=<C&(0=<D&(G=H&(G=0&(~ (H=0)&(select(B,- 9)=0&select(A,- 9)=0))))))))).
end_query :- 
          constr((A=B&(0=<C&(~ (D=0)&(E=D&(E=0&(select(A,- 9)=0& ~ (select(B,- 9)=0)))))))).
end_query :- 
          constr((A=B&(0=<C&(D=E&(D=0&(~ (E=0)&(~ (select(A,- 9)=0)&select(B,- 9)=0))))))).
end_query :- 
          constr((A=B&(C=D&(C=0&(~ (D=0)&(~ (select(B,- 9)=0)& ~ (select(A,- 9)=0))))))).
end_query :- 
          constr((A=B&(or(not(A=B),and(C=D,E=F))&(0=<C&(~ (0=<D)&(G=H&(~ (G=0)&(select(A,- 9)=0&select(B,- 9)=0)))))))).
end_query :- 
          constr((A=B&(or(and(C=D,E=F),not(A=B))&(0=<C&(0=<D&(G=H&(~ (G=0)&(H=0&(select(B,- 9)=0&select(A,- 9)=0))))))))).
end_query :- 
          constr((A=B&(0=<C&(D=0&(E=D&(~ (E=0)&(select(A,- 9)=0& ~ (select(B,- 9)=0)))))))).
end_query :- 
          constr((A=B&(~ (0=<C)&(D=E&(~ (D=0)&(select(B,- 9)=0& ~ (select(A,- 9)=0))))))).
end_query :- 
          constr((A=B&(0=<C&(D=E&(~ (D=0)&(E=0&(~ (select(A,- 9)=0)&select(B,- 9)=0))))))).
end_query :- 
          constr((A=B&(C=D&(~ (C=0)&(D=0&(~ (select(B,- 9)=0)& ~ (select(A,- 9)=0))))))).
end_query :- 
          constr((A=B&(or(and(C=D,E=F),not(A=B))&(~ (0=<C)&(~ (0=<D)&(G=H&(select(B,- 9)=0&(select(A,- 9)=0& ~ (E=F))))))))).
end_query :- 
          constr((A=or(not(B=C),not(- 1=select(C,- 9)))&(D=E&(or(not(D=E),and(F=G,B=C))&(A&(0=<G&(not(0=<F)&(H=I&(I=0&(select(D,- 9)=0&select(E,- 9)=0)))))))))).
end_query :- 
          constr((A=or(not(B=C),not(- 1=select(C,- 9)))&(D=C&(A&(not(0=<E)&(F=G&(G=0&(select(D,- 9)=0&not(select(C,- 9)=0))))))))).
end_query :- 
          constr((A=or(not(B=C),not(select(B,- 9)= - 1))&(D=E&(or(not(D=E),and(F=G,B=C))&(A&(not(0=<G)&(0=<F&(H=I&(H=0&(select(D,- 9)=0&select(E,- 9)=0)))))))))).
end_query :- 
          constr((A=or(not(B=C),not(select(B,- 9)=select(C,- 9)))&(D=E&(or(and(F=G,B=C),not(D=E))&(A&(0=<F&(0=<G&(H=0&(I=H&(I=0&(select(E,- 9)=0&select(D,- 9)=0))))))))))).
end_query :- 
          constr((A=or(not(B=C),not(select(B,- 9)=select(C,- 9)))&(D=C&(A&(0=<E&(F=G&(F=0&(G=0&(not(select(C,- 9)=0)&select(D,- 9)=0))))))))).
end_query :- 
          constr((A=or(not(B=C),not(select(B,- 9)= - 1))&(B=D&(A&(not(0=<E)&(F=G&(F=0&(not(select(B,- 9)=0)&select(D,- 9)=0)))))))).
end_query :- 
          constr((A=or(not(B=C),not(select(B,- 9)=select(C,- 9)))&(B=D&(A&(0=<E&(F=G&(F=0&(G=0&(select(D,- 9)=0&not(select(B,- 9)=0)))))))))).
end_query :- 
          constr((A=or(not(B=C),not(select(B,- 9)=select(C,- 9)))&(B=C&(A&(D=E&(D=0&(E=0&(not(select(B,- 9)=0)&not(select(C,- 9)=0))))))))).
inv_main_0(A,B,C,D) :- 
          constr((E=F&(or(and(G=H,B=D),not(E=F))&(0=<G&(0=<H&(A=C&(~ (A=0)&(~ (C=0)&(select(F,- 9)=0&select(E,- 9)=0))))))))).
inv_main_0(A,B,C,D) :- 
          constr((E=D&(0=<F&(A=C&(~ (A=0)&(~ (C=0)&(~ (select(D,- 9)=0)&select(E,- 9)=0))))))).
inv_main_0(A,B,C,D) :- 
          constr((B=E&(0=<F&(A=C&(~ (A=0)&(~ (C=0)&(~ (select(B,- 9)=0)&select(E,- 9)=0))))))).
inv_main_0(A,B,C,D) :- 
          constr((B=D&(A=C&(~ (A=0)&(~ (C=0)&(~ (select(D,- 9)=0)& ~ (select(B,- 9)=0))))))).
end_query :- inv_main_0(A,B,C,D), 
          constr((E=and(0=<F,not(select(D,- 9)= - 1))&(not(0=<A)&(or(not(G=H),E)&not(A=<0))))).
end_query :- inv_main_0(A,B,C,D), 
          constr((E=not(ite(0=<F,select(B,- 9),- 1)=ite(0=<G,select(D,- 9),- 1))&(H=not(select(B,- 9)+A=select(D,- 9)+C)&(0=<A&(or(not(I=J),E)&(or(and(F=G,I=J),or(H,not(B=D)))&not(A=<0))))))).
end_query :- inv_main_0(A,B,C,D), 
          constr((E=not(ite(0=<F,select(B,- 9),- 1)=ite(0=<G,select(D,- 9),- 1))&(H=not(select(B,- 9)+A=select(D,- 9)+C)&(A=<0&(or(not(I=J),E)&or(and(F=G,I=J),or(H,not(B=D)))))))).
ff :- end_query, constr((true)).

