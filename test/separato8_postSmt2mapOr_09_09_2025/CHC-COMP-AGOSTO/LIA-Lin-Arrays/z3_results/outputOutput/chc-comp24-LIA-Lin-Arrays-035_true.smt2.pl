% Automatically generated by smt2map




:- pred 'main@entry'(int).
:- mode 'main@entry'(in).
:- pred 'main@_bb'(int,int,int,array(int),int).
:- mode 'main@_bb'(in,in,in,in,in).
:- pred 'main@verifier.error.split'.
:- pred 'main@_bb1'(int,array(int),int,int,int,int).
:- mode 'main@_bb1'(in,in,in,in,in,in).
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

'main@entry'(A) :- constr((true)).
'main@_bb'(A,B,C,D,E) :- 'main@entry'(B), 
          constr((F=B&(G=true&(or(not(G),and(H,G))&(or(not(H),or(not(G),E=I))&(or(not(H),or(not(G),C=J))&(or(not(H),or(not(G),I=K))&(or(not(H),or(not(G),J=0))&(or(not(H),or(not(G),D=L))&(or(not(H),or(not(G),L=M))& ~ (A=<0))))))))))).
'main@_bb'(A,B,C,D,E) :- 'main@_bb1'(F,G,H,A,B,I), 
          constr((J=(F=0)&(K=true&(or(not(L),and(L,M))&(or(not(L),N=1+I)&(or(not(K),and(L,K))&(or(not(L),or(not(K),E=O))&(or(not(L),or(not(K),C=P))&(or(not(L),or(not(K),O=H))&(or(not(L),or(not(K),P=N))&(or(not(L),or(not(K),D=Q))&(or(not(L),or(not(K),Q=G))&or(not(L),or(not(J),not(M))))))))))))))).
'main@verifier.error.split' :- 'main@_bb'(A,B,C,D,E), 
          constr((F=(C=0)&(G=true&(or(not(H),and(H,I))&(or(not(I),not(J))&(or(not(I),and(I,K))&(or(not(I),L=ite(M,1,0))&(or(not(I),N=select(D,A))&(or(not(I),M=(N=<E))&(or(not(G),and(G,O))&(or(not(O),and(O,P))&(or(not(P),and(P,Q))&(or(not(Q),R)&(or(not(Q),and(H,Q))&(or(not(Q),R=(L=0))&or(not(I),or(not(F),not(K)))))))))))))))))).
'main@_bb1'(A,B,C,D,E,F) :- 'main@_bb'(D,E,F,G,H), 
          constr((I=(F=0)&(J=true&(or(not(J),and(K,J))&(or(not(K),or(not(J),I))&(or(not(K),or(not(J),C=L))&(or(not(K),or(not(J),A=M))&(or(not(K),or(not(J),L=H))&(or(not(K),or(not(J),M=0))&(or(not(K),or(not(J),B=N))&or(not(K),or(not(J),N=G)))))))))))).
'main@_bb1'(A,B,C,D,E,F) :- 'main@_bb1'(G,H,I,D,E,F), 
          constr((J=or(not(K),L=D+4*M)&(N=or(not(K),O=D+4*P)&(Q=or(not(K),not((I=<R)=S))&(T=or(not(U),V=D+4*P)&(W=(G=0)&(X=true&(or(not(Y),Z=1+G)&(or(not(X),and(Y,X))&(or(not(A1),K)&(or(not(K),and(K,B1))&(or(not(K),not(D=<0))&(or(not(K),P=F+G)&(or(not(K),R=select(C1,L))&(J&(or(not(K),M=F+G)&(N&(or(not(K),D1=E)&(or(not(K),C1=store(H,O,E1))&(Q&(or(not(U),and(K,U))&(or(not(U),not(D=<0))&(or(not(U),F1=select(C1,V))&(T&(or(not(Y),or(not(X),C=G1))&(or(not(Y),or(not(X),A=H1))&(or(not(Y),or(not(X),G1=I1))&(or(not(Y),or(not(X),H1=Z))&(or(not(Y),or(not(X),B=J1))&(or(not(Y),or(not(X),J1=C1))&(or(not(Y),or(not(U),I1=K1))&(or(not(Y),or(not(U),K1=F1))&(or(not(Y),or(and(Y,U),and(A1,K)))&(or(not(A1),or(not(K),S))&(or(not(A1),or(not(K),I1=L1))&(or(not(A1),or(not(K),L1=I))&(or(not(K),or(not(U),not(S)))&(or(not(K),or(W,not(B1)))&(or(not(K),or(not(L=<0),D=<0))&(or(not(K),or(D=<0,not(O=<0)))&or(not(U),or(not(V=<0),D=<0)))))))))))))))))))))))))))))))))))))))))).
ff :- 'main@verifier.error.split', constr((true)).

