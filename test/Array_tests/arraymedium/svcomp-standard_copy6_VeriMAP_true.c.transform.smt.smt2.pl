% Automatically generated by smt2map




:- pred incorrect.
:- pred new1(int,array(int),array(int),array(int),array(int),array(int),array(int),array(int),int,int,int,int).
:- mode new1(in,in,in,in,in,in,in,in,in,in,in,in).
:- pred new2(int,array(int),array(int),array(int),array(int),array(int),array(int),array(int),int,int,int,int).
:- mode new2(in,in,in,in,in,in,in,in,in,in,in,in).
:- pred new3(int,array(int),array(int),array(int),array(int),array(int),array(int),array(int),int,int,int,int).
:- mode new3(in,in,in,in,in,in,in,in,in,in,in,in).
:- pred new4(int,array(int),array(int),array(int),array(int),array(int),array(int),array(int),int,int,int,int).
:- mode new4(in,in,in,in,in,in,in,in,in,in,in,in).
:- pred new5(int,array(int),array(int),array(int),array(int),array(int),array(int),array(int),int,int,int,int).
:- mode new5(in,in,in,in,in,in,in,in,in,in,in,in).
:- pred new6(int,array(int),array(int),array(int),array(int),array(int),array(int),array(int),int,int,int,int).
:- mode new6(in,in,in,in,in,in,in,in,in,in,in,in).
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

new6(A,B,C,D,E,F,G,H,I,J,K,L) :- new6(A,B,C,D,E,F,G,M,I,J,K,N), 
          constr((store(H,L,O)=M&(select(G,L)=O&(A-L>=1&(P=1&N=1+L))))).
new6(A,B,C,D,E,F,G,H,I,J,K,L) :- 
          constr((select(H,K)=I&(select(B,K)=J&(A-K>=1&(L-A>=0&(K>=0&(J-I=< - 1&M=0))))))).
new6(A,B,C,D,E,F,G,H,I,J,K,L) :- 
          constr((select(H,K)=I&(select(B,K)=J&(J-I>=1&(A-K>=1&(L-A>=0&(K>=0&M=0))))))).
new5(A,B,C,D,E,F,G,H,I,J,K,L) :- new5(A,B,C,D,E,F,M,H,I,J,K,N), 
          constr((store(G,L,O)=M&(select(F,L)=O&(A-L>=1&(P=1&N=1+L))))).
new5(A,B,C,D,E,F,G,H,I,J,K,L) :- new6(A,B,C,D,E,F,G,H,I,J,K,M), 
          constr((L-A>=0&M=0)).
new4(A,B,C,D,E,F,G,H,I,J,K,L) :- new4(A,B,C,D,E,M,G,H,I,J,K,N), 
          constr((store(F,L,O)=M&(select(E,L)=O&(A-L>=1&(P=1&N=1+L))))).
new4(A,B,C,D,E,F,G,H,I,J,K,L) :- new5(A,B,C,D,E,F,G,H,I,J,K,M), 
          constr((L-A>=0&M=0)).
new3(A,B,C,D,E,F,G,H,I,J,K,L) :- new3(A,B,C,D,M,F,G,H,I,J,K,N), 
          constr((store(E,L,O)=M&(select(D,L)=O&(A-L>=1&(P=1&N=1+L))))).
new3(A,B,C,D,E,F,G,H,I,J,K,L) :- new4(A,B,C,D,E,F,G,H,I,J,K,M), 
          constr((L-A>=0&M=0)).
new2(A,B,C,D,E,F,G,H,I,J,K,L) :- new2(A,B,C,M,E,F,G,H,I,J,K,N), 
          constr((store(D,L,O)=M&(select(C,L)=O&(A-L>=1&(P=1&N=1+L))))).
new2(A,B,C,D,E,F,G,H,I,J,K,L) :- new3(A,B,C,D,E,F,G,H,I,J,K,M), 
          constr((L-A>=0&M=0)).
new1(A,B,C,D,E,F,G,H,I,J,K,L) :- new1(A,B,M,D,E,F,G,H,I,J,K,N), 
          constr((store(C,L,O)=M&(select(B,L)=O&(A-L>=1&(P=1&N=1+L))))).
new1(A,B,C,D,E,F,G,H,I,J,K,L) :- new2(A,B,C,D,E,F,G,H,I,J,K,M), 
          constr((L-A>=0&M=0)).
incorrect :- new1(A,B,C,D,E,F,G,H,I,J,K,L), constr((A>=1&(L=0&M=1))).

