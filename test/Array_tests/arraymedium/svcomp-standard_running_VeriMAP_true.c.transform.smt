; Automatically generated by map2smt

(set-logic HORN)

(declare-fun incorrect ( ) Bool)
(declare-fun new1 ( Int (Array Int Int) (Array Int Int) Int Int ) Bool)
(declare-fun new2 ( Int (Array Int Int) (Array Int Int) Int Int ) Bool)

(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) )
    (=>
      (and (= F 0) (= G 0) (= H 0) (= I 0) (= J 0) (= K 0) (= L 0) (= M 0) (= N (+ 1 E)) (= O 1) (<= P (- 1)) (>= Q 0) (>= R 1) (>= (- A E) 1) (= (select B E) Q) (= (select C E) I) (= (select B E) P) (= (select C E) R) (new2 A B C M N))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) )
    (=>
      (and (= F 0) (= G 0) (= H 0) (= I 0) (= J 0) (= K 0) (= L 0) (= M 0) (= N (+ 1 E)) (= O 1) (<= P (- 1)) (<= Q (- 1)) (>= R 0) (>= (- A E) 1) (= (select B E) R) (= (select C E) I) (= (select B E) P) (= (select C E) Q) (new2 A B C M N))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) )
    (=>
      (and (= F 0) (= G 0) (= H 0) (= I 0) (= J 0) (= K 0) (= L 0) (= M 0) (= N 0) (= O (+ 1 E)) (= P 1) (<= Q (- 1)) (>= R 0) (>= (- A E) 1) (= (select B E) R) (= (select C E) I) (= (select B E) Q) (= (select C E) N) (new2 A B C J O))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) )
    (=>
      (and (= F 0) (= G 0) (= H 0) (= I 0) (= J 0) (= K 0) (= L (+ 1 E)) (= M 1) (>= N 0) (>= O 0) (>= (- A E) 1) (= (select B E) N) (= (select C E) I) (= (select B E) O) (new2 A B C J L))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) )
    (=>
      (and (= F 0) (= G 0) (= H 0) (= I 0) (= J 0) (= K (+ 1 E)) (= L 1) (<= M (- 1)) (>= N 0) (>= O 1) (>= P 1) (>= (- A E) 1) (= (select B E) N) (= (select C E) O) (= (select B E) M) (= (select C E) P) (new2 A B C J K))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) )
    (=>
      (and (= F 0) (= G 0) (= H 0) (= I 0) (= J 0) (= K (+ 1 E)) (= L 1) (<= M (- 1)) (<= N (- 1)) (>= O 0) (>= P 1) (>= (- A E) 1) (= (select B E) O) (= (select C E) P) (= (select B E) M) (= (select C E) N) (new2 A B C J K))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) )
    (=>
      (and (= F 0) (= G 0) (= H 0) (= I 0) (= J 0) (= K 0) (= L (+ 1 E)) (= M 1) (<= N (- 1)) (>= O 0) (>= P 1) (>= (- A E) 1) (= (select B E) O) (= (select C E) P) (= (select B E) N) (= (select C E) K) (new2 A B C D L))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and (= F 0) (= G 0) (= H 0) (= I (+ 1 E)) (= J 1) (>= K 0) (>= L 1) (>= M 0) (>= (- A E) 1) (= (select B E) K) (= (select C E) L) (= (select B E) M) (new2 A B C D I))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) )
    (=>
      (and (= F 0) (= G 0) (= H 0) (= I 0) (= J 0) (= K (+ 1 E)) (= L 1) (<= M (- 1)) (<= N (- 1)) (>= O 0) (>= P 1) (>= (- A E) 1) (= (select B E) O) (= (select C E) M) (= (select B E) N) (= (select C E) P) (new2 A B C J K))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) )
    (=>
      (and (= F 0) (= G 0) (= H 0) (= I 0) (= J 0) (= K (+ 1 E)) (= L 1) (<= M (- 1)) (<= N (- 1)) (<= O (- 1)) (>= P 0) (>= (- A E) 1) (= (select B E) P) (= (select C E) M) (= (select B E) N) (= (select C E) O) (new2 A B C J K))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) )
    (=>
      (and (= F 0) (= G 0) (= H 0) (= I 0) (= J 0) (= K 0) (= L (+ 1 E)) (= M 1) (<= N (- 1)) (<= O (- 1)) (>= P 0) (>= (- A E) 1) (= (select B E) P) (= (select C E) N) (= (select B E) O) (= (select C E) K) (new2 A B C D L))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and (= F 0) (= G 0) (= H 0) (= I (+ 1 E)) (= J 1) (<= K (- 1)) (>= L 0) (>= M 0) (>= (- A E) 1) (= (select B E) L) (= (select C E) K) (= (select B E) M) (new2 A B C D I))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) )
    (=>
      (and (= F 0) (= G 0) (= H 0) (= I 0) (= J (+ 1 E)) (= K 1) (<= L (- 1)) (<= M (- 1)) (>= N 1) (>= (- A E) 1) (= (select B E) L) (= (select B E) M) (= (select C E) N) (new2 A B C I J))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) )
    (=>
      (and (= F 0) (= G 0) (= H 0) (= I 0) (= J (+ 1 E)) (= K 1) (<= L (- 1)) (<= M (- 1)) (<= N (- 1)) (>= (- A E) 1) (= (select B E) L) (= (select B E) M) (= (select C E) N) (new2 A B C I J))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) )
    (=>
      (and (= F 0) (= G 0) (= H 0) (= I 0) (= J 0) (= K (+ 1 E)) (= L 1) (<= M (- 1)) (<= N (- 1)) (>= (- A E) 1) (= (select B E) M) (= (select B E) N) (= (select C E) J) (new2 A B C D K))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= F 0) (= G 0) (= H (+ 1 E)) (= I 1) (<= J (- 1)) (>= K 0) (>= (- A E) 1) (= (select B E) J) (= (select B E) K) (new2 A B C D H))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) )
    (=>
      (and (= F 1) (<= D 0) (>= (- E A) 0))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) )
    (=>
      (and (= F 1) (>= D 2) (>= (- E A) 0))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K (Array Int Int)) )
    (=>
      (and (= F 0) (= G 1) (= H (+ 1 E)) (= I 1) (>= J 0) (>= (- A E) 1) (= (select B E) J) (= (store C E G ) K) (new1 A B K D H))
      (new1 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K (Array Int Int)) )
    (=>
      (and (= F 0) (= G 0) (= H (+ 1 E)) (= I 1) (<= J (- 1)) (>= (- A E) 1) (= (select B E) J) (= (store C E G ) K) (new1 A B K D H))
      (new1 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= F 1) (= G 0) (>= (- E A) 0) (new2 A B C F G))
      (new1 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E (Array Int Int)) (F Int) )
    (=>
      (and (= A 1) (= B 0) (>= C 1) (new1 C D E F B))
      incorrect
    )
  )
)

(assert (not incorrect))
(check-sat)
