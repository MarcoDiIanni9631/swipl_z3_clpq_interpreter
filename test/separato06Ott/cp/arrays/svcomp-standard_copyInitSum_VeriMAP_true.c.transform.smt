; Automatically generated by map2smt

(set-logic HORN)

(declare-fun incorrect ( ) Bool)
(declare-fun new1 ( Int (Array Int Int) (Array Int Int) Int Int Int Int ) Bool)
(declare-fun new2 ( Int (Array Int Int) (Array Int Int) Int Int Int Int ) Bool)
(declare-fun new3 ( Int (Array Int Int) (Array Int Int) Int Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L (Array Int Int)) )
    (=>
      (and (= H (+ D I)) (= J (+ 1 G)) (= K 1) (>= (- A G) 1) (= (select C G) I) (= (store C G H ) L) (new3 A B L D E F J))
      (new3 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= H 0) (= I (+ 42 D)) (= J 42) (<= (- E D) 41) (>= F 0) (>= (- G A) 0) (>= (- A F) 1) (= (select C F) E))
      (new3 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= H 0) (= I (+ 42 D)) (= J 42) (>= F 0) (>= (- G A) 0) (>= (- A F) 1) (>= (- E D) 43) (= (select C F) E))
      (new3 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K (Array Int Int)) )
    (=>
      (and (= H (+ 1 G)) (= I 1) (>= (- A G) 1) (= (select B G) J) (= (store C G J ) K) (new2 A B K D E F H))
      (new2 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (>= (- G A) 0) (new3 A B C D E F H))
      (new2 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K (Array Int Int)) )
    (=>
      (and (= H 42) (= I (+ 1 G)) (= J 1) (>= (- A G) 1) (= (store B G H ) K) (new1 A K C D E F I))
      (new1 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (>= (- G A) 0) (new2 A B C D E F H))
      (new1 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E (Array Int Int)) (F Int) (G Int) (H Int) )
    (=>
      (and (= A 1) (= B 0) (>= C 1) (new1 C D E F G H B))
      incorrect
    )
  )
)

(assert (not incorrect))
(check-sat)
