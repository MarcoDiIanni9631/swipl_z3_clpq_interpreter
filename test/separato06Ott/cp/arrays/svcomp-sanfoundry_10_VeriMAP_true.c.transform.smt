; Automatically generated by map2smt

(set-logic HORN)

(declare-fun incorrect ( ) Bool)
(declare-fun new1 ( Int Int Int Int Int Int (Array Int Int) Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int Int Int (Array Int Int) Int Int ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R (Array Int Int)) )
    (=>
      (and (= J (+ (- 1) C)) (= K 1) (= L (+ 1 A)) (= M 1) (= N (+ 1 A)) (= O (+ 1 A)) (= P 1) (>= (- C A) 2) (= (select G N) Q) (= (store G A Q ) R) (new2 O L C D E F R H I))
      (new2 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and (= F 1) (= I (+ (- 1) C)) (= J 1) (= K 1) (= L 1) (= M 0) (>= H 0) (>= (- A C) (- 1)) (>= (- D H) 1) (= (select G H) E))
      (new2 A B C D E F G E H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) )
    (=>
      (and (= F 0) (= J 0) (= K 0) (= L 1) (= M (+ 1 A)) (= N 1) (>= (- C A) 1) (= (select G A) E) (new1 M B C A E L G H I))
      (new1 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) )
    (=>
      (and (= F 0) (= J 0) (= K 0) (= L (+ 1 A)) (= M 1) (<= (- E N) (- 1)) (>= (- C A) 1) (= (select G A) N) (new1 L B C D E F G H I))
      (new1 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) )
    (=>
      (and (= F 0) (= J 0) (= K 0) (= L (+ 1 A)) (= M 1) (>= (- C A) 1) (>= (- E N) 1) (= (select G A) N) (new1 L B C D E F G H I))
      (new1 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= J 0) (= K 0) (<= (- A C) (- 1)) (>= F 1) (new2 D B C D E F G H I))
      (new1 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= J 0) (= K 0) (<= F (- 1)) (<= (- A C) (- 1)) (new2 D B C D E F G H I))
      (new1 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) )
    (=>
      (and (= J 0) (>= F 1) (>= (- A C) 0) (new2 D B C D E F G H I))
      (new1 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G (Array Int Int)) (H Int) (I Int) (J Int) )
    (=>
      (and (= J 0) (<= F (- 1)) (>= (- A C) 0) (new2 D B C D E F G H I))
      (new1 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H (Array Int Int)) (I Int) (J Int) )
    (=>
      (and (= A 0) (= B 1) (= C 0) (>= D 1) (new1 C E D F G A H I J))
      incorrect
    )
  )
)

(assert (not incorrect))
(check-sat)
