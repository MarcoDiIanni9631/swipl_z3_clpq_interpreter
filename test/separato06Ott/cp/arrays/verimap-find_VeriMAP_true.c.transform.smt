; Automatically generated by map2smt

(set-logic HORN)

(declare-fun incorrect ( ) Bool)
(declare-fun new1 ( Int Int Int Int (Array Int Int) Int ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E (Array Int Int)) (F Int) (G Int) )
    (=>
      (and (= G 0) (>= A 0) (>= (- D A) 1) (>= (- C F) 1) (= (select E A) C) (= (select E A) F))
      (new1 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E (Array Int Int)) (F Int) (G Int) )
    (=>
      (and (= G 0) (<= (- C F) (- 1)) (>= A 0) (>= (- D A) 1) (= (select E A) C) (= (select E A) F))
      (new1 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E (Array Int Int)) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= G (+ 1 A)) (= H 1) (<= (- C I) (- 1)) (>= (- D A) 1) (= (select E A) I) (new1 G B C D E F))
      (new1 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E (Array Int Int)) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= G (+ 1 A)) (= H 1) (>= (- D A) 1) (>= (- C I) 1) (= (select E A) I) (new1 G B C D E F))
      (new1 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E (Array Int Int)) (F Int) (G Int) )
    (=>
      (and (= G 0) (>= B 0) (>= (- A D) 0) (>= (- D B) 1) (>= (- C F) 1) (= (select E B) F))
      (new1 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E (Array Int Int)) (F Int) (G Int) )
    (=>
      (and (= G 0) (<= (- C F) (- 1)) (>= B 0) (>= (- A D) 0) (>= (- D B) 1) (= (select E B) F))
      (new1 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F (Array Int Int)) (G Int) )
    (=>
      (and (= A 1) (= B (- 1)) (= C 0) (>= D 1) (new1 C B E D F G))
      incorrect
    )
  )
)

(assert (not incorrect))
(check-sat)
