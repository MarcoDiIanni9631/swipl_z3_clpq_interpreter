; Automatically generated by map2smt

(set-logic HORN)

(declare-fun incorrect ( ) Bool)
(declare-fun new1 ( Int (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int ) Bool)
(declare-fun new2 ( Int (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D (Array Int Int)) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L (Array Int Int)) )
    (=>
      (and (= I (+ 1 H)) (= J 1) (>= (- A H) 1) (= (select C H) K) (= (store D H K ) L) (new2 A B C L E F G I))
      (new2 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D (Array Int Int)) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= I 0) (<= (- F E) (- 1)) (>= G 0) (>= (- H A) 0) (>= (- A G) 1) (= (select B G) F) (= (select D G) E))
      (new2 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D (Array Int Int)) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= I 0) (>= G 0) (>= (- H A) 0) (>= (- A G) 1) (>= (- F E) 1) (= (select B G) F) (= (select D G) E))
      (new2 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D (Array Int Int)) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L (Array Int Int)) )
    (=>
      (and (= I (+ 1 H)) (= J 1) (>= (- A H) 1) (= (select B H) K) (= (store C H K ) L) (new1 A B L D E F G I))
      (new1 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D (Array Int Int)) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= I 0) (>= (- H A) 0) (new2 A B C D E F G I))
      (new1 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E (Array Int Int)) (F (Array Int Int)) (G Int) (H Int) (I Int) )
    (=>
      (and (= A 1) (= B 0) (>= C 1) (new1 C D E F G H I B))
      incorrect
    )
  )
)

(assert (not incorrect))
(check-sat)
