; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new19 ( Int Int Int ) Bool)
(declare-fun new18 ( Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int ) Bool)
(declare-fun new17 ( Int Int Int ) Bool)
(declare-fun new16 ( Int Int Int ) Bool)
(declare-fun new15 ( Int Int Int ) Bool)
(declare-fun new14 ( Int Int Int ) Bool)
(declare-fun new13 ( Int Int Int ) Bool)
(declare-fun new12 ( Int Int Int ) Bool)
(declare-fun new11 ( Int Int Int ) Bool)
(declare-fun new10 ( Int Int Int ) Bool)
(declare-fun new9 ( Int Int Int ) Bool)
(declare-fun new8 ( Int Int Int ) Bool)
(declare-fun new7 ( Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D (+ 1 A)) (= E 1) (>= (- C A) 1) (new18 D B C))
      (new19 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D (+ 1 B)) (= E 1) (>= (- A C) 0) (new2 A D C))
      (new19 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (new19 A B C)
      (new18 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D (+ 1 A)) (= E 1) (>= (- C A) 1) (new16 D B C))
      (new17 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 1) (>= (- A C) 0) (new18 D B C))
      (new17 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (new17 A B C)
      (new16 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D (+ 1 A)) (= E 1) (>= (- C A) 1) (new14 D B C))
      (new15 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 1) (>= (- A C) 0) (new16 D B C))
      (new15 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (new15 A B C)
      (new14 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D (+ 1 A)) (= E 1) (>= (- C A) 1) (new12 D B C))
      (new13 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 1) (>= (- A C) 0) (new14 D B C))
      (new13 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (new13 A B C)
      (new12 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D (+ 1 A)) (= E 1) (>= (- C A) 1) (new10 D B C))
      (new11 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 1) (>= (- A C) 0) (new12 D B C))
      (new11 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (new11 A B C)
      (new10 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D (+ 1 A)) (= E 1) (>= (- C A) 1) (new8 D B C))
      (new9 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 1) (>= (- A C) 0) (new10 D B C))
      (new9 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (new9 A B C)
      (new8 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D (+ 1 A)) (= E 1) (>= (- C A) 1) (new6 D B C))
      (new7 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 1) (>= (- A C) 0) (new8 D B C))
      (new7 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (new7 A B C)
      (new6 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= A 0) (= E 0) (= F 0))
      (new5 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= E 0) (= F 1) (>= A 1) (new6 F C D))
      (new5 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= E 0) (= F 1) (<= A (- 1)) (new6 F C D))
      (new5 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D 1) (= E 1) (>= B 1) (new5 D A B C))
      (new4 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D 0) (= E 1) (<= B 0) (new5 D A B C))
      (new4 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (<= (- B C) (- 1)) (new4 A B C))
      (new3 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (new3 A B C)
      (new2 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (= A 1) (new2 B A C))
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
