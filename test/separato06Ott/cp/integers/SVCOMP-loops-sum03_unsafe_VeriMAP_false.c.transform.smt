; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new9 ( Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new8 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new7 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= A 0) (= I 0) (= J 0))
      (new9 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= I 0) (>= A 1) (new4 B C D E F G H))
      (new9 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= I 0) (<= A (- 1)) (new4 B C D E F G H))
      (new9 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= A 0) (= H 0) (= I 0) (= J 1) (new7 A B C D E F J))
      (new8 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= H 0) (= I 0) (>= A 1) (new7 A B C D E F I))
      (new8 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= H 0) (= I 0) (<= A (- 1)) (new7 A B C D E F I))
      (new8 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (new9 G A B C D E F G)
      (new7 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= A (+ (- 18446744073709551616) (* 2 F))) (= H (* 2 F)) (= I (* 2 F)) (= J (+ (- 18446744073709551616) (* 2 F))) (= K 2) (= L 1) (<= (* 2 F) 18446744073709551615) (>= F 0) (new7 A B C D E F L))
      (new6 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= A (* 2 F)) (= H (* 2 F)) (= I (* 2 F)) (= J (* 2 F)) (= K 2) (= L 1) (>= F 0) (new7 A B C D E F L))
      (new6 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= H (+ 18446744073709551616 A)) (= I (* 2 F)) (= J 2) (<= A (- 1)) (>= F 0) (>= (- A (* 2 F)) (- 18446744073709551615)) (new8 A B C D E F G))
      (new6 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= H (+ 18446744073709551616 A)) (= I (* 2 F)) (= J 2) (<= A (- 1)) (<= (- A (* 2 F)) (- 18446744073709551617)) (>= F 0) (new8 A B C D E F G))
      (new6 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= H (* 2 F)) (= I 2) (>= F 0) (>= (- A (* 2 F)) 1) (new8 A B C D E F G))
      (new6 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= H (* 2 F)) (= I 2) (<= (- A (* 2 F)) (- 1)) (>= A 0) (new8 A B C D E F G))
      (new6 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= H 10) (= I (+ 2 A)) (= J 2) (= K (+ 1 F)) (= L 1) (<= F 9) (>= F 0) (new6 I B C D E K G))
      (new5 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= H 10) (= I (+ 1 F)) (= J 1) (>= F 10) (new6 A B C D E I G))
      (new5 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (new5 A B C D E F G)
      (new4 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= H 0) (>= I 0) (new4 A B C I I H G))
      (new3 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (>= H 0) (new3 A H H D E F G))
      (new2 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= A 0) (new2 A B C D E F G))
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
