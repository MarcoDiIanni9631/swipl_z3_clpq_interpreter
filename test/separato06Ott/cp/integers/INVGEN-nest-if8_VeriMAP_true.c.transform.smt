; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new16 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new12 ( Int Int Int Int Int Int ) Bool)
(declare-fun new15 ( Int Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int Int Int ) Bool)
(declare-fun new14 ( Int Int Int Int Int Int ) Bool)
(declare-fun new13 ( Int Int Int Int Int Int ) Bool)
(declare-fun new11 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new10 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new9 ( Int Int Int Int Int Int ) Bool)
(declare-fun new8 ( Int Int Int Int Int Int ) Bool)
(declare-fun new7 ( Int Int Int Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int Int Int ) Bool)
(declare-fun new1 ( Int ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= B 0) (= H 0) (= I 0))
      (new16 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= H 0) (= I (+ 1 E)) (= J 1) (>= B 1) (new12 A C D I F G))
      (new16 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= H 0) (= I (+ 1 E)) (= J 1) (<= B (- 1)) (new12 A C D I F G))
      (new16 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (new5 A B C D E F)
      (new15 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= G 1) (<= (- D E) (- 1)) (new16 A G B C D E F))
      (new14 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= G 0) (>= (- D E) 0) (new16 A G B C D E F))
      (new14 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (<= (- D C) (- 1)) (new14 A B C D E F))
      (new13 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (>= (- D C) 0) (new15 A B C D E F))
      (new13 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (new13 A B C D E F)
      (new12 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= B 0) (= H 0) (= I 0))
      (new11 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= H 0) (= I (+ 1 D)) (= J 1) (= K 0) (>= B 1) (new12 A C I K F G))
      (new11 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= H 0) (= I (+ 1 D)) (= J 1) (= K 0) (<= B (- 1)) (new12 A C I K F G))
      (new11 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= B 0) (= H 0) (= I 0))
      (new10 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= H 0) (= I (+ 2 D)) (= J 2) (>= B 1) (new5 A C I E F G))
      (new10 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= H 0) (= I (+ 2 D)) (= J 2) (<= B (- 1)) (new5 A C I E F G))
      (new10 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= G 1) (= H (+ (+ 5 E) C)) (= I (+ E C)) (= J 5) (<= (- (- B E) C) 4) (new10 A G B C D E F))
      (new9 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= G 0) (= H (+ (+ 5 E) C)) (= I (+ E C)) (= J 5) (>= (- (- B E) C) 5) (new10 A G B C D E F))
      (new9 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 1) (= H 0) (>= C 0) (new11 A G B C D E F))
      (new8 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 0) (= H 0) (<= C (- 1)) (new11 A G B C D E F))
      (new8 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= G 0) (>= A 1) (new8 A B C D E F))
      (new7 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= G 0) (<= A (- 1)) (new8 A B C D E F))
      (new7 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= A 0) (= G 0) (= H 0) (new9 A B C D E F))
      (new7 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (<= (- C F) (- 1)) (new7 A B C D E F))
      (new6 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G (+ 4 B)) (= H 4) (>= (- C F) 0) (new3 A G C D E F))
      (new6 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (new6 A B C D E F)
      (new5 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (>= (- E B) 1) (new5 A B B D E F))
      (new4 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (new4 A B C D E F)
      (new3 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= G (+ 1 F)) (= H 1) (= I 0) (>= (- E F) 2) (new3 A I C D E F))
      (new2 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (new2 A B C D E F)
      (new1 A)
    )
  )
)
(assert
  (forall ( (A Int) )
    (=>
      (and (= A 0) (new1 A))
      incorrect
    )
  )
)

(assert (not incorrect))
(check-sat)
