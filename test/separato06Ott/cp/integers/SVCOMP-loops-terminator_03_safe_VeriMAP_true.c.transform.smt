; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new11 ( Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int Int Int ) Bool)
(declare-fun new10 ( Int Int Int Int Int Int ) Bool)
(declare-fun new9 ( Int Int Int Int Int ) Bool)
(declare-fun new7 ( Int Int Int Int Int ) Bool)
(declare-fun new8 ( Int Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= F 100) (= G (+ A C)) (<= A 99) (new5 G B C D E))
      (new11 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= F 100) (>= A 100) (new6 A B C D E))
      (new11 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= A 0) (= G 0) (= H 0))
      (new10 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= F 100) (= G 1) (>= A 100) (new7 A B C D G))
      (new9 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= F 100) (= G 0) (<= A 99) (new7 A B C D G))
      (new9 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= F 0) (>= C 1) (new9 A B C D E))
      (new8 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= F 0) (= G 0) (<= C 0) (new7 A B C D G))
      (new8 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (new10 E A B C D E)
      (new7 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= F 0) (= G 1) (<= C 0) (new7 A B C D G))
      (new6 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= F 0) (>= C 1) (new8 A B C D E))
      (new6 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (new11 A B C D E)
      (new5 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= F 0) (>= C 1) (new5 A B C D E))
      (new4 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= F 0) (<= C 0) (new6 A B C D E))
      (new4 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (new4 A B F F E)
      (new3 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (new3 F F C D E)
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (new2 A B C D E)
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
