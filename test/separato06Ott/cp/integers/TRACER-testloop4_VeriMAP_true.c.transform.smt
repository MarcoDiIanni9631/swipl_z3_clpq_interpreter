; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new5 ( Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= A 0) (= E 0) (= F 0))
      (new5 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D 1) (= E 1) (<= C 1) (new5 D A B C))
      (new4 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D 0) (= E 1) (>= C 2) (new5 D A B C))
      (new4 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (>= (- A B) 1) (new2 A B C))
      (new3 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (<= (- A B) (- 1)) (new2 A B C))
      (new3 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (new4 A A B)
      (new3 A A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D (+ 1 A)) (= E 1) (new3 D B C))
      (new2 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (= A 0) (= B 10) (= C 0) (new2 C B A))
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
