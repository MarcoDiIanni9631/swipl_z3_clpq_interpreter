; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new8 ( Int Int Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int Int Int ) Bool)
(declare-fun new7 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) )
    (=>
      (and (= B (- G A)) (= H 0) (= I (- G A)) (= J (+ (* (- 2) G) A)) (= K (* 2 G)) (= L 2) (= M (+ G (* 2 A))) (= N (* 2 A)) (= O 2) (>= E 1) (new2 A G J M E F))
      (new8 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) )
    (=>
      (and (= B (- G A)) (= H 0) (= I (- G A)) (= J (+ (* (- 2) G) A)) (= K (* 2 G)) (= L 2) (= M (+ G (* 2 A))) (= N (* 2 A)) (= O 2) (<= E (- 1)) (new2 A G J M E F))
      (new8 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) )
    (=>
      (and (= B (+ G A)) (= E 0) (= H 0) (= I 0) (= J (+ G A)) (= K (+ (* (- 2) G) A)) (= L (* 2 G)) (= M 2) (= N (+ G (* 2 A))) (= O (* 2 A)) (= P 2) (new2 A G K N E F))
      (new8 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= A 0) (= H 0) (= I 0))
      (new7 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= G 1) (= H (+ C (* 2 D))) (= I 0) (= J (* 2 D)) (= K 2) (>= (+ C (* 2 D)) 0) (new7 G A B C D E F))
      (new6 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= G 0) (= H (+ C (* 2 D))) (= I 0) (= J (* 2 D)) (= K 2) (<= (+ C (* 2 D)) (- 1)) (new7 G A B C D E F))
      (new6 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (new8 A B C D G F)
      (new5 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) )
    (=>
      (and (= (* 2 D) (+ (* (- 1) C) G)) (= H 0) (= I (+ (- C) G)) (= J 2) (= (* 2 K) (+ (* (- 1) C) G)) (= (* 2 L) (+ (* (- 5) C) G)) (= M (* (- 2) C)) (= (* 2 N) (+ (* (- 1) C) G)) (= O (- 2)) (= P (+ 1 G)) (= Q 1) (>= F 1) (new5 P L C D E F))
      (new4 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) )
    (=>
      (and (= (* 2 D) (+ (* (- 1) C) G)) (= H 0) (= I (+ (- C) G)) (= J 2) (= (* 2 K) (+ (* (- 1) C) G)) (= (* 2 L) (+ (* (- 5) C) G)) (= M (* (- 2) C)) (= (* 2 N) (+ (* (- 1) C) G)) (= O (- 2)) (= P (+ 1 G)) (= Q 1) (<= F (- 1)) (new5 P L C D E F))
      (new4 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= F 0) (= G 0) (= H 0) (new6 A B C D E F))
      (new4 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (new4 A B C D E G)
      (new3 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (new3 A B C D E F)
      (new2 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= A 0) (= B 0) (new2 C D A B E F))
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
