; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new15 ( Int Int Int Int Int Int ) Bool)
(declare-fun new12 ( Int Int Int Int Int ) Bool)
(declare-fun new14 ( Int Int Int Int Int ) Bool)
(declare-fun new13 ( Int Int Int Int Int ) Bool)
(declare-fun new11 ( Int Int Int Int Int ) Bool)
(declare-fun new10 ( Int Int Int Int Int ) Bool)
(declare-fun new9 ( Int Int Int Int Int ) Bool)
(declare-fun new8 ( Int Int Int Int Int ) Bool)
(declare-fun new7 ( Int Int Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= A 0) (= G 0) (= H 0))
      (new15 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= G 0) (= H (+ 1 E)) (= I 1) (= J (+ (- 1) F)) (= K 1) (>= A 1) (new12 B C D H J))
      (new15 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= G 0) (= H (+ 1 E)) (= I 1) (= J (+ (- 1) F)) (= K 1) (<= A (- 1)) (new12 B C D H J))
      (new15 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= F 1) (= G 0) (>= E 1) (new15 F A B C D E))
      (new14 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= F 0) (= G 0) (<= E 0) (new15 F A B C D E))
      (new14 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (<= (- D A) (- 1)) (new14 A B C D E))
      (new13 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (new13 A B C D E)
      (new12 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= F (+ 1 D)) (= G 1) (= H (+ (- 1) E)) (= I 1) (>= (- B D) 1) (new10 A B C F H))
      (new11 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= F 0) (>= (- D B) 0) (new12 A B C F E))
      (new11 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (new11 A B C D E)
      (new10 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= F (+ 1 D)) (= G 1) (= H (+ (- 1) E)) (= I 1) (>= (- C D) 1) (new8 A B C F H))
      (new9 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= F 0) (>= (- D C) 0) (new10 A B C F E))
      (new9 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (new9 A B C D E)
      (new8 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= F (+ 1 D)) (= G 1) (= H (+ 1 E)) (= I 1) (>= (- C D) 1) (new6 A B C F H))
      (new7 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= F 0) (>= (- D C) 0) (new8 A B C F E))
      (new7 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (new7 A B C D E)
      (new6 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= F (+ 1 D)) (= G 1) (= H (+ 1 E)) (= I 1) (>= (- B D) 1) (new4 A B C F H))
      (new5 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= F 0) (>= (- D B) 0) (new6 A B C F E))
      (new5 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (new5 A B C D E)
      (new4 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= F (+ 1 D)) (= G 1) (= H (+ 1 E)) (= I 1) (>= (- A D) 1) (new2 A B C F H))
      (new3 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= F 0) (>= (- D A) 0) (new4 A B C F E))
      (new3 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (new3 A B C D E)
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= A 0) (= B 0) (new2 C D E A B))
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
