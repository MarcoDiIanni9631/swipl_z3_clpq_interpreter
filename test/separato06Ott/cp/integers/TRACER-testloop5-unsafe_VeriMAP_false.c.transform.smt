; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new6 ( Int Int Int ) Bool)
(declare-fun new5 ( Int Int ) Bool)
(declare-fun new4 ( Int Int ) Bool)
(declare-fun new2 ( Int Int ) Bool)
(declare-fun new3 ( Int Int ) Bool)
(declare-fun new1 ( Int ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= B 0) (= D 0) (= E 0))
      (new6 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= C 1) (= D 10) (>= A 11) (new6 A C B))
      (new5 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= C 1) (= D 10) (<= A 9) (new6 A C B))
      (new5 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= A 10) (= C 0) (= D 10) (= E 10) (new6 A C B))
      (new5 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (= C 10) (<= B 9) (new2 A B))
      (new4 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (= C 10) (>= B 10) (new5 A B))
      (new4 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= A (+ (- 1) C)) (= D (+ (- 1) C)) (= E 1) (new4 C C))
      (new3 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (new3 A B)
      (new2 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (new2 A B)
      (new1 A)
    )
  )
)
(assert
  (forall ( (A Int) )
    (=>
      (and (= A 0) (new1 A))
      incorrect
    )
  )
)

(assert (not incorrect))
(check-sat)
