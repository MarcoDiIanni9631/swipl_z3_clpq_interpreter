; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new26 ( Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int ) Bool)
(declare-fun new25 ( Int Int Int Int ) Bool)
(declare-fun new24 ( Int Int Int ) Bool)
(declare-fun new23 ( Int Int Int Int ) Bool)
(declare-fun new22 ( Int Int Int ) Bool)
(declare-fun new21 ( Int Int Int ) Bool)
(declare-fun new20 ( Int Int Int Int ) Bool)
(declare-fun new19 ( Int Int Int ) Bool)
(declare-fun new18 ( Int Int Int Int ) Bool)
(declare-fun new17 ( Int Int Int ) Bool)
(declare-fun new16 ( Int Int Int ) Bool)
(declare-fun new15 ( Int Int Int Int ) Bool)
(declare-fun new14 ( Int Int Int ) Bool)
(declare-fun new13 ( Int Int Int Int ) Bool)
(declare-fun new12 ( Int Int Int ) Bool)
(declare-fun new11 ( Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int ) Bool)
(declare-fun new10 ( Int Int Int Int ) Bool)
(declare-fun new9 ( Int Int Int ) Bool)
(declare-fun new8 ( Int Int Int Int ) Bool)
(declare-fun new7 ( Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= D (+ (- 1) B)) (= E 1) (= F 0) (>= (- C B) (- 1)) (new3 A B F))
      (new26 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D (+ (- 1) B)) (= E 1) (<= (- C B) (- 2)) (new3 A B C))
      (new26 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= A 0) (= E 0) (= F 0))
      (new25 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= E 0) (= F (+ 1 D)) (= G 1) (>= A 1) (new26 B C F))
      (new25 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= E 0) (= F (+ 1 D)) (= G 1) (<= A (- 1)) (new26 B C F))
      (new25 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 1) (<= (- C B) (- 1)) (new25 D A B C))
      (new24 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 0) (>= (- C B) 0) (new25 D A B C))
      (new24 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= A 0) (= E 0) (= F 0))
      (new23 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= E 0) (>= A 1) (new24 B C D))
      (new23 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= E 0) (<= A (- 1)) (new24 B C D))
      (new23 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D 1) (= E 0) (>= C 0) (new23 D A B C))
      (new22 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D 0) (= E 0) (<= C (- 1)) (new23 D A B C))
      (new22 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= D (+ (- 1) B)) (= E 1) (= F 0) (>= (- C B) (- 1)) (new22 A B F))
      (new21 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D (+ (- 1) B)) (= E 1) (<= (- C B) (- 2)) (new22 A B C))
      (new21 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= A 0) (= E 0) (= F 0))
      (new20 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= E 0) (= F (+ 1 D)) (= G 1) (>= A 1) (new21 B C F))
      (new20 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= E 0) (= F (+ 1 D)) (= G 1) (<= A (- 1)) (new21 B C F))
      (new20 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 1) (<= (- C B) (- 1)) (new20 D A B C))
      (new19 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 0) (>= (- C B) 0) (new20 D A B C))
      (new19 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= A 0) (= E 0) (= F 0))
      (new18 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= E 0) (>= A 1) (new19 B C D))
      (new18 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= E 0) (<= A (- 1)) (new19 B C D))
      (new18 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D 1) (= E 0) (>= C 0) (new18 D A B C))
      (new17 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D 0) (= E 0) (<= C (- 1)) (new18 D A B C))
      (new17 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= D (+ (- 1) B)) (= E 1) (= F 0) (>= (- C B) (- 1)) (new17 A B F))
      (new16 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D (+ (- 1) B)) (= E 1) (<= (- C B) (- 2)) (new17 A B C))
      (new16 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= A 0) (= E 0) (= F 0))
      (new15 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= E 0) (= F (+ 1 D)) (= G 1) (>= A 1) (new16 B C F))
      (new15 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= E 0) (= F (+ 1 D)) (= G 1) (<= A (- 1)) (new16 B C F))
      (new15 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 1) (<= (- C B) (- 1)) (new15 D A B C))
      (new14 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 0) (>= (- C B) 0) (new15 D A B C))
      (new14 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= A 0) (= E 0) (= F 0))
      (new13 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= E 0) (>= A 1) (new14 B C D))
      (new13 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= E 0) (<= A (- 1)) (new14 B C D))
      (new13 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D 1) (= E 0) (>= C 0) (new13 D A B C))
      (new12 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D 0) (= E 0) (<= C (- 1)) (new13 D A B C))
      (new12 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 0) (>= A 1) (new6 A B C))
      (new11 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 0) (<= A (- 1)) (new6 A B C))
      (new11 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= A 0) (= D 0) (= E 0) (new12 A B C))
      (new11 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= A 0) (= E 0) (= F 0))
      (new10 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 1) (<= (- C B) (- 1)) (new10 D A B C))
      (new9 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 0) (>= (- C B) 0) (new10 D A B C))
      (new9 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= A 0) (= E 0) (= F 0))
      (new8 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= E 0) (>= A 1) (new9 B C D))
      (new8 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= E 0) (<= A (- 1)) (new9 B C D))
      (new8 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D 1) (= E 0) (>= C 0) (new8 D A B C))
      (new7 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D 0) (= E 0) (<= C (- 1)) (new8 D A B C))
      (new7 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 0) (>= C 1) (new7 A B C))
      (new6 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 0) (>= A 1) (new6 A B C))
      (new5 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 0) (<= A (- 1)) (new6 A B C))
      (new5 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= A 0) (= D 0) (= E 0) (new11 A B C))
      (new5 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 0) (>= A 1) (new5 A B C))
      (new4 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= D 0) (<= A (- 1)) (new5 A B C))
      (new4 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= A 0) (= D 0) (= E 0) (new6 A B C))
      (new4 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (new4 A B C)
      (new3 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= D 0) (= E 0) (>= B 1) (new3 A B E))
      (new2 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (new2 A B C)
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
