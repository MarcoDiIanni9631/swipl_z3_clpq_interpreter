; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new6 ( Int Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= A 0) (= G 0) (= H 0))
      (new6 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= F 1) (= G 0) (<= E 0) (new6 F A B C D E))
      (new5 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= F 0) (= G 0) (>= E 1) (new6 F A B C D E))
      (new5 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= F (+ 1 B)) (= G 1) (>= (- C B) 1) (new3 A F C D E))
      (new4 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (>= (- B C) 0) (new5 A B C D E))
      (new4 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (new4 A B C D E)
      (new3 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= F 0) (= G 1) (>= A 1) (new3 A B C G E))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= F 0) (= G 2) (<= A 0) (new3 A B C G E))
      (new2 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= A 0) (= B 0) (new2 C B D E A))
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
