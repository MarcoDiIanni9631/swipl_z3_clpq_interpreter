; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new6 ( Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= A 0) (= F 0) (= G 0))
      (new6 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= D 17) (= E 1) (= F 17) (= G 17) (new6 E A B C D))
      (new5 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= E 0) (= F 17) (>= D 18) (new6 E A B C D))
      (new5 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= E 0) (= F 17) (<= D 16) (new6 E A B C D))
      (new5 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= C (+ (- 4) E)) (= F (+ (- 1) E)) (= G (+ (- 4) E)) (= H 3) (= I (+ (- 1) E)) (= J 1) (new5 A B C E))
      (new4 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= B (+ (- 3) E)) (= F (+ (- 1) E)) (= G (+ (- 3) E)) (= H 2) (= I (+ (- 1) E)) (= J 1) (new4 A B E D))
      (new3 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= A (+ (- 2) E)) (= F (+ (- 1) E)) (= G (+ (- 2) E)) (= H 1) (= I (+ (- 1) E)) (= J 1) (new3 A E C D))
      (new2 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= A 8) (new2 A B C D))
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
