; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new23 ( Int Int Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new7 ( Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new22 ( Int Int Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new21 ( Int Int Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new20 ( Int Int Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new19 ( Int Int Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new11 ( Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new18 ( Int Int Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new17 ( Int Int Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new16 ( Int Int Int Int Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new15 ( Int Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new14 ( Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new13 ( Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new12 ( Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new10 ( Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new9 ( Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new8 ( Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int Int Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) )
    (=>
      (and (= N 0) (= O (+ (- 1) A)) (= P 1) (>= D 1) (new7 F G H I J K L M))
      (new23 A B C D E F G H I J K L M)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) )
    (=>
      (and (= N 0) (= O (+ (- 1) A)) (= P 1) (<= D (- 1)) (new7 F G H I J K L M))
      (new23 A B C D E F G H I J K L M)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) )
    (=>
      (and (= D 0) (= N 0) (= O 0) (= P (+ 10 A)) (= Q 10) (new7 F G H I J K L M))
      (new23 A B C D E F G H I J K L M)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) )
    (=>
      (and (= N 0) (= O (+ 1 A)) (= P 1) (>= B 1) (new23 O B C D E F G H I J K L M))
      (new22 A B C D E F G H I J K L M)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) )
    (=>
      (and (= N 0) (= O (+ 1 A)) (= P 1) (<= B (- 1)) (new23 O B C D E F G H I J K L M))
      (new22 A B C D E F G H I J K L M)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) )
    (=>
      (and (= B 0) (= N 0) (= O 0) (new23 A B C D E F G H I J K L M))
      (new22 A B C D E F G H I J K L M)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) )
    (=>
      (new22 A B C N N F G H I J K L M)
      (new21 A B C D E F G H I J K L M)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) )
    (=>
      (new21 A N N D E F G H I J K L M)
      (new20 A B C D E F G H I J K L M)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) )
    (=>
      (and (= N 0) (= O (+ (- 1) A)) (= P 1) (>= D 1) (new11 F G H I J K L M))
      (new19 A B C D E F G H I J K L M)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) )
    (=>
      (and (= N 0) (= O (+ (- 1) A)) (= P 1) (<= D (- 1)) (new11 F G H I J K L M))
      (new19 A B C D E F G H I J K L M)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) )
    (=>
      (and (= D 0) (= N 0) (= O 0) (= P (+ 10 A)) (= Q 10) (new11 F G H I J K L M))
      (new19 A B C D E F G H I J K L M)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) )
    (=>
      (and (= N 0) (= O (+ 1 A)) (= P 1) (>= B 1) (new19 O B C D E F G H I J K L M))
      (new18 A B C D E F G H I J K L M)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) )
    (=>
      (and (= N 0) (= O (+ 1 A)) (= P 1) (<= B (- 1)) (new19 O B C D E F G H I J K L M))
      (new18 A B C D E F G H I J K L M)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) )
    (=>
      (and (= B 0) (= N 0) (= O 0) (new19 A B C D E F G H I J K L M))
      (new18 A B C D E F G H I J K L M)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) )
    (=>
      (new18 A B C N N F G H I J K L M)
      (new17 A B C D E F G H I J K L M)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) )
    (=>
      (new17 A N N D E F G H I J K L M)
      (new16 A B C D E F G H I J K L M)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= A 0) (= J 0) (= K 0))
      (new15 A B C D E F G H I)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= I 1) (= J 0) (<= B 0) (new15 I A B C D E F G H))
      (new14 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= I 0) (= J 0) (>= B 1) (new15 I A B C D E F G H))
      (new14 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= I 0) (= J (- B A)) (>= B 1) (new12 A J C D E F G H))
      (new13 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= I 0) (<= B 0) (new14 A B C D E F G H))
      (new13 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (new13 A B C D E F G H)
      (new12 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= I 0) (= J (+ (- 1) A)) (= K 1) (>= E 1) (new12 J B C D E F G H))
      (new11 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= I 0) (= J (+ (- 1) A)) (= K 1) (<= E (- 1)) (new12 J B C D E F G H))
      (new11 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= E 0) (= I 0) (= J 0) (new12 A B C D E F G H))
      (new11 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and (= I 0) (new16 I J K L M A B C D E F G H))
      (new10 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= I 0) (>= C 1) (new10 A B C D E F G H))
      (new9 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= I 0) (<= C (- 1)) (new10 A B C D E F G H))
      (new9 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= C 0) (= I 0) (= J 0) (new11 A B C D E F G H))
      (new9 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (new9 A B C D I F G I)
      (new8 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (new8 A B I D E F I H)
      (new7 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and (= I 0) (new20 I J K L M A B C D E F G H))
      (new6 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= I 0) (>= E 1) (new6 A B C D E F G H))
      (new5 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= I 0) (<= E (- 1)) (new6 A B C D E F G H))
      (new5 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= E 0) (= I 0) (= J 0) (new7 A B C D E F G H))
      (new5 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= I 0) (= J (+ (- 1) A)) (= K 1) (>= C 1) (new5 J B C D E F G H))
      (new4 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= I 0) (= J (+ (- 1) A)) (= K 1) (<= C (- 1)) (new5 J B C D E F G H))
      (new4 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= C 0) (= I 0) (= J 0) (new5 A B C D E F G H))
      (new4 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (new4 A B C D I I G H)
      (new3 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (new3 A B I I E F G H)
      (new2 A B C D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= A 1) (new2 A B C D E F G H))
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
