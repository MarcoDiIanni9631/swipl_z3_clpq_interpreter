; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new13 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new12 ( Int Int Int Int Int Int ) Bool)
(declare-fun new11 ( Int Int Int Int Int Int ) Bool)
(declare-fun new10 ( Int Int Int Int Int Int ) Bool)
(declare-fun new9 ( Int Int Int Int Int Int ) Bool)
(declare-fun new8 ( Int Int Int Int Int Int ) Bool)
(declare-fun new7 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= A 0) (= H 0) (= I 0))
      (new13 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 1) (= H 0) (>= C 0) (new13 G A B C D E F))
      (new12 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 0) (= H 0) (<= C (- 1)) (new13 G A B C D E F))
      (new12 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) )
    (=>
      (and (= D (+ 1 G)) (= F (+ (- 1) H)) (= I (+ 1 G)) (= J 0) (= K (+ 1 G)) (= L 1) (= M (+ (- 1) H)) (= N 1) (= O (+ G H)) (>= G 0) (new10 A O C G E H))
      (new11 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= G 0) (<= D 0) (new12 A B C D E F))
      (new11 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (new11 A B C D E F)
      (new10 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) )
    (=>
      (and (= C (+ 1 G)) (= E (+ (- 1) H)) (= I (+ 1 G)) (= J 0) (= K (+ 1 G)) (= L 1) (= M (+ (- 1) H)) (= N 1) (= O (+ G H)) (>= G 0) (new8 A O G D H F))
      (new9 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= G 0) (= H 0) (= I 0) (<= C 0) (new10 A E C E E H))
      (new9 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (new9 A B C D E F)
      (new8 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (new7 A B C D E F G)
      (new7 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= A 0) (= H 0) (= I 0) (new7 A B C D E F G))
      (new6 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= H 0) (= I 0) (= J 0) (>= A 1) (new8 B B B E I G))
      (new6 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= H 0) (= I 0) (= J 0) (<= A (- 1)) (new8 B B B E I G))
      (new6 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 1) (= H 200) (<= A 200) (new6 G A B C D E F))
      (new5 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 0) (= H 200) (>= A 201) (new6 G A B C D E F))
      (new5 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (new4 A B C D E F G)
      (new4 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= A 0) (= H 0) (= I 0) (new4 A B C D E F G))
      (new3 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (>= A 1) (new5 B C D E F G))
      (new3 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= H 0) (<= A (- 1)) (new5 B C D E F G))
      (new3 A B C D E F G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 1) (= H 0) (>= A 0) (new3 G A B C D E F))
      (new2 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and (= G 0) (= H 0) (<= A (- 1)) (new3 G A B C D E F))
      (new2 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (new2 A B C D E F)
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
