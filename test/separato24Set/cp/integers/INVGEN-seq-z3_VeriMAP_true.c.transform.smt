; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new11 ( Int Int Int Int Int ) Bool)
(declare-fun new8 ( Int Int Int Int ) Bool)
(declare-fun new10 ( Int Int Int Int ) Bool)
(declare-fun new9 ( Int Int Int Int ) Bool)
(declare-fun new7 ( Int Int Int Int ) Bool)
(declare-fun new6 ( Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= A 0) (= F 0) (= G 0))
      (new11 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= F 0) (= G (+ 1 D)) (= H 1) (= I (+ (- 1) E)) (= J 1) (>= A 1) (new8 B C G I))
      (new11 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= F 0) (= G (+ 1 D)) (= H 1) (= I (+ (- 1) E)) (= J 1) (<= A (- 1)) (new8 B C G I))
      (new11 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= E 1) (= F 0) (>= D 1) (new11 E A B C D))
      (new10 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= E 0) (= F 0) (<= D 0) (new11 E A B C D))
      (new10 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= E (* 20 A)) (= F 20) (<= (- C (* 20 A)) (- 1)) (new10 A B C D))
      (new9 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (new9 A B C D)
      (new8 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= E (+ 128 (* 6 B))) (= F (* 6 B)) (= G 128) (= H 6) (= I (+ 1 C)) (= J 1) (= K (+ (- 1) D)) (= L 1) (>= (- (* 6 B) C) (- 127)) (new6 A B I K))
      (new7 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= E (+ 128 (* 6 B))) (= F (* 6 B)) (= G 128) (= H 6) (= I 0) (>= (- C (* 6 B)) 128) (new8 A B I D))
      (new7 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (new7 A B C D)
      (new6 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) )
    (=>
      (and (= E (+ 128 (* 6 B))) (= F (* 6 B)) (= G 128) (= H 6) (= I (+ 1 C)) (= J 1) (= K (+ 1 D)) (= L 1) (>= (- (* 6 B) C) (- 127)) (new4 A B I K))
      (new5 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= E (+ 128 (* 6 B))) (= F (* 6 B)) (= G 128) (= H 6) (= I 0) (>= (- C (* 6 B)) 128) (new6 A B I D))
      (new5 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (new5 A B C D)
      (new4 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and (= E (* 20 A)) (= F 20) (= G (+ 1 C)) (= H 1) (= I (+ 1 D)) (= J 1) (>= (- (* 20 A) C) 1) (new2 A B G I))
      (new3 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= E (* 20 A)) (= F 20) (= G 0) (>= (- C (* 20 A)) 0) (new4 A B G D))
      (new3 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (new3 A B C D)
      (new2 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and (= A 0) (= B 0) (new2 C D A B))
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
