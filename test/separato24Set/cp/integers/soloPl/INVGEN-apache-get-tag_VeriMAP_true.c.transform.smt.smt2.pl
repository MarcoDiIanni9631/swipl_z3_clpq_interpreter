% Automatically generated by smt2map




:- pred new43(int,int,int,int).
:- mode new43(in,in,in,in).
:- pred new42(int,int,int).
:- mode new42(in,in,in).
:- pred new41(int,int,int,int).
:- mode new41(in,in,in,in).
:- pred new40(int,int,int,int).
:- mode new40(in,in,in,in).
:- pred new39(int,int,int).
:- mode new39(in,in,in).
:- pred new38(int,int,int,int).
:- mode new38(in,in,in,in).
:- pred new37(int,int,int,int).
:- mode new37(in,in,in,in).
:- pred new36(int,int,int).
:- mode new36(in,in,in).
:- pred new35(int,int,int,int).
:- mode new35(in,in,in,in).
:- pred new34(int,int,int).
:- mode new34(in,in,in).
:- pred new33(int,int,int).
:- mode new33(in,in,in).
:- pred new22(int,int,int).
:- mode new22(in,in,in).
:- pred new32(int,int,int,int).
:- mode new32(in,in,in,in).
:- pred new31(int,int,int).
:- mode new31(in,in,in).
:- pred new30(int,int,int,int).
:- mode new30(in,in,in,in).
:- pred new29(int,int,int).
:- mode new29(in,in,in).
:- pred new28(int,int,int,int).
:- mode new28(in,in,in,in).
:- pred new27(int,int,int).
:- mode new27(in,in,in).
:- pred new26(int,int,int,int).
:- mode new26(in,in,in,in).
:- pred new25(int,int,int,int).
:- mode new25(in,in,in,in).
:- pred new15(int,int,int).
:- mode new15(in,in,in).
:- pred new24(int,int,int).
:- mode new24(in,in,in).
:- pred new23(int,int,int,int).
:- mode new23(in,in,in,in).
:- pred new21(int,int,int).
:- mode new21(in,in,in).
:- pred new20(int,int,int).
:- mode new20(in,in,in).
:- pred new19(int,int,int).
:- mode new19(in,in,in).
:- pred new18(int,int,int).
:- mode new18(in,in,in).
:- pred new17(int,int,int).
:- mode new17(in,in,in).
:- pred new16(int,int,int).
:- mode new16(in,in,in).
:- pred new14(int,int,int,int).
:- mode new14(in,in,in,in).
:- pred new13(int,int,int).
:- mode new13(in,in,in).
:- pred new12(int,int,int,int).
:- mode new12(in,in,in,in).
:- pred new11(int,int,int,int).
:- mode new11(in,in,in,in).
:- pred new3(int,int,int).
:- mode new3(in,in,in).
:- pred new10(int,int,int).
:- mode new10(in,in,in).
:- pred new9(int,int,int,int).
:- mode new9(in,in,in,in).
:- pred new8(int,int,int).
:- mode new8(in,in,in).
:- pred new7(int,int,int).
:- mode new7(in,in,in).
:- pred new6(int,int,int).
:- mode new6(in,in,in).
:- pred new5(int,int,int).
:- mode new5(in,in,in).
:- pred new4(int,int,int).
:- mode new4(in,in,in).
:- pred new2(int,int,int).
:- mode new2(in,in,in).
:- pred new1.
:- pred incorrect.
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

new43(A,B,C,D) :- constr((and(E=0,and(F=0,A=0)))).
new42(A,B,C) :- new43(D,A,B,C), constr((and(B-A=<0,D=1))).
new42(A,B,C) :- new43(D,A,B,C), constr((and(B-A>=1,D=0))).
new41(A,B,C,D) :- constr((and(E=0,and(F=0,A=0)))).
new41(A,B,C,D) :- new42(B,C,D), constr((and(A>=1,E=0))).
new41(A,B,C,D) :- new42(B,C,D), constr((and(A=< - 1,E=0))).
new40(A,B,C,D) :- constr((and(E=0,and(F=0,A=0)))).
new39(A,B,C) :- new40(D,A,B,C), constr((and(B-A=<0,D=1))).
new39(A,B,C) :- new40(D,A,B,C), constr((and(B-A>=1,D=0))).
new38(A,B,C,D) :- constr((and(E=0,and(F=0,A=0)))).
new38(A,B,C,D) :- new39(B,C,D), constr((and(A>=1,E=0))).
new38(A,B,C,D) :- new39(B,C,D), constr((and(A=< - 1,E=0))).
new37(A,B,C,D) :- constr((and(E=0,and(F=0,A=0)))).
new36(A,B,C) :- new37(D,A,B,C), constr((and(B-A=<0,D=1))).
new36(A,B,C) :- new37(D,A,B,C), constr((and(B-A>=1,D=0))).
new35(A,B,C,D) :- constr((and(E=0,and(F=0,A=0)))).
new35(A,B,C,D) :- new36(B,C,D), constr((and(A>=1,E=0))).
new35(A,B,C,D) :- new36(B,C,D), constr((and(A=< - 1,E=0))).
new34(A,B,C) :- new35(D,A,B,C), constr((and(B>=0,and(E=0,D=1)))).
new34(A,B,C) :- new35(D,A,B,C), constr((and(B=< - 1,and(E=0,D=0)))).
new33(A,A,B) :- new34(A,A,B), constr((true)).
new33(A,B,C) :- new22(A,B,C), constr((B-A>=1)).
new33(A,B,C) :- new22(A,B,C), constr((B-A=< - 1)).
new32(A,B,C,D) :- constr((and(E=0,and(F=0,A=0)))).
new32(A,B,C,D) :- new33(B,E,D), constr((and(A>=1,and(F=1,and(E=1+C,G=0))))).
new32(A,B,C,D) :- new33(B,E,D), constr((and(A=< - 1,and(F=1,and(E=1+C,G=0))))).
new31(A,B,C) :- new32(D,A,B,C), constr((and(B-A=<0,D=1))).
new31(A,B,C) :- new32(D,A,B,C), constr((and(B-A>=1,D=0))).
new30(A,B,C,D) :- constr((and(E=0,and(F=0,A=0)))).
new30(A,B,C,D) :- new31(B,C,D), constr((and(A>=1,E=0))).
new30(A,B,C,D) :- new31(B,C,D), constr((and(A=< - 1,E=0))).
new29(A,B,C) :- new30(D,A,B,C), constr((and(B>=0,and(E=0,D=1)))).
new29(A,B,C) :- new30(D,A,B,C), constr((and(B=< - 1,and(E=0,D=0)))).
new28(A,B,C,D) :- constr((and(E=0,and(F=0,A=0)))).
new27(A,B,C) :- new28(D,A,B,C), constr((and(B-A=<0,D=1))).
new27(A,B,C) :- new28(D,A,B,C), constr((and(B-A>=1,D=0))).
new26(A,B,C,D) :- constr((and(E=0,and(F=0,A=0)))).
new26(A,B,C,D) :- new27(B,C,D), constr((and(A>=1,E=0))).
new26(A,B,C,D) :- new27(B,C,D), constr((and(A=< - 1,E=0))).
new25(A,B,C,D) :- constr((and(E=0,and(F=0,A=0)))).
new25(A,B,C,D) :- new15(B,E,D), constr((and(A>=1,and(F=1,and(E=1+C,G=0))))).
new25(A,B,C,D) :- new15(B,E,D), constr((and(A=< - 1,and(F=1,and(E=1+C,G=0))))).
new24(A,B,C) :- new25(D,A,B,C), constr((and(B-A=<0,D=1))).
new24(A,B,C) :- new25(D,A,B,C), constr((and(B-A>=1,D=0))).
new23(A,B,C,D) :- constr((and(E=0,and(F=0,A=0)))).
new23(A,B,C,D) :- new24(B,C,D), constr((and(A>=1,E=0))).
new23(A,B,C,D) :- new24(B,C,D), constr((and(A=< - 1,E=0))).
new22(A,B,C) :- new23(D,A,B,C), constr((and(B>=0,and(E=0,D=1)))).
new22(A,B,C) :- new23(D,A,B,C), constr((and(B=< - 1,and(E=0,D=0)))).
new21(A,B,C) :- new26(D,A,B,C), constr((and(B>=0,and(E=0,D=1)))).
new21(A,B,C) :- new26(D,A,B,C), constr((and(B=< - 1,and(E=0,D=0)))).
new20(A,B,C) :- new21(A,B,C), constr((and(C>=1,D=0))).
new20(A,B,C) :- new21(A,B,C), constr((and(C=< - 1,D=0))).
new20(A,B,C) :- new22(A,B,C), constr((and(D=0,and(E=0,C=0)))).
new19(A,B,C) :- new29(A,B,C), constr((and(C>=1,D=0))).
new19(A,B,C) :- new29(A,B,C), constr((and(C=< - 1,D=0))).
new19(A,B,C) :- new22(A,B,C), constr((and(D=0,and(E=0,C=0)))).
new18(A,B,C) :- new19(A,B,C), constr((and(C>=1,D=0))).
new18(A,B,C) :- new19(A,B,C), constr((and(C=< - 1,D=0))).
new18(A,B,C) :- new20(A,B,C), constr((and(D=0,and(E=0,C=0)))).
new17(A,B,C) :- new38(D,A,B,C), constr((and(B>=0,and(E=0,D=1)))).
new17(A,B,C) :- new38(D,A,B,C), constr((and(B=< - 1,and(E=0,D=0)))).
new16(A,A,B) :- new17(A,A,B), constr((true)).
new16(A,B,C) :- new18(A,B,C), constr((B-A>=1)).
new16(A,B,C) :- new18(A,B,C), constr((B-A=< - 1)).
new15(A,B,C) :- new16(A,B,C), constr((true)).
new14(A,B,C,D) :- constr((and(E=0,and(F=0,A=0)))).
new14(A,B,C,D) :- new15(B,E,D), constr((and(A>=1,and(F=1,and(E=1+C,G=0))))).
new14(A,B,C,D) :- new15(B,E,D), constr((and(A=< - 1,and(F=1,and(E=1+C,G=0))))).
new13(A,B,C) :- new14(D,A,B,C), constr((and(B-A=<0,D=1))).
new13(A,B,C) :- new14(D,A,B,C), constr((and(B-A>=1,D=0))).
new12(A,B,C,D) :- constr((and(E=0,and(F=0,A=0)))).
new12(A,B,C,D) :- new13(B,C,D), constr((and(A>=1,E=0))).
new12(A,B,C,D) :- new13(B,C,D), constr((and(A=< - 1,E=0))).
new11(A,B,C,D) :- constr((and(E=0,and(F=0,A=0)))).
new11(A,B,C,D) :- new3(B,E,D), constr((and(A>=1,and(F=1,and(E=1+C,G=0))))).
new11(A,B,C,D) :- new3(B,E,D), constr((and(A=< - 1,and(F=1,and(E=1+C,G=0))))).
new10(A,B,C) :- new11(D,A,B,C), constr((and(B-A=<0,D=1))).
new10(A,B,C) :- new11(D,A,B,C), constr((and(B-A>=1,D=0))).
new9(A,B,C,D) :- constr((and(E=0,and(F=0,A=0)))).
new9(A,B,C,D) :- new10(B,C,D), constr((and(A>=1,E=0))).
new9(A,B,C,D) :- new10(B,C,D), constr((and(A=< - 1,E=0))).
new8(A,B,C) :- new9(D,A,B,C), constr((and(B>=0,and(E=0,D=1)))).
new8(A,B,C) :- new9(D,A,B,C), constr((and(B=< - 1,and(E=0,D=0)))).
new7(A,B,C) :- new12(D,A,B,C), constr((and(B>=0,and(E=0,D=1)))).
new7(A,B,C) :- new12(D,A,B,C), constr((and(B=< - 1,and(E=0,D=0)))).
new6(A,B,C) :- new7(A,B,C), constr((and(C>=1,D=0))).
new6(A,B,C) :- new7(A,B,C), constr((and(C=< - 1,D=0))).
new6(A,B,C) :- new8(A,B,C), constr((and(D=0,and(E=0,C=0)))).
new5(A,B,C) :- new41(D,A,B,C), constr((and(B>=0,and(E=0,D=1)))).
new5(A,B,C) :- new41(D,A,B,C), constr((and(B=< - 1,and(E=0,D=0)))).
new4(A,A,B) :- new5(A,A,B), constr((true)).
new4(A,B,C) :- new6(A,B,C), constr((B-A>=1)).
new4(A,B,C) :- new6(A,B,C), constr((B-A=< - 1)).
new3(A,B,C) :- new4(A,B,C), constr((true)).
new2(A,B,C) :- new3(D,E,C), 
          constr((and(A>=1,and(F=1,and(D= - 1+A,and(E=0,G=1)))))).
new1 :- new2(A,B,C), constr((true)).
incorrect :- new1, constr((true)).

