% Automatically generated by smt2map




:- pred new19(int,int,int,int,int).
:- mode new19(in,in,in,in,in).
:- pred new7(int,int,int,int,int).
:- mode new7(in,in,in,in,in).
:- pred new18(int,int,int,int,int).
:- mode new18(in,in,in,in,in).
:- pred new17(int,int,int,int,int).
:- mode new17(in,in,in,in,in).
:- pred new16(int,int,int,int,int).
:- mode new16(in,in,in,in,in).
:- pred new15(int,int,int,int,int).
:- mode new15(in,in,in,in,in).
:- pred new14(int,int,int,int,int).
:- mode new14(in,in,in,in,in).
:- pred new13(int,int,int,int,int).
:- mode new13(in,in,in,in,in).
:- pred new12(int,int,int,int,int).
:- mode new12(in,in,in,in,in).
:- pred new11(int,int,int,int,int).
:- mode new11(in,in,in,in,in).
:- pred new10(int,int,int,int,int).
:- mode new10(in,in,in,in,in).
:- pred new9(int,int,int,int,int).
:- mode new9(in,in,in,in,in).
:- pred new8(int,int,int,int,int).
:- mode new8(in,in,in,in,in).
:- pred new5(int,int,int,int,int).
:- mode new5(in,in,in,in,in).
:- pred new6(int,int,int,int,int).
:- mode new6(in,in,in,in,in).
:- pred new4(int,int,int,int,int,int).
:- mode new4(in,in,in,in,in,in).
:- pred new3(int,int,int,int,int,int).
:- mode new3(in,in,in,in,in,in).
:- pred new2(int,int,int,int,int).
:- mode new2(in,in,in,in,in).
:- pred new1.
:- pred incorrect.
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

new19(A,B,C,D,E) :- constr((and(D=< - 1,F= - 1))).
new19(A,B,C,D,E) :- new7(A,B,F,D,E), 
          constr((and(D>=0,and(G=1,and(F=1+C,H= - 1))))).
new18(A,B,C,D,E) :- constr((D-A>=0)).
new18(A,B,C,D,E) :- new19(A,B,C,D,E), constr((D-A=< - 1)).
new17(A,B,C,D,E) :- constr((and(B=< - 1,F= - 1))).
new17(A,B,C,D,E) :- new18(A,B,C,D,E), constr((and(B>=0,F= - 1))).
new16(A,B,C,D,E) :- constr((B-A>=0)).
new16(A,B,C,D,E) :- new17(A,B,C,D,E), constr((B-A=< - 1)).
new15(A,B,C,D,E) :- new16(A,B,C,D,E), constr((B-D>=1)).
new15(A,B,C,D,E) :- new16(A,B,C,D,E), constr((B-D=< - 1)).
new15(A,B,C,B,D) :- new7(A,B,E,B,D), constr((and(F=1,E=1+C))).
new14(A,B,C,D,E) :- new15(A,B,C,C,E), constr((and(E>=1,F=0))).
new14(A,B,C,D,E) :- new15(A,B,C,C,E), constr((and(E=< - 1,F=0))).
new14(A,B,C,D,E) :- new15(A,B,C,D,E), constr((and(F=0,and(G=0,E=0)))).
new13(A,B,C,D,E) :- new14(A,B,C,D,F), constr((true)).
new12(A,B,C,D,E) :- constr((and(D=< - 1,F= - 1))).
new12(A,B,C,D,E) :- new13(A,B,C,D,E), constr((and(D>=0,F= - 1))).
new11(A,B,C,D,E) :- constr((D-A>=0)).
new11(A,B,C,D,E) :- new12(A,B,C,D,E), constr((D-A=< - 1)).
new10(A,B,C,D,E) :- constr((and(C=< - 1,F= - 1))).
new10(A,B,C,D,E) :- new11(A,B,C,D,E), constr((and(C>=0,F= - 1))).
new9(A,B,C,D,E) :- constr((C-A>=0)).
new9(A,B,C,D,E) :- new10(A,B,C,D,E), constr((C-A=< - 1)).
new8(A,B,C,D,E) :- new9(A,B,C,D,E), constr((C-A=< - 1)).
new8(A,B,C,D,E) :- new5(A,F,C,D,E), constr((and(C-A>=0,and(G=1,F=1+B)))).
new7(A,B,C,D,E) :- new8(A,B,C,D,E), constr((true)).
new6(A,B,C,D,E) :- new7(A,B,F,B,E), 
          constr((and(A-B>=2,and(G=1,and(F=1+B,and(H=1,I= - 1+A)))))).
new5(A,B,C,D,E) :- new6(A,B,C,D,E), constr((true)).
new4(A,B,C,D,E,F) :- new4(A,B,C,D,E,F), constr((true)).
new3(A,B,C,D,E,F) :- new4(A,B,C,D,E,F), constr((and(G=0,and(H=0,A=0)))).
new3(A,B,C,D,E,F) :- new5(B,C,D,E,F), constr((and(A>=1,G=0))).
new3(A,B,C,D,E,F) :- new5(B,C,D,E,F), constr((and(A=< - 1,G=0))).
new2(A,B,C,D,E) :- new3(F,A,B,C,D,E), constr((and(A>=0,and(G=0,F=1)))).
new2(A,B,C,D,E) :- new3(F,A,B,C,D,E), constr((and(A=< - 1,and(G=0,F=0)))).
new1 :- new2(A,B,C,D,E), constr((and(D=0,and(C=0,B=0)))).
incorrect :- new1, constr((true)).

