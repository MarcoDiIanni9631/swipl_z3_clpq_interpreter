% Automatically generated by smt2map




:- pred new19(int,int,int).
:- mode new19(in,in,in).
:- pred new18(int,int,int).
:- mode new18(in,in,in).
:- pred new2(int,int,int).
:- mode new2(in,in,in).
:- pred new17(int,int,int).
:- mode new17(in,in,in).
:- pred new16(int,int,int).
:- mode new16(in,in,in).
:- pred new15(int,int,int).
:- mode new15(in,in,in).
:- pred new14(int,int,int).
:- mode new14(in,in,in).
:- pred new13(int,int,int).
:- mode new13(in,in,in).
:- pred new12(int,int,int).
:- mode new12(in,in,in).
:- pred new11(int,int,int).
:- mode new11(in,in,in).
:- pred new10(int,int,int).
:- mode new10(in,in,in).
:- pred new9(int,int,int).
:- mode new9(in,in,in).
:- pred new8(int,int,int).
:- mode new8(in,in,in).
:- pred new7(int,int,int).
:- mode new7(in,in,in).
:- pred new6(int,int,int).
:- mode new6(in,in,in).
:- pred new5(int,int,int,int).
:- mode new5(in,in,in,in).
:- pred new4(int,int,int).
:- mode new4(in,in,in).
:- pred new3(int,int,int).
:- mode new3(in,in,in).
:- pred new1.
:- pred incorrect.
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

new19(A,B,C) :- new18(D,B,C), constr((and(C-A>=1,and(E=1,D=1+A)))).
new19(A,B,C) :- new2(A,D,C), constr((and(A-C>=0,and(E=1,D=1+B)))).
new18(A,B,C) :- new19(A,B,C), constr((true)).
new17(A,B,C) :- new16(D,B,C), constr((and(C-A>=1,and(E=1,D=1+A)))).
new17(A,B,C) :- new18(D,B,C), constr((and(A-C>=0,D=1))).
new16(A,B,C) :- new17(A,B,C), constr((true)).
new15(A,B,C) :- new14(D,B,C), constr((and(C-A>=1,and(E=1,D=1+A)))).
new15(A,B,C) :- new16(D,B,C), constr((and(A-C>=0,D=1))).
new14(A,B,C) :- new15(A,B,C), constr((true)).
new13(A,B,C) :- new12(D,B,C), constr((and(C-A>=1,and(E=1,D=1+A)))).
new13(A,B,C) :- new14(D,B,C), constr((and(A-C>=0,D=1))).
new12(A,B,C) :- new13(A,B,C), constr((true)).
new11(A,B,C) :- new10(D,B,C), constr((and(C-A>=1,and(E=1,D=1+A)))).
new11(A,B,C) :- new12(D,B,C), constr((and(A-C>=0,D=1))).
new10(A,B,C) :- new11(A,B,C), constr((true)).
new9(A,B,C) :- new8(D,B,C), constr((and(C-A>=1,and(E=1,D=1+A)))).
new9(A,B,C) :- new10(D,B,C), constr((and(A-C>=0,D=1))).
new8(A,B,C) :- new9(A,B,C), constr((true)).
new7(A,B,C) :- new6(D,B,C), constr((and(C-A>=1,and(E=1,D=1+A)))).
new7(A,B,C) :- new8(D,B,C), constr((and(A-C>=0,D=1))).
new6(A,B,C) :- new7(A,B,C), constr((true)).
new5(A,B,C,D) :- constr((and(E=0,and(F=0,A=0)))).
new5(A,B,C,D) :- new6(E,C,D), constr((and(A>=1,and(E=1,F=0)))).
new5(A,B,C,D) :- new6(E,C,D), constr((and(A=< - 1,and(E=1,F=0)))).
new4(A,B,C) :- new5(D,A,B,C), constr((and(B>=1,and(E=1,D=1)))).
new4(A,B,C) :- new5(D,A,B,C), constr((and(B=<0,and(E=1,D=0)))).
new3(A,B,C) :- new4(A,B,C), constr((B-C=< - 1)).
new2(A,B,C) :- new3(A,B,C), constr((true)).
new1 :- new2(A,B,C), constr((B=1)).
incorrect :- new1, constr((true)).

