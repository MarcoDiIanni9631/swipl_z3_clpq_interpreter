; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new6 ( Int Int ) Bool)
(declare-fun new5 ( Int Int ) Bool)
(declare-fun new4 ( Int Int ) Bool)
(declare-fun new2 ( Int Int ) Bool)
(declare-fun new3 ( Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (= C 100) (<= B 99))
      (new6 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (= C 100) (>= B 101))
      (new5 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (= C 100) (<= B 100) (new6 A B))
      (new5 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= C 50) (= D (+ 1 A)) (= E 1) (<= A 49) (new2 D B))
      (new4 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= C 50) (= D (+ 1 A)) (= E 1) (= F (+ 1 B)) (= G 1) (>= A 50) (new2 D F))
      (new4 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (= C 100) (<= A 99) (new4 A B))
      (new3 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and (= C 100) (>= A 100) (new5 A B))
      (new3 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (new3 A B)
      (new2 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and (= A 0) (= B 50) (new2 A B))
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
