; Automatically generated by map2smt

(set-logic HORN)

(declare-fun new6 ( Int Int Int Int Int ) Bool)
(declare-fun new5 ( Int Int Int Int ) Bool)
(declare-fun new4 ( Int Int Int Int ) Bool)
(declare-fun new3 ( Int Int Int Int ) Bool)
(declare-fun new2 ( Int Int Int Int ) Bool)
(declare-fun new1 ( ) Bool)
(declare-fun incorrect ( ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= A 0) (= F 0) (= G 0))
      (new6 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= C 0) (= E 1) (= F 0) (= G 0) (new6 E A B C D))
      (new5 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= E 0) (= F 0) (>= C 1) (new6 E A B C D))
      (new5 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= E 0) (= F 0) (<= C (- 1)) (new6 E A B C D))
      (new5 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= E (+ 5 A)) (= F 5) (= G (+ 5 A)) (= H 0) (= I 5) (= J 5) (= K (+ 5 A)) (new5 A G H D))
      (new4 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) )
    (=>
      (and (= E (+ 3 A)) (= F 3) (= G (+ 3 A)) (= H 0) (= I 3) (= J 3) (= K (+ 3 A)) (new5 A G H D))
      (new3 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= E 0) (>= D 1) (new3 A B C D))
      (new2 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and (= E 0) (<= D (- 1)) (new3 A B C D))
      (new2 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and (= D 0) (= E 0) (= F 0) (new4 A B C D))
      (new2 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (new2 A B C D)
      new1
    )
  )
)
(assert 
 (=>
      new1
      incorrect
    ))

(assert (not incorrect))
(check-sat)
