; Automatically generated by map2smt

(set-logic HORN)

(declare-fun incorrect ( ) Bool)
(declare-fun new1 ( Int (Array Int Int) (Array Int Int) Int Int Int ) Bool)
(declare-fun new2 ( Int (Array Int Int) (Array Int Int) Int Int Int ) Bool)
(declare-fun new3 ( Int (Array Int Int) (Array Int Int) Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K (Array Int Int)) )
    (=>
      (and (= G (+ H F)) (= I (+ 1 F)) (= J 1) (>= (- A F) 1) (= (select C F) H) (= (store C F G ) K) (new3 A B K D E I))
      (new3 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= G 0) (= H (+ 42 E)) (= I 42) (<= (- D E) 41) (>= E 0) (>= (- F A) 0) (>= (- A E) 1) (= (select C E) D))
      (new3 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and (= G 0) (= H (+ 42 E)) (= I 42) (>= E 0) (>= (- F A) 0) (>= (- A E) 1) (>= (- D E) 43) (= (select C E) D))
      (new3 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J (Array Int Int)) )
    (=>
      (and (= G (+ 1 F)) (= H 1) (>= (- A F) 1) (= (select B F) I) (= (store C F I ) J) (new2 A B J D E G))
      (new2 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= G 0) (>= (- F A) 0) (new3 A B C D E G))
      (new2 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J (Array Int Int)) )
    (=>
      (and (= G 42) (= H (+ 1 F)) (= I 1) (>= (- A F) 1) (= (store B F G ) J) (new1 A J C D E H))
      (new1 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B (Array Int Int)) (C (Array Int Int)) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and (= G 0) (>= (- F A) 0) (new2 A B C D E G))
      (new1 A B C D E F)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D (Array Int Int)) (E (Array Int Int)) (F Int) (G Int) )
    (=>
      (and (= A 1) (= B 0) (>= C 1) (new1 C D E F G B))
      incorrect
    )
  )
)

(assert (not incorrect))
(check-sat)
