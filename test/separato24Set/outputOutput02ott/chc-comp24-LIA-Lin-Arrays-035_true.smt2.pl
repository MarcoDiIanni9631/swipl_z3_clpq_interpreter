% Automatically generated by smt2map




:- pred 'main@entry'(int).
:- mode 'main@entry'(in).
:- pred 'main@_bb'(int,int,int,array(int),int).
:- mode 'main@_bb'(in,in,in,in,in).
:- pred 'main@verifier.error.split'.
:- pred 'main@_bb1'(int,array(int),int,int,int,int).
:- mode 'main@_bb1'(in,in,in,in,in,in).
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

'main@entry'(A) :- constr((true)).
'main@_bb'(A,B,C,D,E) :- 'main@entry'(B), 
          constr((and(not(A=<0),and(or(not(F),not(G),H=I),and(or(not(F),not(G),D=H),and(or(not(F),not(G),J=0),and(or(not(F),not(G),K=L),and(or(not(F),not(G),C=J),and(or(not(F),not(G),E=K),and(or(not(G),and(F,G)),and(G=true,M=B))))))))))).
'main@_bb'(A,B,C,D,E) :- 'main@_bb1'(F,G,H,A,B,I), 
          constr((and(or(not(J),not(K),not(L)),and(or(not(J),not(M),N=G),and(or(not(J),not(M),D=N),and(or(not(J),not(M),O=P),and(or(not(J),not(M),Q=H),and(or(not(J),not(M),C=O),and(or(not(J),not(M),E=Q),and(or(not(M),and(J,M)),and(or(not(J),P=1+I),and(or(not(J),and(J,L)),and(M=true,K=(F=0)))))))))))))).
'main@verifier.error.split' :- 'main@_bb'(A,B,C,D,E), 
          constr((and(or(not(F),not(G),not(H)),and(or(not(I),J=(K=0)),and(or(not(I),and(L,I)),and(or(not(I),J),and(or(not(M),and(M,I)),and(or(not(N),and(N,M)),and(or(not(O),and(O,N)),and(or(not(F),P=(Q=<E)),and(or(not(F),Q=select(D,A)),and(or(not(F),K=ite(P,1,0)),and(or(not(F),and(F,H)),and(or(not(F),not(R)),and(or(not(L),and(L,F)),and(O=true,G=(C=0))))))))))))))))).
'main@_bb1'(A,B,C,D,E,F) :- 'main@_bb'(D,E,F,G,H), 
          constr((and(or(not(I),not(J),K=G),and(or(not(I),not(J),B=K),and(or(not(I),not(J),L=0),and(or(not(I),not(J),M=H),and(or(not(I),not(J),A=L),and(or(not(I),not(J),C=M),and(or(not(I),not(J),N),and(or(not(J),and(I,J)),and(J=true,N=(F=0)))))))))))).
'main@_bb1'(A,B,C,D,E,F) :- 'main@_bb1'(G,H,I,D,E,F), 
          constr((and(and(or(not(J),not(K=<0),D=<0),or(not(L),D=<0,not(M=<0)),or(not(L),not(N=<0),D=<0),or(not(L),O,not(P)),or(not(L),not(J),not(Q)),or(not(R),not(L),S=I),or(not(R),not(L),T=S),or(not(R),not(L),Q),or(not(U),and(U,J),and(R,L)),or(not(U),not(J),V=W),or(not(U),not(J),T=V),or(not(U),not(X),Y=Z),or(not(U),not(X),B=Y),or(not(U),not(X),A1=B1),or(not(U),not(X),C1=T),or(not(U),not(X),A=A1),or(not(U),not(X),C=C1),D1,or(not(J),W=select(Z,K)),or(not(J),not(D=<0)),or(not(J),and(L,J)),E1,or(not(L),Z=store(H,M,F1)),or(not(L),G1=E),H1,or(not(L),I1=F+G),J1,or(not(L),K1=select(Z,N)),or(not(L),L1=F+G),or(not(L),not(D=<0)),or(not(L),and(L,P)),or(not(R),L),or(not(X),and(U,X)),or(not(U),B1=1+G),X=true,O=(G=0)),and(D1=or(not(J),K=D+4*L1),and(E1=or(not(L),not((I=<K1)=Q)),and(H1=or(not(L),M=D+4*L1),J1=or(not(L),N=D+4*I1))))))).
ff :- 'main@verifier.error.split', constr((true)).

