% Automatically generated by smt2map




:- pred 'main@entry'(int).
:- mode 'main@entry'(in).
:- pred 'main@orig.main.exit.split'.
:- pred 'main@.lr.ph'(int,int,int).
:- mode 'main@.lr.ph'(in,in,in).
:- pred ff.
:- query ff/0.
:- pred constr(bool).
:- mode constr(in).
:- ignore constr/1.

'main@entry'(A) :- constr((true)).
'main@.lr.ph'(A,B,C) :- 'main@entry'(D), 
          constr((and(E=D,and(or(not(F),not(G),not(H)),and(or(not(F),not(I),J=0),and(or(not(F),not(I),K=1),and(or(not(F),not(I),B=J),and(or(not(F),not(I),C=K),and(or(not(I),and(F,I)),and(or(not(F),and(F,H)),and(I=true,not((1=<A)=G)))))))))))).
'main@.lr.ph'(A,B,C) :- 'main@.lr.ph'(A,D,E), 
          constr((and(F=(E=4),and(G=2+D,and(H=ite(F,- 10,G),and(I=1+E,and(or(not(J),not(K),L=H),and(or(not(J),not(K),M=I),and(or(not(J),not(K),B=L),and(or(not(J),not(K),C=M),and(or(not(J),not(K),N),and(or(not(K),and(J,K)),and(K=true,not((A=<E)=N)))))))))))))).
'main@orig.main.exit.split' :- 'main@entry'(A), 
          constr((and(B=A,and(or(not(C),not(D),E=F),and(or(not(C),not(D),F=0),and(or(not(C),not(D),G),and(or(not(C),H=(E=I)),and(or(not(C),J=or(K,H)),and(or(not(C),not(J=L)),and(or(not(C),K=(E=0)),and(or(not(C),I=2*M),and(or(not(C),and(C,D)),and(or(not(C),L),and(or(not(N),and(N,C)),and(or(not(O),not(C)),and(N=true,not((1=<M)=G))))))))))))))))).
'main@orig.main.exit.split' :- 'main@.lr.ph'(A,B,C), 
          constr((and(D=(C=4),and(E=2+B,and(F=1+C,and(G=ite(D,- 10,E),and(or(not(H),not(I),J=K),and(or(not(H),not(I),K=G),and(or(not(H),not(I),not(L)),and(or(not(M),not(H),N=O),and(or(not(M),not(H),O=J),and(or(not(H),and(H,I)),and(or(not(M),P=(N=Q)),and(or(not(M),R=or(S,P)),and(or(not(M),not(R=T)),and(or(not(M),S=(N=0)),and(or(not(M),Q=2*A),and(or(not(M),and(M,H)),and(or(not(M),T),and(or(not(U),and(U,M)),and(or(not(V),not(M)),and(U=true,not((A=<C)=L))))))))))))))))))))))).
ff :- 'main@orig.main.exit.split', constr((true)).

